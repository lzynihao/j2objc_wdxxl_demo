//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-codec-1.10-sources.jar!org/apache/commons/codec/digest/HmacAlgorithms.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/apache/commons/codec/digest/HmacAlgorithms.h"

@interface OrgApacheCommonsCodecDigestHmacAlgorithms () {
 @public
  NSString *algorithm_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsCodecDigestHmacAlgorithms, algorithm_, NSString *)

__attribute__((unused)) static void OrgApacheCommonsCodecDigestHmacAlgorithms_initWithNSString_withNSString_withInt_(OrgApacheCommonsCodecDigestHmacAlgorithms *self, NSString *algorithm, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsCodecDigestHmacAlgorithms)

OrgApacheCommonsCodecDigestHmacAlgorithms *OrgApacheCommonsCodecDigestHmacAlgorithms_values_[5];

@implementation OrgApacheCommonsCodecDigestHmacAlgorithms

- (NSString *)description {
  return algorithm_;
}

+ (IOSObjectArray *)values {
  return OrgApacheCommonsCodecDigestHmacAlgorithms_values();
}

+ (OrgApacheCommonsCodecDigestHmacAlgorithms *)valueOfWithNSString:(NSString *)name {
  return OrgApacheCommonsCodecDigestHmacAlgorithms_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheCommonsCodecDigestHmacAlgorithms;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsCodecDigestHmacAlgorithms;", 0x9, 1, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(description);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "HMAC_MD5", "LOrgApacheCommonsCodecDigestHmacAlgorithms;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "HMAC_SHA_1", "LOrgApacheCommonsCodecDigestHmacAlgorithms;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "HMAC_SHA_256", "LOrgApacheCommonsCodecDigestHmacAlgorithms;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "HMAC_SHA_384", "LOrgApacheCommonsCodecDigestHmacAlgorithms;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "HMAC_SHA_512", "LOrgApacheCommonsCodecDigestHmacAlgorithms;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "algorithm_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "valueOf", "LNSString;", &JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_MD5), &JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_1), &JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_256), &JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_384), &JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_512), "Ljava/lang/Enum<Lorg/apache/commons/codec/digest/HmacAlgorithms;>;" };
  static const J2ObjcClassInfo _OrgApacheCommonsCodecDigestHmacAlgorithms = { "HmacAlgorithms", "org.apache.commons.codec.digest", ptrTable, methods, fields, 7, 0x4011, 3, 6, -1, -1, -1, 8, -1 };
  return &_OrgApacheCommonsCodecDigestHmacAlgorithms;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsCodecDigestHmacAlgorithms class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_MD5) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheCommonsCodecDigestHmacAlgorithms_initWithNSString_withNSString_withInt_(e, @"HmacMD5", @"HMAC_MD5", 0);
    (JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_1) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheCommonsCodecDigestHmacAlgorithms_initWithNSString_withNSString_withInt_(e, @"HmacSHA1", @"HMAC_SHA_1", 1);
    (JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_256) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheCommonsCodecDigestHmacAlgorithms_initWithNSString_withNSString_withInt_(e, @"HmacSHA256", @"HMAC_SHA_256", 2);
    (JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_384) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheCommonsCodecDigestHmacAlgorithms_initWithNSString_withNSString_withInt_(e, @"HmacSHA384", @"HMAC_SHA_384", 3);
    (JreEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_512) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgApacheCommonsCodecDigestHmacAlgorithms_initWithNSString_withNSString_withInt_(e, @"HmacSHA512", @"HMAC_SHA_512", 4);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsCodecDigestHmacAlgorithms)
  }
}

@end

void OrgApacheCommonsCodecDigestHmacAlgorithms_initWithNSString_withNSString_withInt_(OrgApacheCommonsCodecDigestHmacAlgorithms *self, NSString *algorithm, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  JreStrongAssign(&self->algorithm_, algorithm);
}

IOSObjectArray *OrgApacheCommonsCodecDigestHmacAlgorithms_values() {
  OrgApacheCommonsCodecDigestHmacAlgorithms_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheCommonsCodecDigestHmacAlgorithms_values_ count:5 type:OrgApacheCommonsCodecDigestHmacAlgorithms_class_()];
}

OrgApacheCommonsCodecDigestHmacAlgorithms *OrgApacheCommonsCodecDigestHmacAlgorithms_valueOfWithNSString_(NSString *name) {
  OrgApacheCommonsCodecDigestHmacAlgorithms_initialize();
  for (int i = 0; i < 5; i++) {
    OrgApacheCommonsCodecDigestHmacAlgorithms *e = OrgApacheCommonsCodecDigestHmacAlgorithms_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheCommonsCodecDigestHmacAlgorithms *OrgApacheCommonsCodecDigestHmacAlgorithms_fromOrdinal(NSUInteger ordinal) {
  OrgApacheCommonsCodecDigestHmacAlgorithms_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return OrgApacheCommonsCodecDigestHmacAlgorithms_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCodecDigestHmacAlgorithms)
