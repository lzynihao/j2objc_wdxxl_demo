//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/RandomUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/util/Random.h"
#include "org/apache/commons/lang3/RandomUtils.h"
#include "org/apache/commons/lang3/Validate.h"

inline JavaUtilRandom *OrgApacheCommonsLang3RandomUtils_get_RANDOM(void);
static JavaUtilRandom *OrgApacheCommonsLang3RandomUtils_RANDOM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3RandomUtils, RANDOM, JavaUtilRandom *)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsLang3RandomUtils)

@implementation OrgApacheCommonsLang3RandomUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3RandomUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSByteArray *)nextBytesWithInt:(jint)count {
  return OrgApacheCommonsLang3RandomUtils_nextBytesWithInt_(count);
}

+ (jint)nextIntWithInt:(jint)startInclusive
               withInt:(jint)endExclusive {
  return OrgApacheCommonsLang3RandomUtils_nextIntWithInt_withInt_(startInclusive, endExclusive);
}

+ (jlong)nextLongWithLong:(jlong)startInclusive
                 withLong:(jlong)endExclusive {
  return OrgApacheCommonsLang3RandomUtils_nextLongWithLong_withLong_(startInclusive, endExclusive);
}

+ (jdouble)nextDoubleWithDouble:(jdouble)startInclusive
                     withDouble:(jdouble)endInclusive {
  return OrgApacheCommonsLang3RandomUtils_nextDoubleWithDouble_withDouble_(startInclusive, endInclusive);
}

+ (jfloat)nextFloatWithFloat:(jfloat)startInclusive
                   withFloat:(jfloat)endInclusive {
  return OrgApacheCommonsLang3RandomUtils_nextFloatWithFloat_withFloat_(startInclusive, endInclusive);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "J", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "D", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "F", 0x9, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(nextBytesWithInt:);
  methods[2].selector = @selector(nextIntWithInt:withInt:);
  methods[3].selector = @selector(nextLongWithLong:withLong:);
  methods[4].selector = @selector(nextDoubleWithDouble:withDouble:);
  methods[5].selector = @selector(nextFloatWithFloat:withFloat:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "RANDOM", "LJavaUtilRandom;", .constantValue.asLong = 0, 0x1a, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "nextBytes", "I", "nextInt", "II", "nextLong", "JJ", "nextDouble", "DD", "nextFloat", "FF", &OrgApacheCommonsLang3RandomUtils_RANDOM };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3RandomUtils = { "RandomUtils", "org.apache.commons.lang3", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3RandomUtils;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsLang3RandomUtils class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3RandomUtils_RANDOM, new_JavaUtilRandom_init());
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsLang3RandomUtils)
  }
}

@end

void OrgApacheCommonsLang3RandomUtils_init(OrgApacheCommonsLang3RandomUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3RandomUtils *new_OrgApacheCommonsLang3RandomUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3RandomUtils, init)
}

OrgApacheCommonsLang3RandomUtils *create_OrgApacheCommonsLang3RandomUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3RandomUtils, init)
}

IOSByteArray *OrgApacheCommonsLang3RandomUtils_nextBytesWithInt_(jint count) {
  OrgApacheCommonsLang3RandomUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(count >= 0, @"Count cannot be negative.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  IOSByteArray *result = [IOSByteArray arrayWithLength:count];
  [((JavaUtilRandom *) nil_chk(OrgApacheCommonsLang3RandomUtils_RANDOM)) nextBytesWithByteArray:result];
  return result;
}

jint OrgApacheCommonsLang3RandomUtils_nextIntWithInt_withInt_(jint startInclusive, jint endExclusive) {
  OrgApacheCommonsLang3RandomUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(endExclusive >= startInclusive, @"Start value must be smaller or equal to end value.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(startInclusive >= 0, @"Both range values must be non-negative.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  if (startInclusive == endExclusive) {
    return startInclusive;
  }
  return startInclusive + [((JavaUtilRandom *) nil_chk(OrgApacheCommonsLang3RandomUtils_RANDOM)) nextIntWithInt:endExclusive - startInclusive];
}

jlong OrgApacheCommonsLang3RandomUtils_nextLongWithLong_withLong_(jlong startInclusive, jlong endExclusive) {
  OrgApacheCommonsLang3RandomUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(endExclusive >= startInclusive, @"Start value must be smaller or equal to end value.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(startInclusive >= 0, @"Both range values must be non-negative.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  if (startInclusive == endExclusive) {
    return startInclusive;
  }
  return JreFpToLong(OrgApacheCommonsLang3RandomUtils_nextDoubleWithDouble_withDouble_(startInclusive, endExclusive));
}

jdouble OrgApacheCommonsLang3RandomUtils_nextDoubleWithDouble_withDouble_(jdouble startInclusive, jdouble endInclusive) {
  OrgApacheCommonsLang3RandomUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(endInclusive >= startInclusive, @"Start value must be smaller or equal to end value.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(startInclusive >= 0, @"Both range values must be non-negative.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  if (startInclusive == endInclusive) {
    return startInclusive;
  }
  return startInclusive + ((endInclusive - startInclusive) * [((JavaUtilRandom *) nil_chk(OrgApacheCommonsLang3RandomUtils_RANDOM)) nextDouble]);
}

jfloat OrgApacheCommonsLang3RandomUtils_nextFloatWithFloat_withFloat_(jfloat startInclusive, jfloat endInclusive) {
  OrgApacheCommonsLang3RandomUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(endInclusive >= startInclusive, @"Start value must be smaller or equal to end value.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(startInclusive >= 0, @"Both range values must be non-negative.", [IOSObjectArray arrayWithLength:0 type:NSObject_class_()]);
  if (startInclusive == endInclusive) {
    return startInclusive;
  }
  return startInclusive + ((endInclusive - startInclusive) * [((JavaUtilRandom *) nil_chk(OrgApacheCommonsLang3RandomUtils_RANDOM)) nextFloat]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3RandomUtils)
