//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/reflect/InheritanceUtils.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "org/apache/commons/lang3/BooleanUtils.h"
#include "org/apache/commons/lang3/reflect/InheritanceUtils.h"

@implementation OrgApacheCommonsLang3ReflectInheritanceUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3ReflectInheritanceUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)distanceWithIOSClass:(IOSClass *)child
                withIOSClass:(IOSClass *)parent {
  return OrgApacheCommonsLang3ReflectInheritanceUtils_distanceWithIOSClass_withIOSClass_(child, parent);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(distanceWithIOSClass:withIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "distance", "LIOSClass;LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;)I" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3ReflectInheritanceUtils = { "InheritanceUtils", "org.apache.commons.lang3.reflect", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3ReflectInheritanceUtils;
}

@end

void OrgApacheCommonsLang3ReflectInheritanceUtils_init(OrgApacheCommonsLang3ReflectInheritanceUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3ReflectInheritanceUtils *new_OrgApacheCommonsLang3ReflectInheritanceUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ReflectInheritanceUtils, init)
}

OrgApacheCommonsLang3ReflectInheritanceUtils *create_OrgApacheCommonsLang3ReflectInheritanceUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ReflectInheritanceUtils, init)
}

jint OrgApacheCommonsLang3ReflectInheritanceUtils_distanceWithIOSClass_withIOSClass_(IOSClass *child, IOSClass *parent) {
  OrgApacheCommonsLang3ReflectInheritanceUtils_initialize();
  if (child == nil || parent == nil) {
    return -1;
  }
  if ([child isEqual:parent]) {
    return 0;
  }
  IOSClass *cParent = [child getSuperclass];
  jint d = OrgApacheCommonsLang3BooleanUtils_toIntegerWithBoolean_([parent isEqual:cParent]);
  if (d == 1) {
    return d;
  }
  d += OrgApacheCommonsLang3ReflectInheritanceUtils_distanceWithIOSClass_withIOSClass_(cParent, parent);
  return d > 0 ? d + 1 : -1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3ReflectInheritanceUtils)
