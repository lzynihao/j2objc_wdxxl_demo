//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/BooleanUtils.java
//

#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/NullPointerException.h"
#include "org/apache/commons/lang3/ArrayUtils.h"
#include "org/apache/commons/lang3/BooleanUtils.h"
#include "org/apache/commons/lang3/math/NumberUtils.h"

@implementation OrgApacheCommonsLang3BooleanUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BooleanUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaLangBoolean *)negateWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_negateWithJavaLangBoolean_(bool_);
}

+ (jboolean)isTrueWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_isTrueWithJavaLangBoolean_(bool_);
}

+ (jboolean)isNotTrueWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_isNotTrueWithJavaLangBoolean_(bool_);
}

+ (jboolean)isFalseWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_isFalseWithJavaLangBoolean_(bool_);
}

+ (jboolean)isNotFalseWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_isNotFalseWithJavaLangBoolean_(bool_);
}

+ (jboolean)toBooleanWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanWithJavaLangBoolean_(bool_);
}

+ (jboolean)toBooleanDefaultIfNullWithJavaLangBoolean:(JavaLangBoolean *)bool_
                                          withBoolean:(jboolean)valueIfNull {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanDefaultIfNullWithJavaLangBoolean_withBoolean_(bool_, valueIfNull);
}

+ (jboolean)toBooleanWithInt:(jint)value {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanWithInt_(value);
}

+ (JavaLangBoolean *)toBooleanObjectWithInt:(jint)value {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithInt_(value);
}

+ (JavaLangBoolean *)toBooleanObjectWithJavaLangInteger:(JavaLangInteger *)value {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithJavaLangInteger_(value);
}

+ (jboolean)toBooleanWithInt:(jint)value
                     withInt:(jint)trueValue
                     withInt:(jint)falseValue {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanWithInt_withInt_withInt_(value, trueValue, falseValue);
}

+ (jboolean)toBooleanWithJavaLangInteger:(JavaLangInteger *)value
                     withJavaLangInteger:(JavaLangInteger *)trueValue
                     withJavaLangInteger:(JavaLangInteger *)falseValue {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanWithJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(value, trueValue, falseValue);
}

+ (JavaLangBoolean *)toBooleanObjectWithInt:(jint)value
                                    withInt:(jint)trueValue
                                    withInt:(jint)falseValue
                                    withInt:(jint)nullValue {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithInt_withInt_withInt_withInt_(value, trueValue, falseValue, nullValue);
}

+ (JavaLangBoolean *)toBooleanObjectWithJavaLangInteger:(JavaLangInteger *)value
                                    withJavaLangInteger:(JavaLangInteger *)trueValue
                                    withJavaLangInteger:(JavaLangInteger *)falseValue
                                    withJavaLangInteger:(JavaLangInteger *)nullValue {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(value, trueValue, falseValue, nullValue);
}

+ (jint)toIntegerWithBoolean:(jboolean)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toIntegerWithBoolean_(bool_);
}

+ (JavaLangInteger *)toIntegerObjectWithBoolean:(jboolean)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toIntegerObjectWithBoolean_(bool_);
}

+ (JavaLangInteger *)toIntegerObjectWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toIntegerObjectWithJavaLangBoolean_(bool_);
}

+ (jint)toIntegerWithBoolean:(jboolean)bool_
                     withInt:(jint)trueValue
                     withInt:(jint)falseValue {
  return OrgApacheCommonsLang3BooleanUtils_toIntegerWithBoolean_withInt_withInt_(bool_, trueValue, falseValue);
}

+ (jint)toIntegerWithJavaLangBoolean:(JavaLangBoolean *)bool_
                             withInt:(jint)trueValue
                             withInt:(jint)falseValue
                             withInt:(jint)nullValue {
  return OrgApacheCommonsLang3BooleanUtils_toIntegerWithJavaLangBoolean_withInt_withInt_withInt_(bool_, trueValue, falseValue, nullValue);
}

+ (JavaLangInteger *)toIntegerObjectWithBoolean:(jboolean)bool_
                            withJavaLangInteger:(JavaLangInteger *)trueValue
                            withJavaLangInteger:(JavaLangInteger *)falseValue {
  return OrgApacheCommonsLang3BooleanUtils_toIntegerObjectWithBoolean_withJavaLangInteger_withJavaLangInteger_(bool_, trueValue, falseValue);
}

+ (JavaLangInteger *)toIntegerObjectWithJavaLangBoolean:(JavaLangBoolean *)bool_
                                    withJavaLangInteger:(JavaLangInteger *)trueValue
                                    withJavaLangInteger:(JavaLangInteger *)falseValue
                                    withJavaLangInteger:(JavaLangInteger *)nullValue {
  return OrgApacheCommonsLang3BooleanUtils_toIntegerObjectWithJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(bool_, trueValue, falseValue, nullValue);
}

+ (JavaLangBoolean *)toBooleanObjectWithNSString:(NSString *)str {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithNSString_(str);
}

+ (JavaLangBoolean *)toBooleanObjectWithNSString:(NSString *)str
                                    withNSString:(NSString *)trueString
                                    withNSString:(NSString *)falseString
                                    withNSString:(NSString *)nullString {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithNSString_withNSString_withNSString_withNSString_(str, trueString, falseString, nullString);
}

+ (jboolean)toBooleanWithNSString:(NSString *)str {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanWithNSString_(str);
}

+ (jboolean)toBooleanWithNSString:(NSString *)str
                     withNSString:(NSString *)trueString
                     withNSString:(NSString *)falseString {
  return OrgApacheCommonsLang3BooleanUtils_toBooleanWithNSString_withNSString_withNSString_(str, trueString, falseString);
}

+ (NSString *)toStringTrueFalseWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toStringTrueFalseWithJavaLangBoolean_(bool_);
}

+ (NSString *)toStringOnOffWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toStringOnOffWithJavaLangBoolean_(bool_);
}

+ (NSString *)toStringYesNoWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toStringYesNoWithJavaLangBoolean_(bool_);
}

+ (NSString *)toStringWithJavaLangBoolean:(JavaLangBoolean *)bool_
                             withNSString:(NSString *)trueString
                             withNSString:(NSString *)falseString
                             withNSString:(NSString *)nullString {
  return OrgApacheCommonsLang3BooleanUtils_toStringWithJavaLangBoolean_withNSString_withNSString_withNSString_(bool_, trueString, falseString, nullString);
}

+ (NSString *)toStringTrueFalseWithBoolean:(jboolean)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toStringTrueFalseWithBoolean_(bool_);
}

+ (NSString *)toStringOnOffWithBoolean:(jboolean)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toStringOnOffWithBoolean_(bool_);
}

+ (NSString *)toStringYesNoWithBoolean:(jboolean)bool_ {
  return OrgApacheCommonsLang3BooleanUtils_toStringYesNoWithBoolean_(bool_);
}

+ (NSString *)toStringWithBoolean:(jboolean)bool_
                     withNSString:(NSString *)trueString
                     withNSString:(NSString *)falseString {
  return OrgApacheCommonsLang3BooleanUtils_toStringWithBoolean_withNSString_withNSString_(bool_, trueString, falseString);
}

+ (jboolean)and__WithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3BooleanUtils_and__WithBooleanArray_(array);
}

+ (JavaLangBoolean *)and__WithJavaLangBooleanArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3BooleanUtils_and__WithJavaLangBooleanArray_(array);
}

+ (jboolean)or__WithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3BooleanUtils_or__WithBooleanArray_(array);
}

+ (JavaLangBoolean *)or__WithJavaLangBooleanArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3BooleanUtils_or__WithJavaLangBooleanArray_(array);
}

+ (jboolean)xor__WithBooleanArray:(IOSBooleanArray *)array {
  return OrgApacheCommonsLang3BooleanUtils_xor__WithBooleanArray_(array);
}

+ (JavaLangBoolean *)xor__WithJavaLangBooleanArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3BooleanUtils_xor__WithJavaLangBooleanArray_(array);
}

+ (jint)compareWithBoolean:(jboolean)x
               withBoolean:(jboolean)y {
  return OrgApacheCommonsLang3BooleanUtils_compareWithBoolean_withBoolean_(x, y);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 6, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 6, 9, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x9, 10, 9, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x9, 10, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 6, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 6, 13, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x9, 10, 14, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x9, 10, 15, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 16, 17, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x9, 18, 17, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x9, 18, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 16, 19, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 16, 20, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x9, 18, 21, -1, -1, -1, -1 },
    { NULL, "LJavaLangInteger;", 0x9, 18, 22, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x9, 10, 23, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x9, 10, 24, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 6, 23, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 6, 25, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 26, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 27, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 28, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 29, 30, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 26, 17, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 27, 17, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 28, 17, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 29, 31, -1, -1, -1, -1 },
    { NULL, "Z", 0x89, 32, 33, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x89, 32, 34, -1, -1, -1, -1 },
    { NULL, "Z", 0x89, 35, 33, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x89, 35, 34, -1, -1, -1, -1 },
    { NULL, "Z", 0x89, 36, 33, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x89, 36, 34, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 37, 38, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(negateWithJavaLangBoolean:);
  methods[2].selector = @selector(isTrueWithJavaLangBoolean:);
  methods[3].selector = @selector(isNotTrueWithJavaLangBoolean:);
  methods[4].selector = @selector(isFalseWithJavaLangBoolean:);
  methods[5].selector = @selector(isNotFalseWithJavaLangBoolean:);
  methods[6].selector = @selector(toBooleanWithJavaLangBoolean:);
  methods[7].selector = @selector(toBooleanDefaultIfNullWithJavaLangBoolean:withBoolean:);
  methods[8].selector = @selector(toBooleanWithInt:);
  methods[9].selector = @selector(toBooleanObjectWithInt:);
  methods[10].selector = @selector(toBooleanObjectWithJavaLangInteger:);
  methods[11].selector = @selector(toBooleanWithInt:withInt:withInt:);
  methods[12].selector = @selector(toBooleanWithJavaLangInteger:withJavaLangInteger:withJavaLangInteger:);
  methods[13].selector = @selector(toBooleanObjectWithInt:withInt:withInt:withInt:);
  methods[14].selector = @selector(toBooleanObjectWithJavaLangInteger:withJavaLangInteger:withJavaLangInteger:withJavaLangInteger:);
  methods[15].selector = @selector(toIntegerWithBoolean:);
  methods[16].selector = @selector(toIntegerObjectWithBoolean:);
  methods[17].selector = @selector(toIntegerObjectWithJavaLangBoolean:);
  methods[18].selector = @selector(toIntegerWithBoolean:withInt:withInt:);
  methods[19].selector = @selector(toIntegerWithJavaLangBoolean:withInt:withInt:withInt:);
  methods[20].selector = @selector(toIntegerObjectWithBoolean:withJavaLangInteger:withJavaLangInteger:);
  methods[21].selector = @selector(toIntegerObjectWithJavaLangBoolean:withJavaLangInteger:withJavaLangInteger:withJavaLangInteger:);
  methods[22].selector = @selector(toBooleanObjectWithNSString:);
  methods[23].selector = @selector(toBooleanObjectWithNSString:withNSString:withNSString:withNSString:);
  methods[24].selector = @selector(toBooleanWithNSString:);
  methods[25].selector = @selector(toBooleanWithNSString:withNSString:withNSString:);
  methods[26].selector = @selector(toStringTrueFalseWithJavaLangBoolean:);
  methods[27].selector = @selector(toStringOnOffWithJavaLangBoolean:);
  methods[28].selector = @selector(toStringYesNoWithJavaLangBoolean:);
  methods[29].selector = @selector(toStringWithJavaLangBoolean:withNSString:withNSString:withNSString:);
  methods[30].selector = @selector(toStringTrueFalseWithBoolean:);
  methods[31].selector = @selector(toStringOnOffWithBoolean:);
  methods[32].selector = @selector(toStringYesNoWithBoolean:);
  methods[33].selector = @selector(toStringWithBoolean:withNSString:withNSString:);
  methods[34].selector = @selector(and__WithBooleanArray:);
  methods[35].selector = @selector(and__WithJavaLangBooleanArray:);
  methods[36].selector = @selector(or__WithBooleanArray:);
  methods[37].selector = @selector(or__WithJavaLangBooleanArray:);
  methods[38].selector = @selector(xor__WithBooleanArray:);
  methods[39].selector = @selector(xor__WithJavaLangBooleanArray:);
  methods[40].selector = @selector(compareWithBoolean:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "negate", "LJavaLangBoolean;", "isTrue", "isNotTrue", "isFalse", "isNotFalse", "toBoolean", "toBooleanDefaultIfNull", "LJavaLangBoolean;Z", "I", "toBooleanObject", "LJavaLangInteger;", "III", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "IIII", "LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "toInteger", "Z", "toIntegerObject", "ZII", "LJavaLangBoolean;III", "ZLJavaLangInteger;LJavaLangInteger;", "LJavaLangBoolean;LJavaLangInteger;LJavaLangInteger;LJavaLangInteger;", "LNSString;", "LNSString;LNSString;LNSString;LNSString;", "LNSString;LNSString;LNSString;", "toStringTrueFalse", "toStringOnOff", "toStringYesNo", "toString", "LJavaLangBoolean;LNSString;LNSString;LNSString;", "ZLNSString;LNSString;", "and", "[Z", "[LJavaLangBoolean;", "or", "xor", "compare", "ZZ" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BooleanUtils = { "BooleanUtils", "org.apache.commons.lang3", ptrTable, methods, NULL, 7, 0x1, 41, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BooleanUtils;
}

@end

void OrgApacheCommonsLang3BooleanUtils_init(OrgApacheCommonsLang3BooleanUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3BooleanUtils *new_OrgApacheCommonsLang3BooleanUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BooleanUtils, init)
}

OrgApacheCommonsLang3BooleanUtils *create_OrgApacheCommonsLang3BooleanUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BooleanUtils, init)
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_negateWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (bool_ == nil) {
    return nil;
  }
  return [bool_ booleanValue] ? JreLoadStatic(JavaLangBoolean, FALSE) : JreLoadStatic(JavaLangBoolean, TRUE);
}

jboolean OrgApacheCommonsLang3BooleanUtils_isTrueWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return [((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, TRUE))) isEqual:bool_];
}

jboolean OrgApacheCommonsLang3BooleanUtils_isNotTrueWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return !OrgApacheCommonsLang3BooleanUtils_isTrueWithJavaLangBoolean_(bool_);
}

jboolean OrgApacheCommonsLang3BooleanUtils_isFalseWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return [((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, FALSE))) isEqual:bool_];
}

jboolean OrgApacheCommonsLang3BooleanUtils_isNotFalseWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return !OrgApacheCommonsLang3BooleanUtils_isFalseWithJavaLangBoolean_(bool_);
}

jboolean OrgApacheCommonsLang3BooleanUtils_toBooleanWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return bool_ != nil && [bool_ booleanValue];
}

jboolean OrgApacheCommonsLang3BooleanUtils_toBooleanDefaultIfNullWithJavaLangBoolean_withBoolean_(JavaLangBoolean *bool_, jboolean valueIfNull) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (bool_ == nil) {
    return valueIfNull;
  }
  return [bool_ booleanValue];
}

jboolean OrgApacheCommonsLang3BooleanUtils_toBooleanWithInt_(jint value) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return value != 0;
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithInt_(jint value) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return value == 0 ? JreLoadStatic(JavaLangBoolean, FALSE) : JreLoadStatic(JavaLangBoolean, TRUE);
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithJavaLangInteger_(JavaLangInteger *value) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (value == nil) {
    return nil;
  }
  return [value intValue] == 0 ? JreLoadStatic(JavaLangBoolean, FALSE) : JreLoadStatic(JavaLangBoolean, TRUE);
}

jboolean OrgApacheCommonsLang3BooleanUtils_toBooleanWithInt_withInt_withInt_(jint value, jint trueValue, jint falseValue) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (value == trueValue) {
    return true;
  }
  if (value == falseValue) {
    return false;
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Integer did not match either specified value");
}

jboolean OrgApacheCommonsLang3BooleanUtils_toBooleanWithJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(JavaLangInteger *value, JavaLangInteger *trueValue, JavaLangInteger *falseValue) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (value == nil) {
    if (trueValue == nil) {
      return true;
    }
    if (falseValue == nil) {
      return false;
    }
  }
  else if ([value isEqual:trueValue]) {
    return true;
  }
  else if ([value isEqual:falseValue]) {
    return false;
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Integer did not match either specified value");
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithInt_withInt_withInt_withInt_(jint value, jint trueValue, jint falseValue, jint nullValue) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (value == trueValue) {
    return JreLoadStatic(JavaLangBoolean, TRUE);
  }
  if (value == falseValue) {
    return JreLoadStatic(JavaLangBoolean, FALSE);
  }
  if (value == nullValue) {
    return nil;
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Integer did not match any specified value");
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithJavaLangInteger_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(JavaLangInteger *value, JavaLangInteger *trueValue, JavaLangInteger *falseValue, JavaLangInteger *nullValue) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (value == nil) {
    if (trueValue == nil) {
      return JreLoadStatic(JavaLangBoolean, TRUE);
    }
    if (falseValue == nil) {
      return JreLoadStatic(JavaLangBoolean, FALSE);
    }
    if (nullValue == nil) {
      return nil;
    }
  }
  else if ([value isEqual:trueValue]) {
    return JreLoadStatic(JavaLangBoolean, TRUE);
  }
  else if ([value isEqual:falseValue]) {
    return JreLoadStatic(JavaLangBoolean, FALSE);
  }
  else if ([value isEqual:nullValue]) {
    return nil;
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Integer did not match any specified value");
}

jint OrgApacheCommonsLang3BooleanUtils_toIntegerWithBoolean_(jboolean bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return bool_ ? 1 : 0;
}

JavaLangInteger *OrgApacheCommonsLang3BooleanUtils_toIntegerObjectWithBoolean_(jboolean bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return bool_ ? JreLoadStatic(OrgApacheCommonsLang3MathNumberUtils, INTEGER_ONE) : JreLoadStatic(OrgApacheCommonsLang3MathNumberUtils, INTEGER_ZERO);
}

JavaLangInteger *OrgApacheCommonsLang3BooleanUtils_toIntegerObjectWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (bool_ == nil) {
    return nil;
  }
  return [bool_ booleanValue] ? JreLoadStatic(OrgApacheCommonsLang3MathNumberUtils, INTEGER_ONE) : JreLoadStatic(OrgApacheCommonsLang3MathNumberUtils, INTEGER_ZERO);
}

jint OrgApacheCommonsLang3BooleanUtils_toIntegerWithBoolean_withInt_withInt_(jboolean bool_, jint trueValue, jint falseValue) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return bool_ ? trueValue : falseValue;
}

jint OrgApacheCommonsLang3BooleanUtils_toIntegerWithJavaLangBoolean_withInt_withInt_withInt_(JavaLangBoolean *bool_, jint trueValue, jint falseValue, jint nullValue) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (bool_ == nil) {
    return nullValue;
  }
  return [bool_ booleanValue] ? trueValue : falseValue;
}

JavaLangInteger *OrgApacheCommonsLang3BooleanUtils_toIntegerObjectWithBoolean_withJavaLangInteger_withJavaLangInteger_(jboolean bool_, JavaLangInteger *trueValue, JavaLangInteger *falseValue) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return bool_ ? trueValue : falseValue;
}

JavaLangInteger *OrgApacheCommonsLang3BooleanUtils_toIntegerObjectWithJavaLangBoolean_withJavaLangInteger_withJavaLangInteger_withJavaLangInteger_(JavaLangBoolean *bool_, JavaLangInteger *trueValue, JavaLangInteger *falseValue, JavaLangInteger *nullValue) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (bool_ == nil) {
    return nullValue;
  }
  return [bool_ booleanValue] ? trueValue : falseValue;
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithNSString_(NSString *str) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if ([@"true" isEqual:str]) {
    return JreLoadStatic(JavaLangBoolean, TRUE);
  }
  if (str == nil) {
    return nil;
  }
  switch ([str java_length]) {
    case 1:
    {
      jchar ch0 = [str charAtWithInt:0];
      if (ch0 == 'y' || ch0 == 'Y' || ch0 == 't' || ch0 == 'T') {
        return JreLoadStatic(JavaLangBoolean, TRUE);
      }
      if (ch0 == 'n' || ch0 == 'N' || ch0 == 'f' || ch0 == 'F') {
        return JreLoadStatic(JavaLangBoolean, FALSE);
      }
      break;
    }
    case 2:
    {
      jchar ch0 = [str charAtWithInt:0];
      jchar ch1 = [str charAtWithInt:1];
      if ((ch0 == 'o' || ch0 == 'O') && (ch1 == 'n' || ch1 == 'N')) {
        return JreLoadStatic(JavaLangBoolean, TRUE);
      }
      if ((ch0 == 'n' || ch0 == 'N') && (ch1 == 'o' || ch1 == 'O')) {
        return JreLoadStatic(JavaLangBoolean, FALSE);
      }
      break;
    }
    case 3:
    {
      jchar ch0 = [str charAtWithInt:0];
      jchar ch1 = [str charAtWithInt:1];
      jchar ch2 = [str charAtWithInt:2];
      if ((ch0 == 'y' || ch0 == 'Y') && (ch1 == 'e' || ch1 == 'E') && (ch2 == 's' || ch2 == 'S')) {
        return JreLoadStatic(JavaLangBoolean, TRUE);
      }
      if ((ch0 == 'o' || ch0 == 'O') && (ch1 == 'f' || ch1 == 'F') && (ch2 == 'f' || ch2 == 'F')) {
        return JreLoadStatic(JavaLangBoolean, FALSE);
      }
      break;
    }
    case 4:
    {
      jchar ch0 = [str charAtWithInt:0];
      jchar ch1 = [str charAtWithInt:1];
      jchar ch2 = [str charAtWithInt:2];
      jchar ch3 = [str charAtWithInt:3];
      if ((ch0 == 't' || ch0 == 'T') && (ch1 == 'r' || ch1 == 'R') && (ch2 == 'u' || ch2 == 'U') && (ch3 == 'e' || ch3 == 'E')) {
        return JreLoadStatic(JavaLangBoolean, TRUE);
      }
      break;
    }
    case 5:
    {
      jchar ch0 = [str charAtWithInt:0];
      jchar ch1 = [str charAtWithInt:1];
      jchar ch2 = [str charAtWithInt:2];
      jchar ch3 = [str charAtWithInt:3];
      jchar ch4 = [str charAtWithInt:4];
      if ((ch0 == 'f' || ch0 == 'F') && (ch1 == 'a' || ch1 == 'A') && (ch2 == 'l' || ch2 == 'L') && (ch3 == 's' || ch3 == 'S') && (ch4 == 'e' || ch4 == 'E')) {
        return JreLoadStatic(JavaLangBoolean, FALSE);
      }
      break;
    }
    default:
    break;
  }
  return nil;
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithNSString_withNSString_withNSString_withNSString_(NSString *str, NSString *trueString, NSString *falseString, NSString *nullString) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (str == nil) {
    if (trueString == nil) {
      return JreLoadStatic(JavaLangBoolean, TRUE);
    }
    if (falseString == nil) {
      return JreLoadStatic(JavaLangBoolean, FALSE);
    }
    if (nullString == nil) {
      return nil;
    }
  }
  else if ([str isEqual:trueString]) {
    return JreLoadStatic(JavaLangBoolean, TRUE);
  }
  else if ([str isEqual:falseString]) {
    return JreLoadStatic(JavaLangBoolean, FALSE);
  }
  else if ([str isEqual:nullString]) {
    return nil;
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The String did not match any specified value");
}

jboolean OrgApacheCommonsLang3BooleanUtils_toBooleanWithNSString_(NSString *str) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return OrgApacheCommonsLang3BooleanUtils_toBooleanObjectWithNSString_(str) == JreLoadStatic(JavaLangBoolean, TRUE);
}

jboolean OrgApacheCommonsLang3BooleanUtils_toBooleanWithNSString_withNSString_withNSString_(NSString *str, NSString *trueString, NSString *falseString) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (str == trueString) {
    return true;
  }
  else if (str == falseString) {
    return false;
  }
  else if (str != nil) {
    if ([str isEqual:trueString]) {
      return true;
    }
    else if ([str isEqual:falseString]) {
      return false;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The String did not match either specified value");
}

NSString *OrgApacheCommonsLang3BooleanUtils_toStringTrueFalseWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return OrgApacheCommonsLang3BooleanUtils_toStringWithJavaLangBoolean_withNSString_withNSString_withNSString_(bool_, @"true", @"false", nil);
}

NSString *OrgApacheCommonsLang3BooleanUtils_toStringOnOffWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return OrgApacheCommonsLang3BooleanUtils_toStringWithJavaLangBoolean_withNSString_withNSString_withNSString_(bool_, @"on", @"off", nil);
}

NSString *OrgApacheCommonsLang3BooleanUtils_toStringYesNoWithJavaLangBoolean_(JavaLangBoolean *bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return OrgApacheCommonsLang3BooleanUtils_toStringWithJavaLangBoolean_withNSString_withNSString_withNSString_(bool_, @"yes", @"no", nil);
}

NSString *OrgApacheCommonsLang3BooleanUtils_toStringWithJavaLangBoolean_withNSString_withNSString_withNSString_(JavaLangBoolean *bool_, NSString *trueString, NSString *falseString, NSString *nullString) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (bool_ == nil) {
    return nullString;
  }
  return [bool_ booleanValue] ? trueString : falseString;
}

NSString *OrgApacheCommonsLang3BooleanUtils_toStringTrueFalseWithBoolean_(jboolean bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return OrgApacheCommonsLang3BooleanUtils_toStringWithBoolean_withNSString_withNSString_(bool_, @"true", @"false");
}

NSString *OrgApacheCommonsLang3BooleanUtils_toStringOnOffWithBoolean_(jboolean bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return OrgApacheCommonsLang3BooleanUtils_toStringWithBoolean_withNSString_withNSString_(bool_, @"on", @"off");
}

NSString *OrgApacheCommonsLang3BooleanUtils_toStringYesNoWithBoolean_(jboolean bool_) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return OrgApacheCommonsLang3BooleanUtils_toStringWithBoolean_withNSString_withNSString_(bool_, @"yes", @"no");
}

NSString *OrgApacheCommonsLang3BooleanUtils_toStringWithBoolean_withNSString_withNSString_(jboolean bool_, NSString *trueString, NSString *falseString) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  return bool_ ? trueString : falseString;
}

jboolean OrgApacheCommonsLang3BooleanUtils_and__WithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Array must not be null");
  }
  if (array->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Array is empty");
  }
  {
    IOSBooleanArray *a__ = array;
    jboolean const *b__ = a__->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean element = *b__++;
      if (!element) {
        return false;
      }
    }
  }
  return true;
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_and__WithJavaLangBooleanArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Array must not be null");
  }
  if (array->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Array is empty");
  }
  @try {
    IOSBooleanArray *primitive = OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_(array);
    return OrgApacheCommonsLang3BooleanUtils_and__WithBooleanArray_(primitive) ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE);
  }
  @catch (JavaLangNullPointerException *ex) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The array must not contain any null elements");
  }
}

jboolean OrgApacheCommonsLang3BooleanUtils_or__WithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Array must not be null");
  }
  if (array->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Array is empty");
  }
  {
    IOSBooleanArray *a__ = array;
    jboolean const *b__ = a__->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean element = *b__++;
      if (element) {
        return true;
      }
    }
  }
  return false;
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_or__WithJavaLangBooleanArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Array must not be null");
  }
  if (array->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Array is empty");
  }
  @try {
    IOSBooleanArray *primitive = OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_(array);
    return OrgApacheCommonsLang3BooleanUtils_or__WithBooleanArray_(primitive) ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE);
  }
  @catch (JavaLangNullPointerException *ex) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The array must not contain any null elements");
  }
}

jboolean OrgApacheCommonsLang3BooleanUtils_xor__WithBooleanArray_(IOSBooleanArray *array) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Array must not be null");
  }
  if (array->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Array is empty");
  }
  jboolean result = false;
  {
    IOSBooleanArray *a__ = array;
    jboolean const *b__ = a__->buffer_;
    jboolean const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      jboolean element = *b__++;
      result ^= element;
    }
  }
  return result;
}

JavaLangBoolean *OrgApacheCommonsLang3BooleanUtils_xor__WithJavaLangBooleanArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (array == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The Array must not be null");
  }
  if (array->size_ == 0) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Array is empty");
  }
  @try {
    IOSBooleanArray *primitive = OrgApacheCommonsLang3ArrayUtils_toPrimitiveWithJavaLangBooleanArray_(array);
    return OrgApacheCommonsLang3BooleanUtils_xor__WithBooleanArray_(primitive) ? JreLoadStatic(JavaLangBoolean, TRUE) : JreLoadStatic(JavaLangBoolean, FALSE);
  }
  @catch (JavaLangNullPointerException *ex) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The array must not contain any null elements");
  }
}

jint OrgApacheCommonsLang3BooleanUtils_compareWithBoolean_withBoolean_(jboolean x, jboolean y) {
  OrgApacheCommonsLang3BooleanUtils_initialize();
  if (x == y) {
    return 0;
  }
  if (x) {
    return 1;
  }
  else {
    return -1;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BooleanUtils)
