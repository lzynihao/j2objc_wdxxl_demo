//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/NotImplementedException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Throwable.h"
#include "java/lang/UnsupportedOperationException.h"
#include "org/apache/commons/lang3/NotImplementedException.h"

@interface OrgApacheCommonsLang3NotImplementedException () {
 @public
  NSString *code_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3NotImplementedException, code_, NSString *)

inline jlong OrgApacheCommonsLang3NotImplementedException_get_serialVersionUID(void);
#define OrgApacheCommonsLang3NotImplementedException_serialVersionUID 20131021LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3NotImplementedException, serialVersionUID, jlong)

@implementation OrgApacheCommonsLang3NotImplementedException

- (instancetype)initWithNSString:(NSString *)message {
  OrgApacheCommonsLang3NotImplementedException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_(self, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause {
  OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
                    withNSString:(NSString *)code {
  OrgApacheCommonsLang3NotImplementedException_initWithNSString_withNSString_(self, message, code);
  return self;
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause
                             withNSString:(NSString *)code {
  OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_withNSString_(self, cause, code);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
           withJavaLangThrowable:(JavaLangThrowable *)cause
                    withNSString:(NSString *)code {
  OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_withNSString_(self, message, cause, code);
  return self;
}

- (NSString *)getCode {
  return self->code_;
}

- (void)dealloc {
  RELEASE_(code_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithJavaLangThrowable:);
  methods[2].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[3].selector = @selector(initWithNSString:withNSString:);
  methods[4].selector = @selector(initWithJavaLangThrowable:withNSString:);
  methods[5].selector = @selector(initWithNSString:withJavaLangThrowable:withNSString:);
  methods[6].selector = @selector(getCode);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3NotImplementedException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "code_", "LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LJavaLangThrowable;", "LNSString;LJavaLangThrowable;", "LNSString;LNSString;", "LJavaLangThrowable;LNSString;", "LNSString;LJavaLangThrowable;LNSString;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3NotImplementedException = { "NotImplementedException", "org.apache.commons.lang3", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3NotImplementedException;
}

@end

void OrgApacheCommonsLang3NotImplementedException_initWithNSString_(OrgApacheCommonsLang3NotImplementedException *self, NSString *message) {
  OrgApacheCommonsLang3NotImplementedException_initWithNSString_withNSString_(self, message, nil);
}

OrgApacheCommonsLang3NotImplementedException *new_OrgApacheCommonsLang3NotImplementedException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithNSString_, message)
}

OrgApacheCommonsLang3NotImplementedException *create_OrgApacheCommonsLang3NotImplementedException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithNSString_, message)
}

void OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_(OrgApacheCommonsLang3NotImplementedException *self, JavaLangThrowable *cause) {
  OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_withNSString_(self, cause, nil);
}

OrgApacheCommonsLang3NotImplementedException *new_OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithJavaLangThrowable_, cause)
}

OrgApacheCommonsLang3NotImplementedException *create_OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_(JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithJavaLangThrowable_, cause)
}

void OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_(OrgApacheCommonsLang3NotImplementedException *self, NSString *message, JavaLangThrowable *cause) {
  OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_withNSString_(self, message, cause, nil);
}

OrgApacheCommonsLang3NotImplementedException *new_OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithNSString_withJavaLangThrowable_, message, cause)
}

OrgApacheCommonsLang3NotImplementedException *create_OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_(NSString *message, JavaLangThrowable *cause) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithNSString_withJavaLangThrowable_, message, cause)
}

void OrgApacheCommonsLang3NotImplementedException_initWithNSString_withNSString_(OrgApacheCommonsLang3NotImplementedException *self, NSString *message, NSString *code) {
  JavaLangUnsupportedOperationException_initWithNSString_(self, message);
  JreStrongAssign(&self->code_, code);
}

OrgApacheCommonsLang3NotImplementedException *new_OrgApacheCommonsLang3NotImplementedException_initWithNSString_withNSString_(NSString *message, NSString *code) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithNSString_withNSString_, message, code)
}

OrgApacheCommonsLang3NotImplementedException *create_OrgApacheCommonsLang3NotImplementedException_initWithNSString_withNSString_(NSString *message, NSString *code) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithNSString_withNSString_, message, code)
}

void OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_withNSString_(OrgApacheCommonsLang3NotImplementedException *self, JavaLangThrowable *cause, NSString *code) {
  JavaLangUnsupportedOperationException_initWithJavaLangThrowable_(self, cause);
  JreStrongAssign(&self->code_, code);
}

OrgApacheCommonsLang3NotImplementedException *new_OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_withNSString_(JavaLangThrowable *cause, NSString *code) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithJavaLangThrowable_withNSString_, cause, code)
}

OrgApacheCommonsLang3NotImplementedException *create_OrgApacheCommonsLang3NotImplementedException_initWithJavaLangThrowable_withNSString_(JavaLangThrowable *cause, NSString *code) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithJavaLangThrowable_withNSString_, cause, code)
}

void OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_withNSString_(OrgApacheCommonsLang3NotImplementedException *self, NSString *message, JavaLangThrowable *cause, NSString *code) {
  JavaLangUnsupportedOperationException_initWithNSString_withJavaLangThrowable_(self, message, cause);
  JreStrongAssign(&self->code_, code);
}

OrgApacheCommonsLang3NotImplementedException *new_OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_withNSString_(NSString *message, JavaLangThrowable *cause, NSString *code) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithNSString_withJavaLangThrowable_withNSString_, message, cause, code)
}

OrgApacheCommonsLang3NotImplementedException *create_OrgApacheCommonsLang3NotImplementedException_initWithNSString_withJavaLangThrowable_withNSString_(NSString *message, JavaLangThrowable *cause, NSString *code) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3NotImplementedException, initWithNSString_withJavaLangThrowable_withNSString_, message, cause, code)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3NotImplementedException)
