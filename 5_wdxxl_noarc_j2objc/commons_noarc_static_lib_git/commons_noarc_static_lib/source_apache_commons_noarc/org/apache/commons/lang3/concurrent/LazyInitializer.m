//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/concurrent/LazyInitializer.java
//

#include "J2ObjC_source.h"
#include "org/apache/commons/lang3/concurrent/LazyInitializer.h"

@interface OrgApacheCommonsLang3ConcurrentLazyInitializer () {
 @public
  volatile_id object_;
}

@end

J2OBJC_VOLATILE_FIELD_SETTER(OrgApacheCommonsLang3ConcurrentLazyInitializer, object_, id)

@implementation OrgApacheCommonsLang3ConcurrentLazyInitializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3ConcurrentLazyInitializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)get {
  id result = JreLoadVolatileId(&object_);
  if (result == nil) {
    @synchronized(self) {
      result = JreRetainedLocalValue(JreLoadVolatileId(&object_));
      if (result == nil) {
        JreVolatileStrongAssign(&object_, JreRetainedLocalValue(result = JreRetainedLocalValue([self initialize__])));
      }
    }
  }
  return result;
}

- (id)initialize__ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)__javaClone:(OrgApacheCommonsLang3ConcurrentLazyInitializer *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&object_, &original->object_);
}

- (void)dealloc {
  JreReleaseVolatile(&object_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, 0, 1, -1, -1 },
    { NULL, "LNSObject;", 0x404, 2, -1, 0, 1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(get);
  methods[2].selector = @selector(initialize__);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "object_", "LNSObject;", .constantValue.asLong = 0, 0x42, -1, -1, 3, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheCommonsLang3ConcurrentConcurrentException;", "()TT;", "initialize", "TT;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lorg/apache/commons/lang3/concurrent/ConcurrentInitializer<TT;>;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3ConcurrentLazyInitializer = { "LazyInitializer", "org.apache.commons.lang3.concurrent", ptrTable, methods, fields, 7, 0x401, 3, 1, -1, -1, -1, 4, -1 };
  return &_OrgApacheCommonsLang3ConcurrentLazyInitializer;
}

@end

void OrgApacheCommonsLang3ConcurrentLazyInitializer_init(OrgApacheCommonsLang3ConcurrentLazyInitializer *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3ConcurrentLazyInitializer)
