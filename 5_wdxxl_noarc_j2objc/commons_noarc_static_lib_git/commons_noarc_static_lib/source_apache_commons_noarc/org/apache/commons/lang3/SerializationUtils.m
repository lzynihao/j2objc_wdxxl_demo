//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/SerializationUtils.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/ByteArrayOutputStream.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/ObjectInputStream.h"
#include "java/io/ObjectOutputStream.h"
#include "java/io/ObjectStreamClass.h"
#include "java/io/OutputStream.h"
#include "java/io/Serializable.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Thread.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "org/apache/commons/lang3/SerializationException.h"
#include "org/apache/commons/lang3/SerializationUtils.h"

@interface OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream () {
 @public
  JavaLangClassLoader *classLoader_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream, classLoader_, JavaLangClassLoader *)

inline id<JavaUtilMap> OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_get_primitiveTypes(void);
static id<JavaUtilMap> OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream, primitiveTypes, id<JavaUtilMap>)

@implementation OrgApacheCommonsLang3SerializationUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3SerializationUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<JavaIoSerializable>)cloneWithJavaIoSerializable:(id<JavaIoSerializable>)object {
  return OrgApacheCommonsLang3SerializationUtils_cloneWithJavaIoSerializable_(object);
}

+ (id<JavaIoSerializable>)roundtripWithJavaIoSerializable:(id<JavaIoSerializable>)msg {
  return OrgApacheCommonsLang3SerializationUtils_roundtripWithJavaIoSerializable_(msg);
}

+ (void)serializeWithJavaIoSerializable:(id<JavaIoSerializable>)obj
                 withJavaIoOutputStream:(JavaIoOutputStream *)outputStream {
  OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_withJavaIoOutputStream_(obj, outputStream);
}

+ (IOSByteArray *)serializeWithJavaIoSerializable:(id<JavaIoSerializable>)obj {
  return OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_(obj);
}

+ (id)deserializeWithJavaIoInputStream:(JavaIoInputStream *)inputStream {
  return OrgApacheCommonsLang3SerializationUtils_deserializeWithJavaIoInputStream_(inputStream);
}

+ (id)deserializeWithByteArray:(IOSByteArray *)objectData {
  return OrgApacheCommonsLang3SerializationUtils_deserializeWithByteArray_(objectData);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaIoSerializable;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaIoSerializable;", 0x9, 3, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x9, 4, 5, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "LNSObject;", 0x9, 6, 9, -1, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(cloneWithJavaIoSerializable:);
  methods[2].selector = @selector(roundtripWithJavaIoSerializable:);
  methods[3].selector = @selector(serializeWithJavaIoSerializable:withJavaIoOutputStream:);
  methods[4].selector = @selector(serializeWithJavaIoSerializable:);
  methods[5].selector = @selector(deserializeWithJavaIoInputStream:);
  methods[6].selector = @selector(deserializeWithByteArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "clone", "LJavaIoSerializable;", "<T::Ljava/io/Serializable;>(TT;)TT;", "roundtrip", "serialize", "LJavaIoSerializable;LJavaIoOutputStream;", "deserialize", "LJavaIoInputStream;", "<T:Ljava/lang/Object;>(Ljava/io/InputStream;)TT;", "[B", "<T:Ljava/lang/Object;>([B)TT;", "LOrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3SerializationUtils = { "SerializationUtils", "org.apache.commons.lang3", ptrTable, methods, NULL, 7, 0x1, 7, 0, -1, 11, -1, -1, -1 };
  return &_OrgApacheCommonsLang3SerializationUtils;
}

@end

void OrgApacheCommonsLang3SerializationUtils_init(OrgApacheCommonsLang3SerializationUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3SerializationUtils *new_OrgApacheCommonsLang3SerializationUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3SerializationUtils, init)
}

OrgApacheCommonsLang3SerializationUtils *create_OrgApacheCommonsLang3SerializationUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3SerializationUtils, init)
}

id<JavaIoSerializable> OrgApacheCommonsLang3SerializationUtils_cloneWithJavaIoSerializable_(id<JavaIoSerializable> object) {
  OrgApacheCommonsLang3SerializationUtils_initialize();
  if (object == nil) {
    return nil;
  }
  IOSByteArray *objectData = OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_(object);
  JavaIoByteArrayInputStream *bais = create_JavaIoByteArrayInputStream_initWithByteArray_(objectData);
  OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream *in = nil;
  @try {
    in = create_OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_initWithJavaIoInputStream_withJavaLangClassLoader_(bais, [[object java_getClass] getClassLoader]);
    id<JavaIoSerializable> readObject = (id<JavaIoSerializable>) cast_check([in readObject], JavaIoSerializable_class_());
    return readObject;
  }
  @catch (JavaLangClassNotFoundException *ex) {
    @throw create_OrgApacheCommonsLang3SerializationException_initWithNSString_withJavaLangThrowable_(@"ClassNotFoundException while reading cloned object data", ex);
  }
  @catch (JavaIoIOException *ex) {
    @throw create_OrgApacheCommonsLang3SerializationException_initWithNSString_withJavaLangThrowable_(@"IOException while reading cloned object data", ex);
  }
  @finally {
    @try {
      if (in != nil) {
        [in close];
      }
    }
    @catch (JavaIoIOException *ex) {
      @throw create_OrgApacheCommonsLang3SerializationException_initWithNSString_withJavaLangThrowable_(@"IOException on closing cloned object data InputStream.", ex);
    }
  }
}

id<JavaIoSerializable> OrgApacheCommonsLang3SerializationUtils_roundtripWithJavaIoSerializable_(id<JavaIoSerializable> msg) {
  OrgApacheCommonsLang3SerializationUtils_initialize();
  return (id<JavaIoSerializable>) cast_check(OrgApacheCommonsLang3SerializationUtils_deserializeWithByteArray_(OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_(msg)), JavaIoSerializable_class_());
}

void OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_withJavaIoOutputStream_(id<JavaIoSerializable> obj, JavaIoOutputStream *outputStream) {
  OrgApacheCommonsLang3SerializationUtils_initialize();
  if (outputStream == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The OutputStream must not be null");
  }
  JavaIoObjectOutputStream *out = nil;
  @try {
    out = create_JavaIoObjectOutputStream_initWithJavaIoOutputStream_(outputStream);
    [out writeObjectWithId:obj];
  }
  @catch (JavaIoIOException *ex) {
    @throw create_OrgApacheCommonsLang3SerializationException_initWithJavaLangThrowable_(ex);
  }
  @finally {
    @try {
      if (out != nil) {
        [out close];
      }
    }
    @catch (JavaIoIOException *ex) {
    }
  }
}

IOSByteArray *OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_(id<JavaIoSerializable> obj) {
  OrgApacheCommonsLang3SerializationUtils_initialize();
  JavaIoByteArrayOutputStream *baos = create_JavaIoByteArrayOutputStream_initWithInt_(512);
  OrgApacheCommonsLang3SerializationUtils_serializeWithJavaIoSerializable_withJavaIoOutputStream_(obj, baos);
  return [baos toByteArray];
}

id OrgApacheCommonsLang3SerializationUtils_deserializeWithJavaIoInputStream_(JavaIoInputStream *inputStream) {
  OrgApacheCommonsLang3SerializationUtils_initialize();
  if (inputStream == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The InputStream must not be null");
  }
  JavaIoObjectInputStream *in = nil;
  @try {
    in = create_JavaIoObjectInputStream_initWithJavaIoInputStream_(inputStream);
    id obj = [in readObject];
    return obj;
  }
  @catch (JavaLangClassCastException *ex) {
    @throw create_OrgApacheCommonsLang3SerializationException_initWithJavaLangThrowable_(ex);
  }
  @catch (JavaLangClassNotFoundException *ex) {
    @throw create_OrgApacheCommonsLang3SerializationException_initWithJavaLangThrowable_(ex);
  }
  @catch (JavaIoIOException *ex) {
    @throw create_OrgApacheCommonsLang3SerializationException_initWithJavaLangThrowable_(ex);
  }
  @finally {
    @try {
      if (in != nil) {
        [in close];
      }
    }
    @catch (JavaIoIOException *ex) {
    }
  }
}

id OrgApacheCommonsLang3SerializationUtils_deserializeWithByteArray_(IOSByteArray *objectData) {
  OrgApacheCommonsLang3SerializationUtils_initialize();
  if (objectData == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"The byte[] must not be null");
  }
  return OrgApacheCommonsLang3SerializationUtils_deserializeWithJavaIoInputStream_(create_JavaIoByteArrayInputStream_initWithByteArray_(objectData));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3SerializationUtils)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream)

@implementation OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream

- (instancetype)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                  withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_initWithJavaIoInputStream_withJavaLangClassLoader_(self, inArg, classLoader);
  return self;
}

- (IOSClass *)resolveClassWithJavaIoObjectStreamClass:(JavaIoObjectStreamClass *)desc {
  NSString *name = [((JavaIoObjectStreamClass *) nil_chk(desc)) getName];
  @try {
    return IOSClass_forName_initialize_classLoader_(name, false, classLoader_);
  }
  @catch (JavaLangClassNotFoundException *ex) {
    @try {
      return IOSClass_forName_initialize_classLoader_(name, false, [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getContextClassLoader]);
    }
    @catch (JavaLangClassNotFoundException *cnfe) {
      IOSClass *cls = [((id<JavaUtilMap>) nil_chk(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes)) getWithId:name];
      if (cls != nil) {
        return cls;
      }
      @throw cnfe;
    }
  }
}

- (void)dealloc {
  RELEASE_(classLoader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, 1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x4, 2, 3, 4, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaIoInputStream:withJavaLangClassLoader:);
  methods[1].selector = @selector(resolveClassWithJavaIoObjectStreamClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "primitiveTypes", "LJavaUtilMap;", .constantValue.asLong = 0, 0x1a, -1, 6, 7, -1 },
    { "classLoader_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaIoInputStream;LJavaLangClassLoader;", "LJavaIoIOException;", "resolveClass", "LJavaIoObjectStreamClass;", "LJavaIoIOException;LJavaLangClassNotFoundException;", "(Ljava/io/ObjectStreamClass;)Ljava/lang/Class<*>;", &OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes, "Ljava/util/Map<Ljava/lang/String;Ljava/lang/Class<*>;>;", "LOrgApacheCommonsLang3SerializationUtils;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream = { "ClassLoaderAwareObjectInputStream", "org.apache.commons.lang3", ptrTable, methods, fields, 7, 0x8, 2, 2, 8, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes, new_JavaUtilHashMap_init());
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream)
  }
}

@end

void OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_initWithJavaIoInputStream_withJavaLangClassLoader_(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream *self, JavaIoInputStream *inArg, JavaLangClassLoader *classLoader) {
  JavaIoObjectInputStream_initWithJavaIoInputStream_(self, inArg);
  JreStrongAssign(&self->classLoader_, classLoader);
  [((id<JavaUtilMap>) nil_chk(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes)) putWithId:@"byte" withId:[IOSClass byteClass]];
  [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes putWithId:@"short" withId:[IOSClass shortClass]];
  [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes putWithId:@"int" withId:[IOSClass intClass]];
  [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes putWithId:@"long" withId:[IOSClass longClass]];
  [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes putWithId:@"float" withId:[IOSClass floatClass]];
  [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes putWithId:@"double" withId:[IOSClass doubleClass]];
  [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes putWithId:@"boolean" withId:[IOSClass booleanClass]];
  [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes putWithId:@"char" withId:[IOSClass charClass]];
  [OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_primitiveTypes putWithId:@"void" withId:[IOSClass voidClass]];
}

OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream *new_OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_initWithJavaIoInputStream_withJavaLangClassLoader_(JavaIoInputStream *inArg, JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream, initWithJavaIoInputStream_withJavaLangClassLoader_, inArg, classLoader)
}

OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream *create_OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream_initWithJavaIoInputStream_withJavaLangClassLoader_(JavaIoInputStream *inArg, JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream, initWithJavaIoInputStream_withJavaLangClassLoader_, inArg, classLoader)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3SerializationUtils_ClassLoaderAwareObjectInputStream)
