//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/AnnotationUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Method.h"
#include "java/util/Arrays.h"
#include "java/util/List.h"
#include "org/apache/commons/lang3/AnnotationUtils.h"
#include "org/apache/commons/lang3/ClassUtils.h"
#include "org/apache/commons/lang3/Validate.h"
#include "org/apache/commons/lang3/builder/ToStringBuilder.h"
#include "org/apache/commons/lang3/builder/ToStringStyle.h"

@interface OrgApacheCommonsLang3AnnotationUtils ()

+ (jint)hashMemberWithNSString:(NSString *)name
                        withId:(id)value;

+ (jboolean)memberEqualsWithIOSClass:(IOSClass *)type
                              withId:(id)o1
                              withId:(id)o2;

+ (jboolean)arrayMemberEqualsWithIOSClass:(IOSClass *)componentType
                                   withId:(id)o1
                                   withId:(id)o2;

+ (jboolean)annotationArrayMemberEqualsWithJavaLangAnnotationAnnotationArray:(IOSObjectArray *)a1
                                       withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)a2;

+ (jint)arrayMemberHashWithIOSClass:(IOSClass *)componentType
                             withId:(id)o;

@end

inline OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3AnnotationUtils_get_TO_STRING_STYLE(void);
static OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3AnnotationUtils_TO_STRING_STYLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3AnnotationUtils, TO_STRING_STYLE, OrgApacheCommonsLang3BuilderToStringStyle *)

__attribute__((unused)) static jint OrgApacheCommonsLang3AnnotationUtils_hashMemberWithNSString_withId_(NSString *name, id value);

__attribute__((unused)) static jboolean OrgApacheCommonsLang3AnnotationUtils_memberEqualsWithIOSClass_withId_withId_(IOSClass *type, id o1, id o2);

__attribute__((unused)) static jboolean OrgApacheCommonsLang3AnnotationUtils_arrayMemberEqualsWithIOSClass_withId_withId_(IOSClass *componentType, id o1, id o2);

__attribute__((unused)) static jboolean OrgApacheCommonsLang3AnnotationUtils_annotationArrayMemberEqualsWithJavaLangAnnotationAnnotationArray_withJavaLangAnnotationAnnotationArray_(IOSObjectArray *a1, IOSObjectArray *a2);

__attribute__((unused)) static jint OrgApacheCommonsLang3AnnotationUtils_arrayMemberHashWithIOSClass_withId_(IOSClass *componentType, id o);

@interface OrgApacheCommonsLang3AnnotationUtils_1 : OrgApacheCommonsLang3BuilderToStringStyle

- (instancetype)init;

- (NSString *)getShortClassNameWithIOSClass:(IOSClass *)cls;

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                      withId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3AnnotationUtils_1)

inline jlong OrgApacheCommonsLang3AnnotationUtils_1_get_serialVersionUID(void);
#define OrgApacheCommonsLang3AnnotationUtils_1_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3AnnotationUtils_1, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsLang3AnnotationUtils_1_init(OrgApacheCommonsLang3AnnotationUtils_1 *self);

__attribute__((unused)) static OrgApacheCommonsLang3AnnotationUtils_1 *new_OrgApacheCommonsLang3AnnotationUtils_1_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3AnnotationUtils_1 *create_OrgApacheCommonsLang3AnnotationUtils_1_init(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsLang3AnnotationUtils)

@implementation OrgApacheCommonsLang3AnnotationUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3AnnotationUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jboolean)equalsWithJavaLangAnnotationAnnotation:(id<JavaLangAnnotationAnnotation>)a1
                  withJavaLangAnnotationAnnotation:(id<JavaLangAnnotationAnnotation>)a2 {
  return OrgApacheCommonsLang3AnnotationUtils_equalsWithJavaLangAnnotationAnnotation_withJavaLangAnnotationAnnotation_(a1, a2);
}

+ (jint)hashCodeWithJavaLangAnnotationAnnotation:(id<JavaLangAnnotationAnnotation>)a {
  return OrgApacheCommonsLang3AnnotationUtils_hashCodeWithJavaLangAnnotationAnnotation_(a);
}

+ (NSString *)toStringWithJavaLangAnnotationAnnotation:(id<JavaLangAnnotationAnnotation>)a {
  return OrgApacheCommonsLang3AnnotationUtils_toStringWithJavaLangAnnotationAnnotation_(a);
}

+ (jboolean)isValidAnnotationMemberTypeWithIOSClass:(IOSClass *)type {
  return OrgApacheCommonsLang3AnnotationUtils_isValidAnnotationMemberTypeWithIOSClass_(type);
}

+ (jint)hashMemberWithNSString:(NSString *)name
                        withId:(id)value {
  return OrgApacheCommonsLang3AnnotationUtils_hashMemberWithNSString_withId_(name, value);
}

+ (jboolean)memberEqualsWithIOSClass:(IOSClass *)type
                              withId:(id)o1
                              withId:(id)o2 {
  return OrgApacheCommonsLang3AnnotationUtils_memberEqualsWithIOSClass_withId_withId_(type, o1, o2);
}

+ (jboolean)arrayMemberEqualsWithIOSClass:(IOSClass *)componentType
                                   withId:(id)o1
                                   withId:(id)o2 {
  return OrgApacheCommonsLang3AnnotationUtils_arrayMemberEqualsWithIOSClass_withId_withId_(componentType, o1, o2);
}

+ (jboolean)annotationArrayMemberEqualsWithJavaLangAnnotationAnnotationArray:(IOSObjectArray *)a1
                                       withJavaLangAnnotationAnnotationArray:(IOSObjectArray *)a2 {
  return OrgApacheCommonsLang3AnnotationUtils_annotationArrayMemberEqualsWithJavaLangAnnotationAnnotationArray_withJavaLangAnnotationAnnotationArray_(a1, a2);
}

+ (jint)arrayMemberHashWithIOSClass:(IOSClass *)componentType
                             withId:(id)o {
  return OrgApacheCommonsLang3AnnotationUtils_arrayMemberHashWithIOSClass_withId_(componentType, o);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 4, 3, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 5, 6, -1, 7, -1, -1 },
    { NULL, "I", 0xa, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0xa, 10, 11, -1, 12, -1, -1 },
    { NULL, "Z", 0xa, 13, 11, -1, 12, -1, -1 },
    { NULL, "Z", 0xa, 14, 15, -1, -1, -1, -1 },
    { NULL, "I", 0xa, 16, 17, -1, 18, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(equalsWithJavaLangAnnotationAnnotation:withJavaLangAnnotationAnnotation:);
  methods[2].selector = @selector(hashCodeWithJavaLangAnnotationAnnotation:);
  methods[3].selector = @selector(toStringWithJavaLangAnnotationAnnotation:);
  methods[4].selector = @selector(isValidAnnotationMemberTypeWithIOSClass:);
  methods[5].selector = @selector(hashMemberWithNSString:withId:);
  methods[6].selector = @selector(memberEqualsWithIOSClass:withId:withId:);
  methods[7].selector = @selector(arrayMemberEqualsWithIOSClass:withId:withId:);
  methods[8].selector = @selector(annotationArrayMemberEqualsWithJavaLangAnnotationAnnotationArray:withJavaLangAnnotationAnnotationArray:);
  methods[9].selector = @selector(arrayMemberHashWithIOSClass:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TO_STRING_STYLE", "LOrgApacheCommonsLang3BuilderToStringStyle;", .constantValue.asLong = 0, 0x1a, -1, 19, -1, -1 },
  };
  static const void *ptrTable[] = { "equals", "LJavaLangAnnotationAnnotation;LJavaLangAnnotationAnnotation;", "hashCode", "LJavaLangAnnotationAnnotation;", "toString", "isValidAnnotationMemberType", "LIOSClass;", "(Ljava/lang/Class<*>;)Z", "hashMember", "LNSString;LNSObject;", "memberEquals", "LIOSClass;LNSObject;LNSObject;", "(Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/Object;)Z", "arrayMemberEquals", "annotationArrayMemberEquals", "[LJavaLangAnnotationAnnotation;[LJavaLangAnnotationAnnotation;", "arrayMemberHash", "LIOSClass;LNSObject;", "(Ljava/lang/Class<*>;Ljava/lang/Object;)I", &OrgApacheCommonsLang3AnnotationUtils_TO_STRING_STYLE };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3AnnotationUtils = { "AnnotationUtils", "org.apache.commons.lang3", ptrTable, methods, fields, 7, 0x1, 10, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3AnnotationUtils;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsLang3AnnotationUtils class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3AnnotationUtils_TO_STRING_STYLE, new_OrgApacheCommonsLang3AnnotationUtils_1_init());
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsLang3AnnotationUtils)
  }
}

@end

void OrgApacheCommonsLang3AnnotationUtils_init(OrgApacheCommonsLang3AnnotationUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3AnnotationUtils *new_OrgApacheCommonsLang3AnnotationUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3AnnotationUtils, init)
}

OrgApacheCommonsLang3AnnotationUtils *create_OrgApacheCommonsLang3AnnotationUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3AnnotationUtils, init)
}

jboolean OrgApacheCommonsLang3AnnotationUtils_equalsWithJavaLangAnnotationAnnotation_withJavaLangAnnotationAnnotation_(id<JavaLangAnnotationAnnotation> a1, id<JavaLangAnnotationAnnotation> a2) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  if (a1 == a2) {
    return true;
  }
  if (a1 == nil || a2 == nil) {
    return false;
  }
  IOSClass *type = [a1 annotationType];
  IOSClass *type2 = [a2 annotationType];
  OrgApacheCommonsLang3Validate_notNullWithId_withNSString_withNSObjectArray_(type, @"Annotation %s with null annotationType()", [IOSObjectArray arrayWithObjects:(id[]){ a1 } count:1 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_notNullWithId_withNSString_withNSObjectArray_(type2, @"Annotation %s with null annotationType()", [IOSObjectArray arrayWithObjects:(id[]){ a2 } count:1 type:NSObject_class_()]);
  if (![((IOSClass *) nil_chk(type)) isEqual:type2]) {
    return false;
  }
  @try {
    {
      IOSObjectArray *a__ = [type getDeclaredMethods];
      JavaLangReflectMethod * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaLangReflectMethod * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangReflectMethod *m = *b__++;
        if (((IOSObjectArray *) nil_chk([((JavaLangReflectMethod *) nil_chk(m)) getParameterTypes]))->size_ == 0 && OrgApacheCommonsLang3AnnotationUtils_isValidAnnotationMemberTypeWithIOSClass_([m getReturnType])) {
          id v1 = [m invokeWithId:a1 withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
          id v2 = [m invokeWithId:a2 withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
          if (!OrgApacheCommonsLang3AnnotationUtils_memberEqualsWithIOSClass_withId_withId_([m getReturnType], v1, v2)) {
            return false;
          }
        }
      }
    }
  }
  @catch (JavaLangIllegalAccessException *ex) {
    return false;
  }
  @catch (JavaLangReflectInvocationTargetException *ex) {
    return false;
  }
  return true;
}

jint OrgApacheCommonsLang3AnnotationUtils_hashCodeWithJavaLangAnnotationAnnotation_(id<JavaLangAnnotationAnnotation> a) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  jint result = 0;
  IOSClass *type = [((id<JavaLangAnnotationAnnotation>) nil_chk(a)) annotationType];
  {
    IOSObjectArray *a__ = [((IOSClass *) nil_chk(type)) getDeclaredMethods];
    JavaLangReflectMethod * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectMethod * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectMethod *m = *b__++;
      @try {
        id value = [((JavaLangReflectMethod *) nil_chk(m)) invokeWithId:a withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
        if (value == nil) {
          @throw create_JavaLangIllegalStateException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Annotation method %s returned null", [IOSObjectArray arrayWithObjects:(id[]){ m } count:1 type:NSObject_class_()]));
        }
        result += OrgApacheCommonsLang3AnnotationUtils_hashMemberWithNSString_withId_([m getName], value);
      }
      @catch (JavaLangRuntimeException *ex) {
        @throw ex;
      }
      @catch (JavaLangException *ex) {
        @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(ex);
      }
    }
  }
  return result;
}

NSString *OrgApacheCommonsLang3AnnotationUtils_toStringWithJavaLangAnnotationAnnotation_(id<JavaLangAnnotationAnnotation> a) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  OrgApacheCommonsLang3BuilderToStringBuilder *builder = create_OrgApacheCommonsLang3BuilderToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(a, OrgApacheCommonsLang3AnnotationUtils_TO_STRING_STYLE);
  {
    IOSObjectArray *a__ = [((IOSClass *) nil_chk([((id<JavaLangAnnotationAnnotation>) nil_chk(a)) annotationType])) getDeclaredMethods];
    JavaLangReflectMethod * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectMethod * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectMethod *m = *b__++;
      if (((IOSObjectArray *) nil_chk([((JavaLangReflectMethod *) nil_chk(m)) getParameterTypes]))->size_ > 0) {
        continue;
      }
      @try {
        [builder appendWithNSString:[m getName] withId:[m invokeWithId:a withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]]];
      }
      @catch (JavaLangRuntimeException *ex) {
        @throw ex;
      }
      @catch (JavaLangException *ex) {
        @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(ex);
      }
    }
  }
  return [builder build];
}

jboolean OrgApacheCommonsLang3AnnotationUtils_isValidAnnotationMemberTypeWithIOSClass_(IOSClass *type) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  if (type == nil) {
    return false;
  }
  if ([type isArray]) {
    type = [type getComponentType];
  }
  return [((IOSClass *) nil_chk(type)) isPrimitive] || [type isEnum] || [type isAnnotation] || [NSString_class_() isEqual:type] || [IOSClass_class_() isEqual:type];
}

jint OrgApacheCommonsLang3AnnotationUtils_hashMemberWithNSString_withId_(NSString *name, id value) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  jint part1 = ((jint) [((NSString *) nil_chk(name)) hash]) * 127;
  if ([[nil_chk(value) java_getClass] isArray]) {
    return part1 ^ OrgApacheCommonsLang3AnnotationUtils_arrayMemberHashWithIOSClass_withId_([[value java_getClass] getComponentType], value);
  }
  if ([JavaLangAnnotationAnnotation_class_() isInstance:value]) {
    return part1 ^ OrgApacheCommonsLang3AnnotationUtils_hashCodeWithJavaLangAnnotationAnnotation_((id<JavaLangAnnotationAnnotation>) cast_check(value, JavaLangAnnotationAnnotation_class_()));
  }
  return part1 ^ ((jint) [value hash]);
}

jboolean OrgApacheCommonsLang3AnnotationUtils_memberEqualsWithIOSClass_withId_withId_(IOSClass *type, id o1, id o2) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  if (o1 == o2) {
    return true;
  }
  if (o1 == nil || o2 == nil) {
    return false;
  }
  if ([((IOSClass *) nil_chk(type)) isArray]) {
    return OrgApacheCommonsLang3AnnotationUtils_arrayMemberEqualsWithIOSClass_withId_withId_([type getComponentType], o1, o2);
  }
  if ([type isAnnotation]) {
    return OrgApacheCommonsLang3AnnotationUtils_equalsWithJavaLangAnnotationAnnotation_withJavaLangAnnotationAnnotation_((id<JavaLangAnnotationAnnotation>) cast_check(o1, JavaLangAnnotationAnnotation_class_()), (id<JavaLangAnnotationAnnotation>) cast_check(o2, JavaLangAnnotationAnnotation_class_()));
  }
  return [o1 isEqual:o2];
}

jboolean OrgApacheCommonsLang3AnnotationUtils_arrayMemberEqualsWithIOSClass_withId_withId_(IOSClass *componentType, id o1, id o2) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  if ([((IOSClass *) nil_chk(componentType)) isAnnotation]) {
    return OrgApacheCommonsLang3AnnotationUtils_annotationArrayMemberEqualsWithJavaLangAnnotationAnnotationArray_withJavaLangAnnotationAnnotationArray_((IOSObjectArray *) cast_check(o1, IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)), (IOSObjectArray *) cast_check(o2, IOSClass_arrayType(JavaLangAnnotationAnnotation_class_(), 1)));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangByte, TYPE)]) {
    return JavaUtilArrays_equalsWithByteArray_withByteArray_((IOSByteArray *) cast_chk(o1, [IOSByteArray class]), (IOSByteArray *) cast_chk(o2, [IOSByteArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangShort, TYPE)]) {
    return JavaUtilArrays_equalsWithShortArray_withShortArray_((IOSShortArray *) cast_chk(o1, [IOSShortArray class]), (IOSShortArray *) cast_chk(o2, [IOSShortArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangInteger, TYPE)]) {
    return JavaUtilArrays_equalsWithIntArray_withIntArray_((IOSIntArray *) cast_chk(o1, [IOSIntArray class]), (IOSIntArray *) cast_chk(o2, [IOSIntArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangCharacter, TYPE)]) {
    return JavaUtilArrays_equalsWithCharArray_withCharArray_((IOSCharArray *) cast_chk(o1, [IOSCharArray class]), (IOSCharArray *) cast_chk(o2, [IOSCharArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangLong, TYPE)]) {
    return JavaUtilArrays_equalsWithLongArray_withLongArray_((IOSLongArray *) cast_chk(o1, [IOSLongArray class]), (IOSLongArray *) cast_chk(o2, [IOSLongArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangFloat, TYPE)]) {
    return JavaUtilArrays_equalsWithFloatArray_withFloatArray_((IOSFloatArray *) cast_chk(o1, [IOSFloatArray class]), (IOSFloatArray *) cast_chk(o2, [IOSFloatArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangDouble, TYPE)]) {
    return JavaUtilArrays_equalsWithDoubleArray_withDoubleArray_((IOSDoubleArray *) cast_chk(o1, [IOSDoubleArray class]), (IOSDoubleArray *) cast_chk(o2, [IOSDoubleArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangBoolean, TYPE)]) {
    return JavaUtilArrays_equalsWithBooleanArray_withBooleanArray_((IOSBooleanArray *) cast_chk(o1, [IOSBooleanArray class]), (IOSBooleanArray *) cast_chk(o2, [IOSBooleanArray class]));
  }
  return JavaUtilArrays_equalsWithNSObjectArray_withNSObjectArray_((IOSObjectArray *) cast_check(o1, IOSClass_arrayType(NSObject_class_(), 1)), (IOSObjectArray *) cast_check(o2, IOSClass_arrayType(NSObject_class_(), 1)));
}

jboolean OrgApacheCommonsLang3AnnotationUtils_annotationArrayMemberEqualsWithJavaLangAnnotationAnnotationArray_withJavaLangAnnotationAnnotationArray_(IOSObjectArray *a1, IOSObjectArray *a2) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  if (((IOSObjectArray *) nil_chk(a1))->size_ != ((IOSObjectArray *) nil_chk(a2))->size_) {
    return false;
  }
  for (jint i = 0; i < a1->size_; i++) {
    if (!OrgApacheCommonsLang3AnnotationUtils_equalsWithJavaLangAnnotationAnnotation_withJavaLangAnnotationAnnotation_(IOSObjectArray_Get(a1, i), IOSObjectArray_Get(a2, i))) {
      return false;
    }
  }
  return true;
}

jint OrgApacheCommonsLang3AnnotationUtils_arrayMemberHashWithIOSClass_withId_(IOSClass *componentType, id o) {
  OrgApacheCommonsLang3AnnotationUtils_initialize();
  if ([((IOSClass *) nil_chk(componentType)) isEqual:JreLoadStatic(JavaLangByte, TYPE)]) {
    return JavaUtilArrays_hashCodeWithByteArray_((IOSByteArray *) cast_chk(o, [IOSByteArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangShort, TYPE)]) {
    return JavaUtilArrays_hashCodeWithShortArray_((IOSShortArray *) cast_chk(o, [IOSShortArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangInteger, TYPE)]) {
    return JavaUtilArrays_hashCodeWithIntArray_((IOSIntArray *) cast_chk(o, [IOSIntArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangCharacter, TYPE)]) {
    return JavaUtilArrays_hashCodeWithCharArray_((IOSCharArray *) cast_chk(o, [IOSCharArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangLong, TYPE)]) {
    return JavaUtilArrays_hashCodeWithLongArray_((IOSLongArray *) cast_chk(o, [IOSLongArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangFloat, TYPE)]) {
    return JavaUtilArrays_hashCodeWithFloatArray_((IOSFloatArray *) cast_chk(o, [IOSFloatArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangDouble, TYPE)]) {
    return JavaUtilArrays_hashCodeWithDoubleArray_((IOSDoubleArray *) cast_chk(o, [IOSDoubleArray class]));
  }
  if ([componentType isEqual:JreLoadStatic(JavaLangBoolean, TYPE)]) {
    return JavaUtilArrays_hashCodeWithBooleanArray_((IOSBooleanArray *) cast_chk(o, [IOSBooleanArray class]));
  }
  return JavaUtilArrays_hashCodeWithNSObjectArray_((IOSObjectArray *) cast_check(o, IOSClass_arrayType(NSObject_class_(), 1)));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3AnnotationUtils)

@implementation OrgApacheCommonsLang3AnnotationUtils_1

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3AnnotationUtils_1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getShortClassNameWithIOSClass:(IOSClass *)cls {
  IOSClass *annotationType = nil;
  for (IOSClass * __strong iface in nil_chk(OrgApacheCommonsLang3ClassUtils_getAllInterfacesWithIOSClass_(cls))) {
    if ([JavaLangAnnotationAnnotation_class_() isAssignableFrom:iface]) {
      IOSClass *found = iface;
      annotationType = found;
      break;
    }
  }
  return [((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_initWithNSString_(annotationType == nil ? @"" : [annotationType getName]) insertWithInt:0 withChar:'@'])) description];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                      withId:(id)value {
  if ([JavaLangAnnotationAnnotation_class_() isInstance:value]) {
    value = OrgApacheCommonsLang3AnnotationUtils_toStringWithJavaLangAnnotationAnnotation_((id<JavaLangAnnotationAnnotation>) cast_check(value, JavaLangAnnotationAnnotation_class_()));
  }
  [super appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withId:value];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 0, 1, -1, 2, -1, -1 },
    { NULL, "V", 0x4, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getShortClassNameWithIOSClass:);
  methods[2].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3AnnotationUtils_1_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getShortClassName", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/String;", "appendDetail", "LJavaLangStringBuffer;LNSString;LNSObject;", "LOrgApacheCommonsLang3AnnotationUtils;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3AnnotationUtils_1 = { "", "org.apache.commons.lang3", ptrTable, methods, fields, 7, 0x8018, 3, 1, 5, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3AnnotationUtils_1;
}

@end

void OrgApacheCommonsLang3AnnotationUtils_1_init(OrgApacheCommonsLang3AnnotationUtils_1 *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
  {
    [self setDefaultFullDetailWithBoolean:true];
    [self setArrayContentDetailWithBoolean:true];
    [self setUseClassNameWithBoolean:true];
    [self setUseShortClassNameWithBoolean:true];
    [self setUseIdentityHashCodeWithBoolean:false];
    [self setContentStartWithNSString:@"("];
    [self setContentEndWithNSString:@")"];
    [self setFieldSeparatorWithNSString:@", "];
    [self setArrayStartWithNSString:@"["];
    [self setArrayEndWithNSString:@"]"];
  }
}

OrgApacheCommonsLang3AnnotationUtils_1 *new_OrgApacheCommonsLang3AnnotationUtils_1_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3AnnotationUtils_1, init)
}

OrgApacheCommonsLang3AnnotationUtils_1 *create_OrgApacheCommonsLang3AnnotationUtils_1_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3AnnotationUtils_1, init)
}
