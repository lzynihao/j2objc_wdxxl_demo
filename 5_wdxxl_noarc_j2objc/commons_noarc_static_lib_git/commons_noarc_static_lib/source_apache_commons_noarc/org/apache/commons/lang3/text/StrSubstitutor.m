//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/text/StrSubstitutor.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CharSequence.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Enumeration.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Properties.h"
#include "org/apache/commons/lang3/StringUtils.h"
#include "org/apache/commons/lang3/text/StrBuilder.h"
#include "org/apache/commons/lang3/text/StrLookup.h"
#include "org/apache/commons/lang3/text/StrMatcher.h"
#include "org/apache/commons/lang3/text/StrSubstitutor.h"

@interface OrgApacheCommonsLang3TextStrSubstitutor () {
 @public
  jchar escapeChar_;
  OrgApacheCommonsLang3TextStrMatcher *prefixMatcher_;
  OrgApacheCommonsLang3TextStrMatcher *suffixMatcher_;
  OrgApacheCommonsLang3TextStrMatcher *valueDelimiterMatcher_;
  OrgApacheCommonsLang3TextStrLookup *variableResolver_;
  jboolean enableSubstitutionInVariables_;
}

- (jint)substituteWithOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)buf
                                                  withInt:(jint)offset
                                                  withInt:(jint)length
                                         withJavaUtilList:(id<JavaUtilList>)priorVariables;

- (void)checkCyclicSubstitutionWithNSString:(NSString *)varName
                           withJavaUtilList:(id<JavaUtilList>)priorVariables;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3TextStrSubstitutor, prefixMatcher_, OrgApacheCommonsLang3TextStrMatcher *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3TextStrSubstitutor, suffixMatcher_, OrgApacheCommonsLang3TextStrMatcher *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3TextStrSubstitutor, valueDelimiterMatcher_, OrgApacheCommonsLang3TextStrMatcher *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3TextStrSubstitutor, variableResolver_, OrgApacheCommonsLang3TextStrLookup *)

__attribute__((unused)) static jint OrgApacheCommonsLang3TextStrSubstitutor_substituteWithOrgApacheCommonsLang3TextStrBuilder_withInt_withInt_withJavaUtilList_(OrgApacheCommonsLang3TextStrSubstitutor *self, OrgApacheCommonsLang3TextStrBuilder *buf, jint offset, jint length, id<JavaUtilList> priorVariables);

__attribute__((unused)) static void OrgApacheCommonsLang3TextStrSubstitutor_checkCyclicSubstitutionWithNSString_withJavaUtilList_(OrgApacheCommonsLang3TextStrSubstitutor *self, NSString *varName, id<JavaUtilList> priorVariables);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsLang3TextStrSubstitutor)

OrgApacheCommonsLang3TextStrMatcher *OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_PREFIX;
OrgApacheCommonsLang3TextStrMatcher *OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_SUFFIX;
OrgApacheCommonsLang3TextStrMatcher *OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_VALUE_DELIMITER;

@implementation OrgApacheCommonsLang3TextStrSubstitutor

+ (NSString *)replaceWithId:(id)source
            withJavaUtilMap:(id<JavaUtilMap>)valueMap {
  return OrgApacheCommonsLang3TextStrSubstitutor_replaceWithId_withJavaUtilMap_(source, valueMap);
}

+ (NSString *)replaceWithId:(id)source
            withJavaUtilMap:(id<JavaUtilMap>)valueMap
               withNSString:(NSString *)prefix
               withNSString:(NSString *)suffix {
  return OrgApacheCommonsLang3TextStrSubstitutor_replaceWithId_withJavaUtilMap_withNSString_withNSString_(source, valueMap, prefix, suffix);
}

+ (NSString *)replaceWithId:(id)source
     withJavaUtilProperties:(JavaUtilProperties *)valueProperties {
  return OrgApacheCommonsLang3TextStrSubstitutor_replaceWithId_withJavaUtilProperties_(source, valueProperties);
}

+ (NSString *)replaceSystemPropertiesWithId:(id)source {
  return OrgApacheCommonsLang3TextStrSubstitutor_replaceSystemPropertiesWithId_(source);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3TextStrSubstitutor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)valueMap {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_(self, valueMap);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)valueMap
                       withNSString:(NSString *)prefix
                       withNSString:(NSString *)suffix {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_(self, valueMap, prefix, suffix);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)valueMap
                       withNSString:(NSString *)prefix
                       withNSString:(NSString *)suffix
                           withChar:(jchar)escape {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_withChar_(self, valueMap, prefix, suffix, escape);
  return self;
}

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)valueMap
                       withNSString:(NSString *)prefix
                       withNSString:(NSString *)suffix
                           withChar:(jchar)escape
                       withNSString:(NSString *)valueDelimiter {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_withChar_withNSString_(self, valueMap, prefix, suffix, escape, valueDelimiter);
  return self;
}

- (instancetype)initWithOrgApacheCommonsLang3TextStrLookup:(OrgApacheCommonsLang3TextStrLookup *)variableResolver {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_(self, variableResolver);
  return self;
}

- (instancetype)initWithOrgApacheCommonsLang3TextStrLookup:(OrgApacheCommonsLang3TextStrLookup *)variableResolver
                                              withNSString:(NSString *)prefix
                                              withNSString:(NSString *)suffix
                                                  withChar:(jchar)escape {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_(self, variableResolver, prefix, suffix, escape);
  return self;
}

- (instancetype)initWithOrgApacheCommonsLang3TextStrLookup:(OrgApacheCommonsLang3TextStrLookup *)variableResolver
                                              withNSString:(NSString *)prefix
                                              withNSString:(NSString *)suffix
                                                  withChar:(jchar)escape
                                              withNSString:(NSString *)valueDelimiter {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_withNSString_(self, variableResolver, prefix, suffix, escape, valueDelimiter);
  return self;
}

- (instancetype)initWithOrgApacheCommonsLang3TextStrLookup:(OrgApacheCommonsLang3TextStrLookup *)variableResolver
                   withOrgApacheCommonsLang3TextStrMatcher:(OrgApacheCommonsLang3TextStrMatcher *)prefixMatcher
                   withOrgApacheCommonsLang3TextStrMatcher:(OrgApacheCommonsLang3TextStrMatcher *)suffixMatcher
                                                  withChar:(jchar)escape {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_(self, variableResolver, prefixMatcher, suffixMatcher, escape);
  return self;
}

- (instancetype)initWithOrgApacheCommonsLang3TextStrLookup:(OrgApacheCommonsLang3TextStrLookup *)variableResolver
                   withOrgApacheCommonsLang3TextStrMatcher:(OrgApacheCommonsLang3TextStrMatcher *)prefixMatcher
                   withOrgApacheCommonsLang3TextStrMatcher:(OrgApacheCommonsLang3TextStrMatcher *)suffixMatcher
                                                  withChar:(jchar)escape
                   withOrgApacheCommonsLang3TextStrMatcher:(OrgApacheCommonsLang3TextStrMatcher *)valueDelimiterMatcher {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_withOrgApacheCommonsLang3TextStrMatcher_(self, variableResolver, prefixMatcher, suffixMatcher, escape, valueDelimiterMatcher);
  return self;
}

- (NSString *)replaceWithNSString:(NSString *)source {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = create_OrgApacheCommonsLang3TextStrBuilder_initWithNSString_(source);
  if ([self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:[source java_length]] == false) {
    return source;
  }
  return [buf description];
}

- (NSString *)replaceWithNSString:(NSString *)source
                          withInt:(jint)offset
                          withInt:(jint)length {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(length) appendWithNSString:source withInt:offset withInt:length];
  if ([self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:length] == false) {
    return [source java_substring:offset endIndex:offset + length];
  }
  return [((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) description];
}

- (NSString *)replaceWithCharArray:(IOSCharArray *)source {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(source->size_) appendWithCharArray:source];
  [self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:source->size_];
  return [((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) description];
}

- (NSString *)replaceWithCharArray:(IOSCharArray *)source
                           withInt:(jint)offset
                           withInt:(jint)length {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(length) appendWithCharArray:source withInt:offset withInt:length];
  [self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:length];
  return [((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) description];
}

- (NSString *)replaceWithJavaLangStringBuffer:(JavaLangStringBuffer *)source {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_([source java_length]) appendWithJavaLangStringBuffer:source];
  [self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:[((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) java_length]];
  return [buf description];
}

- (NSString *)replaceWithJavaLangStringBuffer:(JavaLangStringBuffer *)source
                                      withInt:(jint)offset
                                      withInt:(jint)length {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(length) appendWithJavaLangStringBuffer:source withInt:offset withInt:length];
  [self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:length];
  return [((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) description];
}

- (NSString *)replaceWithJavaLangCharSequence:(id<JavaLangCharSequence>)source {
  if (source == nil) {
    return nil;
  }
  return [self replaceWithJavaLangCharSequence:source withInt:0 withInt:[source java_length]];
}

- (NSString *)replaceWithJavaLangCharSequence:(id<JavaLangCharSequence>)source
                                      withInt:(jint)offset
                                      withInt:(jint)length {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(length) appendWithJavaLangCharSequence:source withInt:offset withInt:length];
  [self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:length];
  return [((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) description];
}

- (NSString *)replaceWithOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)source {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_([source java_length]) appendWithOrgApacheCommonsLang3TextStrBuilder:source];
  [self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:[((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) java_length]];
  return [buf description];
}

- (NSString *)replaceWithOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)source
                                                     withInt:(jint)offset
                                                     withInt:(jint)length {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(length) appendWithOrgApacheCommonsLang3TextStrBuilder:source withInt:offset withInt:length];
  [self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:length];
  return [((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) description];
}

- (NSString *)replaceWithId:(id)source {
  if (source == nil) {
    return nil;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_init() appendWithId:source];
  [self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:[((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) java_length]];
  return [buf description];
}

- (jboolean)replaceInWithJavaLangStringBuffer:(JavaLangStringBuffer *)source {
  if (source == nil) {
    return false;
  }
  return [self replaceInWithJavaLangStringBuffer:source withInt:0 withInt:[source java_length]];
}

- (jboolean)replaceInWithJavaLangStringBuffer:(JavaLangStringBuffer *)source
                                      withInt:(jint)offset
                                      withInt:(jint)length {
  if (source == nil) {
    return false;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(length) appendWithJavaLangStringBuffer:source withInt:offset withInt:length];
  if ([self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:length] == false) {
    return false;
  }
  [source replaceWithInt:offset withInt:offset + length withNSString:[((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) description]];
  return true;
}

- (jboolean)replaceInWithJavaLangStringBuilder:(JavaLangStringBuilder *)source {
  if (source == nil) {
    return false;
  }
  return [self replaceInWithJavaLangStringBuilder:source withInt:0 withInt:[source java_length]];
}

- (jboolean)replaceInWithJavaLangStringBuilder:(JavaLangStringBuilder *)source
                                       withInt:(jint)offset
                                       withInt:(jint)length {
  if (source == nil) {
    return false;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = [create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(length) appendWithJavaLangStringBuilder:source withInt:offset withInt:length];
  if ([self substituteWithOrgApacheCommonsLang3TextStrBuilder:buf withInt:0 withInt:length] == false) {
    return false;
  }
  [source replaceWithInt:offset withInt:offset + length withNSString:[((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf)) description]];
  return true;
}

- (jboolean)replaceInWithOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)source {
  if (source == nil) {
    return false;
  }
  return [self substituteWithOrgApacheCommonsLang3TextStrBuilder:source withInt:0 withInt:[source java_length]];
}

- (jboolean)replaceInWithOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)source
                                                     withInt:(jint)offset
                                                     withInt:(jint)length {
  if (source == nil) {
    return false;
  }
  return [self substituteWithOrgApacheCommonsLang3TextStrBuilder:source withInt:offset withInt:length];
}

- (jboolean)substituteWithOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)buf
                                                      withInt:(jint)offset
                                                      withInt:(jint)length {
  return OrgApacheCommonsLang3TextStrSubstitutor_substituteWithOrgApacheCommonsLang3TextStrBuilder_withInt_withInt_withJavaUtilList_(self, buf, offset, length, nil) > 0;
}

- (jint)substituteWithOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)buf
                                                  withInt:(jint)offset
                                                  withInt:(jint)length
                                         withJavaUtilList:(id<JavaUtilList>)priorVariables {
  return OrgApacheCommonsLang3TextStrSubstitutor_substituteWithOrgApacheCommonsLang3TextStrBuilder_withInt_withInt_withJavaUtilList_(self, buf, offset, length, priorVariables);
}

- (void)checkCyclicSubstitutionWithNSString:(NSString *)varName
                           withJavaUtilList:(id<JavaUtilList>)priorVariables {
  OrgApacheCommonsLang3TextStrSubstitutor_checkCyclicSubstitutionWithNSString_withJavaUtilList_(self, varName, priorVariables);
}

- (NSString *)resolveVariableWithNSString:(NSString *)variableName
  withOrgApacheCommonsLang3TextStrBuilder:(OrgApacheCommonsLang3TextStrBuilder *)buf
                                  withInt:(jint)startPos
                                  withInt:(jint)endPos {
  OrgApacheCommonsLang3TextStrLookup *resolver = [self getVariableResolver];
  if (resolver == nil) {
    return nil;
  }
  return [resolver lookupWithNSString:variableName];
}

- (jchar)getEscapeChar {
  return self->escapeChar_;
}

- (void)setEscapeCharWithChar:(jchar)escapeCharacter {
  self->escapeChar_ = escapeCharacter;
}

- (OrgApacheCommonsLang3TextStrMatcher *)getVariablePrefixMatcher {
  return prefixMatcher_;
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setVariablePrefixMatcherWithOrgApacheCommonsLang3TextStrMatcher:(OrgApacheCommonsLang3TextStrMatcher *)prefixMatcher {
  if (prefixMatcher == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Variable prefix matcher must not be null!");
  }
  JreStrongAssign(&self->prefixMatcher_, prefixMatcher);
  return self;
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setVariablePrefixWithChar:(jchar)prefix {
  return [self setVariablePrefixMatcherWithOrgApacheCommonsLang3TextStrMatcher:OrgApacheCommonsLang3TextStrMatcher_charMatcherWithChar_(prefix)];
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setVariablePrefixWithNSString:(NSString *)prefix {
  if (prefix == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Variable prefix must not be null!");
  }
  return [self setVariablePrefixMatcherWithOrgApacheCommonsLang3TextStrMatcher:OrgApacheCommonsLang3TextStrMatcher_stringMatcherWithNSString_(prefix)];
}

- (OrgApacheCommonsLang3TextStrMatcher *)getVariableSuffixMatcher {
  return suffixMatcher_;
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setVariableSuffixMatcherWithOrgApacheCommonsLang3TextStrMatcher:(OrgApacheCommonsLang3TextStrMatcher *)suffixMatcher {
  if (suffixMatcher == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Variable suffix matcher must not be null!");
  }
  JreStrongAssign(&self->suffixMatcher_, suffixMatcher);
  return self;
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setVariableSuffixWithChar:(jchar)suffix {
  return [self setVariableSuffixMatcherWithOrgApacheCommonsLang3TextStrMatcher:OrgApacheCommonsLang3TextStrMatcher_charMatcherWithChar_(suffix)];
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setVariableSuffixWithNSString:(NSString *)suffix {
  if (suffix == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Variable suffix must not be null!");
  }
  return [self setVariableSuffixMatcherWithOrgApacheCommonsLang3TextStrMatcher:OrgApacheCommonsLang3TextStrMatcher_stringMatcherWithNSString_(suffix)];
}

- (OrgApacheCommonsLang3TextStrMatcher *)getValueDelimiterMatcher {
  return valueDelimiterMatcher_;
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setValueDelimiterMatcherWithOrgApacheCommonsLang3TextStrMatcher:(OrgApacheCommonsLang3TextStrMatcher *)valueDelimiterMatcher {
  JreStrongAssign(&self->valueDelimiterMatcher_, valueDelimiterMatcher);
  return self;
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setValueDelimiterWithChar:(jchar)valueDelimiter {
  return [self setValueDelimiterMatcherWithOrgApacheCommonsLang3TextStrMatcher:OrgApacheCommonsLang3TextStrMatcher_charMatcherWithChar_(valueDelimiter)];
}

- (OrgApacheCommonsLang3TextStrSubstitutor *)setValueDelimiterWithNSString:(NSString *)valueDelimiter {
  if (OrgApacheCommonsLang3StringUtils_isEmptyWithJavaLangCharSequence_(valueDelimiter)) {
    [self setValueDelimiterMatcherWithOrgApacheCommonsLang3TextStrMatcher:nil];
    return self;
  }
  return [self setValueDelimiterMatcherWithOrgApacheCommonsLang3TextStrMatcher:OrgApacheCommonsLang3TextStrMatcher_stringMatcherWithNSString_(valueDelimiter)];
}

- (OrgApacheCommonsLang3TextStrLookup *)getVariableResolver {
  return self->variableResolver_;
}

- (void)setVariableResolverWithOrgApacheCommonsLang3TextStrLookup:(OrgApacheCommonsLang3TextStrLookup *)variableResolver {
  JreStrongAssign(&self->variableResolver_, variableResolver);
}

- (jboolean)isEnableSubstitutionInVariables {
  return enableSubstitutionInVariables_;
}

- (void)setEnableSubstitutionInVariablesWithBoolean:(jboolean)enableSubstitutionInVariables {
  self->enableSubstitutionInVariables_ = enableSubstitutionInVariables;
}

- (void)dealloc {
  RELEASE_(prefixMatcher_);
  RELEASE_(suffixMatcher_);
  RELEASE_(valueDelimiterMatcher_);
  RELEASE_(variableResolver_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 5, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, 9, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, 11, -1, -1 },
    { NULL, NULL, 0x1, -1, 12, -1, 13, -1, -1 },
    { NULL, NULL, 0x1, -1, 14, -1, 15, -1, -1 },
    { NULL, NULL, 0x1, -1, 16, -1, 17, -1, -1 },
    { NULL, NULL, 0x1, -1, 18, -1, 19, -1, -1 },
    { NULL, NULL, 0x1, -1, 20, -1, 21, -1, -1 },
    { NULL, NULL, 0x1, -1, 22, -1, 23, -1, -1 },
    { NULL, NULL, 0x1, -1, 24, -1, 25, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 26, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 27, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 28, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 29, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 30, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 31, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 32, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 33, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 34, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 35, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 36, 30, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 36, 31, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 36, 37, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 36, 38, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 36, 34, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 36, 35, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 39, 35, -1, -1, -1, -1 },
    { NULL, "I", 0x2, 39, 40, -1, 41, -1, -1 },
    { NULL, "V", 0x2, 42, 43, -1, 44, -1, -1 },
    { NULL, "LNSString;", 0x4, 45, 46, -1, -1, -1, -1 },
    { NULL, "C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 47, 48, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrMatcher;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 49, 50, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 51, 48, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 51, 26, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrMatcher;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 52, 50, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 53, 48, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 53, 26, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrMatcher;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 54, 50, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 55, 48, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrSubstitutor;", 0x1, 55, 26, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3TextStrLookup;", 0x1, -1, -1, -1, 56, -1, -1 },
    { NULL, "V", 0x1, 57, 16, -1, 17, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 58, 59, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(replaceWithId:withJavaUtilMap:);
  methods[1].selector = @selector(replaceWithId:withJavaUtilMap:withNSString:withNSString:);
  methods[2].selector = @selector(replaceWithId:withJavaUtilProperties:);
  methods[3].selector = @selector(replaceSystemPropertiesWithId:);
  methods[4].selector = @selector(init);
  methods[5].selector = @selector(initWithJavaUtilMap:);
  methods[6].selector = @selector(initWithJavaUtilMap:withNSString:withNSString:);
  methods[7].selector = @selector(initWithJavaUtilMap:withNSString:withNSString:withChar:);
  methods[8].selector = @selector(initWithJavaUtilMap:withNSString:withNSString:withChar:withNSString:);
  methods[9].selector = @selector(initWithOrgApacheCommonsLang3TextStrLookup:);
  methods[10].selector = @selector(initWithOrgApacheCommonsLang3TextStrLookup:withNSString:withNSString:withChar:);
  methods[11].selector = @selector(initWithOrgApacheCommonsLang3TextStrLookup:withNSString:withNSString:withChar:withNSString:);
  methods[12].selector = @selector(initWithOrgApacheCommonsLang3TextStrLookup:withOrgApacheCommonsLang3TextStrMatcher:withOrgApacheCommonsLang3TextStrMatcher:withChar:);
  methods[13].selector = @selector(initWithOrgApacheCommonsLang3TextStrLookup:withOrgApacheCommonsLang3TextStrMatcher:withOrgApacheCommonsLang3TextStrMatcher:withChar:withOrgApacheCommonsLang3TextStrMatcher:);
  methods[14].selector = @selector(replaceWithNSString:);
  methods[15].selector = @selector(replaceWithNSString:withInt:withInt:);
  methods[16].selector = @selector(replaceWithCharArray:);
  methods[17].selector = @selector(replaceWithCharArray:withInt:withInt:);
  methods[18].selector = @selector(replaceWithJavaLangStringBuffer:);
  methods[19].selector = @selector(replaceWithJavaLangStringBuffer:withInt:withInt:);
  methods[20].selector = @selector(replaceWithJavaLangCharSequence:);
  methods[21].selector = @selector(replaceWithJavaLangCharSequence:withInt:withInt:);
  methods[22].selector = @selector(replaceWithOrgApacheCommonsLang3TextStrBuilder:);
  methods[23].selector = @selector(replaceWithOrgApacheCommonsLang3TextStrBuilder:withInt:withInt:);
  methods[24].selector = @selector(replaceWithId:);
  methods[25].selector = @selector(replaceInWithJavaLangStringBuffer:);
  methods[26].selector = @selector(replaceInWithJavaLangStringBuffer:withInt:withInt:);
  methods[27].selector = @selector(replaceInWithJavaLangStringBuilder:);
  methods[28].selector = @selector(replaceInWithJavaLangStringBuilder:withInt:withInt:);
  methods[29].selector = @selector(replaceInWithOrgApacheCommonsLang3TextStrBuilder:);
  methods[30].selector = @selector(replaceInWithOrgApacheCommonsLang3TextStrBuilder:withInt:withInt:);
  methods[31].selector = @selector(substituteWithOrgApacheCommonsLang3TextStrBuilder:withInt:withInt:);
  methods[32].selector = @selector(substituteWithOrgApacheCommonsLang3TextStrBuilder:withInt:withInt:withJavaUtilList:);
  methods[33].selector = @selector(checkCyclicSubstitutionWithNSString:withJavaUtilList:);
  methods[34].selector = @selector(resolveVariableWithNSString:withOrgApacheCommonsLang3TextStrBuilder:withInt:withInt:);
  methods[35].selector = @selector(getEscapeChar);
  methods[36].selector = @selector(setEscapeCharWithChar:);
  methods[37].selector = @selector(getVariablePrefixMatcher);
  methods[38].selector = @selector(setVariablePrefixMatcherWithOrgApacheCommonsLang3TextStrMatcher:);
  methods[39].selector = @selector(setVariablePrefixWithChar:);
  methods[40].selector = @selector(setVariablePrefixWithNSString:);
  methods[41].selector = @selector(getVariableSuffixMatcher);
  methods[42].selector = @selector(setVariableSuffixMatcherWithOrgApacheCommonsLang3TextStrMatcher:);
  methods[43].selector = @selector(setVariableSuffixWithChar:);
  methods[44].selector = @selector(setVariableSuffixWithNSString:);
  methods[45].selector = @selector(getValueDelimiterMatcher);
  methods[46].selector = @selector(setValueDelimiterMatcherWithOrgApacheCommonsLang3TextStrMatcher:);
  methods[47].selector = @selector(setValueDelimiterWithChar:);
  methods[48].selector = @selector(setValueDelimiterWithNSString:);
  methods[49].selector = @selector(getVariableResolver);
  methods[50].selector = @selector(setVariableResolverWithOrgApacheCommonsLang3TextStrLookup:);
  methods[51].selector = @selector(isEnableSubstitutionInVariables);
  methods[52].selector = @selector(setEnableSubstitutionInVariablesWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_ESCAPE", "C", .constantValue.asUnichar = OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_ESCAPE, 0x19, -1, -1, -1, -1 },
    { "DEFAULT_PREFIX", "LOrgApacheCommonsLang3TextStrMatcher;", .constantValue.asLong = 0, 0x19, -1, 60, -1, -1 },
    { "DEFAULT_SUFFIX", "LOrgApacheCommonsLang3TextStrMatcher;", .constantValue.asLong = 0, 0x19, -1, 61, -1, -1 },
    { "DEFAULT_VALUE_DELIMITER", "LOrgApacheCommonsLang3TextStrMatcher;", .constantValue.asLong = 0, 0x19, -1, 62, -1, -1 },
    { "escapeChar_", "C", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "prefixMatcher_", "LOrgApacheCommonsLang3TextStrMatcher;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "suffixMatcher_", "LOrgApacheCommonsLang3TextStrMatcher;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "valueDelimiterMatcher_", "LOrgApacheCommonsLang3TextStrMatcher;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "variableResolver_", "LOrgApacheCommonsLang3TextStrLookup;", .constantValue.asLong = 0, 0x2, -1, -1, 63, -1 },
    { "enableSubstitutionInVariables_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "replace", "LNSObject;LJavaUtilMap;", "<V:Ljava/lang/Object;>(Ljava/lang/Object;Ljava/util/Map<Ljava/lang/String;TV;>;)Ljava/lang/String;", "LNSObject;LJavaUtilMap;LNSString;LNSString;", "<V:Ljava/lang/Object;>(Ljava/lang/Object;Ljava/util/Map<Ljava/lang/String;TV;>;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "LNSObject;LJavaUtilProperties;", "replaceSystemProperties", "LNSObject;", "LJavaUtilMap;", "<V:Ljava/lang/Object;>(Ljava/util/Map<Ljava/lang/String;TV;>;)V", "LJavaUtilMap;LNSString;LNSString;", "<V:Ljava/lang/Object;>(Ljava/util/Map<Ljava/lang/String;TV;>;Ljava/lang/String;Ljava/lang/String;)V", "LJavaUtilMap;LNSString;LNSString;C", "<V:Ljava/lang/Object;>(Ljava/util/Map<Ljava/lang/String;TV;>;Ljava/lang/String;Ljava/lang/String;C)V", "LJavaUtilMap;LNSString;LNSString;CLNSString;", "<V:Ljava/lang/Object;>(Ljava/util/Map<Ljava/lang/String;TV;>;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V", "LOrgApacheCommonsLang3TextStrLookup;", "(Lorg/apache/commons/lang3/text/StrLookup<*>;)V", "LOrgApacheCommonsLang3TextStrLookup;LNSString;LNSString;C", "(Lorg/apache/commons/lang3/text/StrLookup<*>;Ljava/lang/String;Ljava/lang/String;C)V", "LOrgApacheCommonsLang3TextStrLookup;LNSString;LNSString;CLNSString;", "(Lorg/apache/commons/lang3/text/StrLookup<*>;Ljava/lang/String;Ljava/lang/String;CLjava/lang/String;)V", "LOrgApacheCommonsLang3TextStrLookup;LOrgApacheCommonsLang3TextStrMatcher;LOrgApacheCommonsLang3TextStrMatcher;C", "(Lorg/apache/commons/lang3/text/StrLookup<*>;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;C)V", "LOrgApacheCommonsLang3TextStrLookup;LOrgApacheCommonsLang3TextStrMatcher;LOrgApacheCommonsLang3TextStrMatcher;CLOrgApacheCommonsLang3TextStrMatcher;", "(Lorg/apache/commons/lang3/text/StrLookup<*>;Lorg/apache/commons/lang3/text/StrMatcher;Lorg/apache/commons/lang3/text/StrMatcher;CLorg/apache/commons/lang3/text/StrMatcher;)V", "LNSString;", "LNSString;II", "[C", "[CII", "LJavaLangStringBuffer;", "LJavaLangStringBuffer;II", "LJavaLangCharSequence;", "LJavaLangCharSequence;II", "LOrgApacheCommonsLang3TextStrBuilder;", "LOrgApacheCommonsLang3TextStrBuilder;II", "replaceIn", "LJavaLangStringBuilder;", "LJavaLangStringBuilder;II", "substitute", "LOrgApacheCommonsLang3TextStrBuilder;IILJavaUtilList;", "(Lorg/apache/commons/lang3/text/StrBuilder;IILjava/util/List<Ljava/lang/String;>;)I", "checkCyclicSubstitution", "LNSString;LJavaUtilList;", "(Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)V", "resolveVariable", "LNSString;LOrgApacheCommonsLang3TextStrBuilder;II", "setEscapeChar", "C", "setVariablePrefixMatcher", "LOrgApacheCommonsLang3TextStrMatcher;", "setVariablePrefix", "setVariableSuffixMatcher", "setVariableSuffix", "setValueDelimiterMatcher", "setValueDelimiter", "()Lorg/apache/commons/lang3/text/StrLookup<*>;", "setVariableResolver", "setEnableSubstitutionInVariables", "Z", &OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_PREFIX, &OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_SUFFIX, &OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_VALUE_DELIMITER, "Lorg/apache/commons/lang3/text/StrLookup<*>;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3TextStrSubstitutor = { "StrSubstitutor", "org.apache.commons.lang3.text", ptrTable, methods, fields, 7, 0x1, 53, 10, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3TextStrSubstitutor;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsLang3TextStrSubstitutor class]) {
    JreStrongAssign(&OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_PREFIX, OrgApacheCommonsLang3TextStrMatcher_stringMatcherWithNSString_(@"${"));
    JreStrongAssign(&OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_SUFFIX, OrgApacheCommonsLang3TextStrMatcher_stringMatcherWithNSString_(@"}"));
    JreStrongAssign(&OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_VALUE_DELIMITER, OrgApacheCommonsLang3TextStrMatcher_stringMatcherWithNSString_(@":-"));
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsLang3TextStrSubstitutor)
  }
}

@end

NSString *OrgApacheCommonsLang3TextStrSubstitutor_replaceWithId_withJavaUtilMap_(id source, id<JavaUtilMap> valueMap) {
  OrgApacheCommonsLang3TextStrSubstitutor_initialize();
  return [create_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_(valueMap) replaceWithId:source];
}

NSString *OrgApacheCommonsLang3TextStrSubstitutor_replaceWithId_withJavaUtilMap_withNSString_withNSString_(id source, id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix) {
  OrgApacheCommonsLang3TextStrSubstitutor_initialize();
  return [create_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_(valueMap, prefix, suffix) replaceWithId:source];
}

NSString *OrgApacheCommonsLang3TextStrSubstitutor_replaceWithId_withJavaUtilProperties_(id source, JavaUtilProperties *valueProperties) {
  OrgApacheCommonsLang3TextStrSubstitutor_initialize();
  if (valueProperties == nil) {
    return [nil_chk(source) description];
  }
  id<JavaUtilMap> valueMap = create_JavaUtilHashMap_init();
  id<JavaUtilEnumeration> propNames = [valueProperties propertyNames];
  while ([((id<JavaUtilEnumeration>) nil_chk(propNames)) hasMoreElements]) {
    NSString *propName = (NSString *) cast_chk([propNames nextElement], [NSString class]);
    NSString *propValue = [valueProperties getPropertyWithNSString:propName];
    [valueMap putWithId:propName withId:propValue];
  }
  return OrgApacheCommonsLang3TextStrSubstitutor_replaceWithId_withJavaUtilMap_(source, valueMap);
}

NSString *OrgApacheCommonsLang3TextStrSubstitutor_replaceSystemPropertiesWithId_(id source) {
  OrgApacheCommonsLang3TextStrSubstitutor_initialize();
  return [create_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_(OrgApacheCommonsLang3TextStrLookup_systemPropertiesLookup()) replaceWithId:source];
}

void OrgApacheCommonsLang3TextStrSubstitutor_init(OrgApacheCommonsLang3TextStrSubstitutor *self) {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_(self, nil, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_PREFIX, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_SUFFIX, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_ESCAPE);
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, init)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, init)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_(OrgApacheCommonsLang3TextStrSubstitutor *self, id<JavaUtilMap> valueMap) {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_(self, OrgApacheCommonsLang3TextStrLookup_mapLookupWithJavaUtilMap_(valueMap), OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_PREFIX, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_SUFFIX, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_ESCAPE);
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_(id<JavaUtilMap> valueMap) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithJavaUtilMap_, valueMap)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_(id<JavaUtilMap> valueMap) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithJavaUtilMap_, valueMap)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_(OrgApacheCommonsLang3TextStrSubstitutor *self, id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix) {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_(self, OrgApacheCommonsLang3TextStrLookup_mapLookupWithJavaUtilMap_(valueMap), prefix, suffix, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_ESCAPE);
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_(id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithJavaUtilMap_withNSString_withNSString_, valueMap, prefix, suffix)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_(id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithJavaUtilMap_withNSString_withNSString_, valueMap, prefix, suffix)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_withChar_(OrgApacheCommonsLang3TextStrSubstitutor *self, id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix, jchar escape) {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_(self, OrgApacheCommonsLang3TextStrLookup_mapLookupWithJavaUtilMap_(valueMap), prefix, suffix, escape);
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_withChar_(id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix, jchar escape) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithJavaUtilMap_withNSString_withNSString_withChar_, valueMap, prefix, suffix, escape)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_withChar_(id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix, jchar escape) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithJavaUtilMap_withNSString_withNSString_withChar_, valueMap, prefix, suffix, escape)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_withChar_withNSString_(OrgApacheCommonsLang3TextStrSubstitutor *self, id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix, jchar escape, NSString *valueDelimiter) {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_withNSString_(self, OrgApacheCommonsLang3TextStrLookup_mapLookupWithJavaUtilMap_(valueMap), prefix, suffix, escape, valueDelimiter);
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_withChar_withNSString_(id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix, jchar escape, NSString *valueDelimiter) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithJavaUtilMap_withNSString_withNSString_withChar_withNSString_, valueMap, prefix, suffix, escape, valueDelimiter)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithJavaUtilMap_withNSString_withNSString_withChar_withNSString_(id<JavaUtilMap> valueMap, NSString *prefix, NSString *suffix, jchar escape, NSString *valueDelimiter) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithJavaUtilMap_withNSString_withNSString_withChar_withNSString_, valueMap, prefix, suffix, escape, valueDelimiter)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_(OrgApacheCommonsLang3TextStrSubstitutor *self, OrgApacheCommonsLang3TextStrLookup *variableResolver) {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_(self, variableResolver, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_PREFIX, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_SUFFIX, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_ESCAPE);
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_(OrgApacheCommonsLang3TextStrLookup *variableResolver) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_, variableResolver)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_(OrgApacheCommonsLang3TextStrLookup *variableResolver) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_, variableResolver)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_(OrgApacheCommonsLang3TextStrSubstitutor *self, OrgApacheCommonsLang3TextStrLookup *variableResolver, NSString *prefix, NSString *suffix, jchar escape) {
  NSObject_init(self);
  [self setVariableResolverWithOrgApacheCommonsLang3TextStrLookup:variableResolver];
  [self setVariablePrefixWithNSString:prefix];
  [self setVariableSuffixWithNSString:suffix];
  [self setEscapeCharWithChar:escape];
  [self setValueDelimiterMatcherWithOrgApacheCommonsLang3TextStrMatcher:OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_VALUE_DELIMITER];
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_(OrgApacheCommonsLang3TextStrLookup *variableResolver, NSString *prefix, NSString *suffix, jchar escape) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_, variableResolver, prefix, suffix, escape)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_(OrgApacheCommonsLang3TextStrLookup *variableResolver, NSString *prefix, NSString *suffix, jchar escape) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_, variableResolver, prefix, suffix, escape)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_withNSString_(OrgApacheCommonsLang3TextStrSubstitutor *self, OrgApacheCommonsLang3TextStrLookup *variableResolver, NSString *prefix, NSString *suffix, jchar escape, NSString *valueDelimiter) {
  NSObject_init(self);
  [self setVariableResolverWithOrgApacheCommonsLang3TextStrLookup:variableResolver];
  [self setVariablePrefixWithNSString:prefix];
  [self setVariableSuffixWithNSString:suffix];
  [self setEscapeCharWithChar:escape];
  [self setValueDelimiterWithNSString:valueDelimiter];
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_withNSString_(OrgApacheCommonsLang3TextStrLookup *variableResolver, NSString *prefix, NSString *suffix, jchar escape, NSString *valueDelimiter) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_withNSString_, variableResolver, prefix, suffix, escape, valueDelimiter)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_withNSString_(OrgApacheCommonsLang3TextStrLookup *variableResolver, NSString *prefix, NSString *suffix, jchar escape, NSString *valueDelimiter) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_withNSString_withNSString_withChar_withNSString_, variableResolver, prefix, suffix, escape, valueDelimiter)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_(OrgApacheCommonsLang3TextStrSubstitutor *self, OrgApacheCommonsLang3TextStrLookup *variableResolver, OrgApacheCommonsLang3TextStrMatcher *prefixMatcher, OrgApacheCommonsLang3TextStrMatcher *suffixMatcher, jchar escape) {
  OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_withOrgApacheCommonsLang3TextStrMatcher_(self, variableResolver, prefixMatcher, suffixMatcher, escape, OrgApacheCommonsLang3TextStrSubstitutor_DEFAULT_VALUE_DELIMITER);
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_(OrgApacheCommonsLang3TextStrLookup *variableResolver, OrgApacheCommonsLang3TextStrMatcher *prefixMatcher, OrgApacheCommonsLang3TextStrMatcher *suffixMatcher, jchar escape) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_, variableResolver, prefixMatcher, suffixMatcher, escape)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_(OrgApacheCommonsLang3TextStrLookup *variableResolver, OrgApacheCommonsLang3TextStrMatcher *prefixMatcher, OrgApacheCommonsLang3TextStrMatcher *suffixMatcher, jchar escape) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_, variableResolver, prefixMatcher, suffixMatcher, escape)
}

void OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_withOrgApacheCommonsLang3TextStrMatcher_(OrgApacheCommonsLang3TextStrSubstitutor *self, OrgApacheCommonsLang3TextStrLookup *variableResolver, OrgApacheCommonsLang3TextStrMatcher *prefixMatcher, OrgApacheCommonsLang3TextStrMatcher *suffixMatcher, jchar escape, OrgApacheCommonsLang3TextStrMatcher *valueDelimiterMatcher) {
  NSObject_init(self);
  [self setVariableResolverWithOrgApacheCommonsLang3TextStrLookup:variableResolver];
  [self setVariablePrefixMatcherWithOrgApacheCommonsLang3TextStrMatcher:prefixMatcher];
  [self setVariableSuffixMatcherWithOrgApacheCommonsLang3TextStrMatcher:suffixMatcher];
  [self setEscapeCharWithChar:escape];
  [self setValueDelimiterMatcherWithOrgApacheCommonsLang3TextStrMatcher:valueDelimiterMatcher];
}

OrgApacheCommonsLang3TextStrSubstitutor *new_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_withOrgApacheCommonsLang3TextStrMatcher_(OrgApacheCommonsLang3TextStrLookup *variableResolver, OrgApacheCommonsLang3TextStrMatcher *prefixMatcher, OrgApacheCommonsLang3TextStrMatcher *suffixMatcher, jchar escape, OrgApacheCommonsLang3TextStrMatcher *valueDelimiterMatcher) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_withOrgApacheCommonsLang3TextStrMatcher_, variableResolver, prefixMatcher, suffixMatcher, escape, valueDelimiterMatcher)
}

OrgApacheCommonsLang3TextStrSubstitutor *create_OrgApacheCommonsLang3TextStrSubstitutor_initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_withOrgApacheCommonsLang3TextStrMatcher_(OrgApacheCommonsLang3TextStrLookup *variableResolver, OrgApacheCommonsLang3TextStrMatcher *prefixMatcher, OrgApacheCommonsLang3TextStrMatcher *suffixMatcher, jchar escape, OrgApacheCommonsLang3TextStrMatcher *valueDelimiterMatcher) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3TextStrSubstitutor, initWithOrgApacheCommonsLang3TextStrLookup_withOrgApacheCommonsLang3TextStrMatcher_withOrgApacheCommonsLang3TextStrMatcher_withChar_withOrgApacheCommonsLang3TextStrMatcher_, variableResolver, prefixMatcher, suffixMatcher, escape, valueDelimiterMatcher)
}

jint OrgApacheCommonsLang3TextStrSubstitutor_substituteWithOrgApacheCommonsLang3TextStrBuilder_withInt_withInt_withJavaUtilList_(OrgApacheCommonsLang3TextStrSubstitutor *self, OrgApacheCommonsLang3TextStrBuilder *buf, jint offset, jint length, id<JavaUtilList> priorVariables) {
  OrgApacheCommonsLang3TextStrMatcher *pfxMatcher = [self getVariablePrefixMatcher];
  OrgApacheCommonsLang3TextStrMatcher *suffMatcher = [self getVariableSuffixMatcher];
  jchar escape = [self getEscapeChar];
  OrgApacheCommonsLang3TextStrMatcher *valueDelimMatcher = [self getValueDelimiterMatcher];
  jboolean substitutionInVariablesEnabled = [self isEnableSubstitutionInVariables];
  jboolean top = priorVariables == nil;
  jboolean altered = false;
  jint lengthChange = 0;
  IOSCharArray *chars = ((OrgApacheCommonsLang3TextStrBuilder *) nil_chk(buf))->buffer_;
  jint bufEnd = offset + length;
  jint pos = offset;
  while (pos < bufEnd) {
    jint startMatchLen = [((OrgApacheCommonsLang3TextStrMatcher *) nil_chk(pfxMatcher)) isMatchWithCharArray:chars withInt:pos withInt:offset withInt:bufEnd];
    if (startMatchLen == 0) {
      pos++;
    }
    else {
      if (pos > offset && IOSCharArray_Get(nil_chk(chars), pos - 1) == escape) {
        [buf deleteCharAtWithInt:pos - 1];
        chars = buf->buffer_;
        lengthChange--;
        altered = true;
        bufEnd--;
      }
      else {
        jint startPos = pos;
        pos += startMatchLen;
        jint endMatchLen = 0;
        jint nestedVarCount = 0;
        while (pos < bufEnd) {
          if (substitutionInVariablesEnabled && (endMatchLen = [pfxMatcher isMatchWithCharArray:chars withInt:pos withInt:offset withInt:bufEnd]) != 0) {
            nestedVarCount++;
            pos += endMatchLen;
            continue;
          }
          endMatchLen = [((OrgApacheCommonsLang3TextStrMatcher *) nil_chk(suffMatcher)) isMatchWithCharArray:chars withInt:pos withInt:offset withInt:bufEnd];
          if (endMatchLen == 0) {
            pos++;
          }
          else {
            if (nestedVarCount == 0) {
              NSString *varNameExpr = [NSString java_stringWithCharacters:chars offset:startPos + startMatchLen length:pos - startPos - startMatchLen];
              if (substitutionInVariablesEnabled) {
                OrgApacheCommonsLang3TextStrBuilder *bufName = create_OrgApacheCommonsLang3TextStrBuilder_initWithNSString_(varNameExpr);
                [self substituteWithOrgApacheCommonsLang3TextStrBuilder:bufName withInt:0 withInt:[bufName java_length]];
                varNameExpr = [bufName description];
              }
              pos += endMatchLen;
              jint endPos = pos;
              NSString *varName = varNameExpr;
              NSString *varDefaultValue = nil;
              if (valueDelimMatcher != nil) {
                IOSCharArray *varNameExprChars = [((NSString *) nil_chk(varNameExpr)) java_toCharArray];
                jint valueDelimiterMatchLen = 0;
                for (jint i = 0; i < ((IOSCharArray *) nil_chk(varNameExprChars))->size_; i++) {
                  if (!substitutionInVariablesEnabled && [pfxMatcher isMatchWithCharArray:varNameExprChars withInt:i withInt:i withInt:varNameExprChars->size_] != 0) {
                    break;
                  }
                  if ((valueDelimiterMatchLen = [valueDelimMatcher isMatchWithCharArray:varNameExprChars withInt:i]) != 0) {
                    varName = [varNameExpr java_substring:0 endIndex:i];
                    varDefaultValue = [varNameExpr java_substring:i + valueDelimiterMatchLen];
                    break;
                  }
                }
              }
              if (priorVariables == nil) {
                priorVariables = create_JavaUtilArrayList_init();
                [priorVariables addWithId:[NSString java_stringWithCharacters:chars offset:offset length:length]];
              }
              OrgApacheCommonsLang3TextStrSubstitutor_checkCyclicSubstitutionWithNSString_withJavaUtilList_(self, varName, priorVariables);
              [priorVariables addWithId:varName];
              NSString *varValue = [self resolveVariableWithNSString:varName withOrgApacheCommonsLang3TextStrBuilder:buf withInt:startPos withInt:endPos];
              if (varValue == nil) {
                varValue = varDefaultValue;
              }
              if (varValue != nil) {
                jint varLen = [varValue java_length];
                [buf replaceWithInt:startPos withInt:endPos withNSString:varValue];
                altered = true;
                jint change = OrgApacheCommonsLang3TextStrSubstitutor_substituteWithOrgApacheCommonsLang3TextStrBuilder_withInt_withInt_withJavaUtilList_(self, buf, startPos, varLen, priorVariables);
                change = change + varLen - (endPos - startPos);
                pos += change;
                bufEnd += change;
                lengthChange += change;
                chars = buf->buffer_;
              }
              [priorVariables removeWithInt:[priorVariables size] - 1];
              break;
            }
            nestedVarCount--;
            pos += endMatchLen;
          }
        }
      }
    }
  }
  if (top) {
    return altered ? 1 : 0;
  }
  return lengthChange;
}

void OrgApacheCommonsLang3TextStrSubstitutor_checkCyclicSubstitutionWithNSString_withJavaUtilList_(OrgApacheCommonsLang3TextStrSubstitutor *self, NSString *varName, id<JavaUtilList> priorVariables) {
  if ([((id<JavaUtilList>) nil_chk(priorVariables)) containsWithId:varName] == false) {
    return;
  }
  OrgApacheCommonsLang3TextStrBuilder *buf = create_OrgApacheCommonsLang3TextStrBuilder_initWithInt_(256);
  [buf appendWithNSString:@"Infinite loop in property interpolation of "];
  [buf appendWithNSString:[priorVariables removeWithInt:0]];
  [buf appendWithNSString:@": "];
  [buf appendWithSeparatorsWithJavaLangIterable:priorVariables withNSString:@"->"];
  @throw create_JavaLangIllegalStateException_initWithNSString_([buf description]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3TextStrSubstitutor)
