//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/mutable/MutableBoolean.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "org/apache/commons/lang3/BooleanUtils.h"
#include "org/apache/commons/lang3/mutable/MutableBoolean.h"

@interface OrgApacheCommonsLang3MutableMutableBoolean () {
 @public
  jboolean value_;
}

@end

inline jlong OrgApacheCommonsLang3MutableMutableBoolean_get_serialVersionUID(void);
#define OrgApacheCommonsLang3MutableMutableBoolean_serialVersionUID -4830728138360036487LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3MutableMutableBoolean, serialVersionUID, jlong)

@implementation OrgApacheCommonsLang3MutableMutableBoolean

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3MutableMutableBoolean_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)value {
  OrgApacheCommonsLang3MutableMutableBoolean_initWithBoolean_(self, value);
  return self;
}

- (instancetype)initWithJavaLangBoolean:(JavaLangBoolean *)value {
  OrgApacheCommonsLang3MutableMutableBoolean_initWithJavaLangBoolean_(self, value);
  return self;
}

- (JavaLangBoolean *)getValue {
  return JavaLangBoolean_valueOfWithBoolean_(self->value_);
}

- (void)setValueWithBoolean:(jboolean)value {
  self->value_ = value;
}

- (void)setFalse {
  self->value_ = false;
}

- (void)setTrue {
  self->value_ = true;
}

- (void)setValueWithId:(JavaLangBoolean *)value {
  self->value_ = [((JavaLangBoolean *) nil_chk(value)) booleanValue];
}

- (jboolean)isTrue {
  return value_ == true;
}

- (jboolean)isFalse {
  return value_ == false;
}

- (jboolean)booleanValue {
  return value_;
}

- (JavaLangBoolean *)toBoolean {
  return JavaLangBoolean_valueOfWithBoolean_([self booleanValue]);
}

- (jboolean)isEqual:(id)obj {
  if ([obj isKindOfClass:[OrgApacheCommonsLang3MutableMutableBoolean class]]) {
    return value_ == [((OrgApacheCommonsLang3MutableMutableBoolean *) nil_chk(((OrgApacheCommonsLang3MutableMutableBoolean *) cast_chk(obj, [OrgApacheCommonsLang3MutableMutableBoolean class])))) booleanValue];
  }
  return false;
}

- (NSUInteger)hash {
  return value_ ? ((jint) [((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, TRUE))) hash]) : ((jint) [((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, FALSE))) hash]);
}

- (jint)compareToWithId:(OrgApacheCommonsLang3MutableMutableBoolean *)other {
  cast_chk(other, [OrgApacheCommonsLang3MutableMutableBoolean class]);
  return OrgApacheCommonsLang3BooleanUtils_compareWithBoolean_withBoolean_(self->value_, ((OrgApacheCommonsLang3MutableMutableBoolean *) nil_chk(other))->value_);
}

- (NSString *)description {
  return NSString_java_valueOfBool_(value_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithBoolean:);
  methods[2].selector = @selector(initWithJavaLangBoolean:);
  methods[3].selector = @selector(getValue);
  methods[4].selector = @selector(setValueWithBoolean:);
  methods[5].selector = @selector(setFalse);
  methods[6].selector = @selector(setTrue);
  methods[7].selector = @selector(setValueWithId:);
  methods[8].selector = @selector(isTrue);
  methods[9].selector = @selector(isFalse);
  methods[10].selector = @selector(booleanValue);
  methods[11].selector = @selector(toBoolean);
  methods[12].selector = @selector(isEqual:);
  methods[13].selector = @selector(hash);
  methods[14].selector = @selector(compareToWithId:);
  methods[15].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3MutableMutableBoolean_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "value_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "LJavaLangBoolean;", "setValue", "equals", "LNSObject;", "hashCode", "compareTo", "LOrgApacheCommonsLang3MutableMutableBoolean;", "toString", "Ljava/lang/Object;Lorg/apache/commons/lang3/mutable/Mutable<Ljava/lang/Boolean;>;Ljava/io/Serializable;Ljava/lang/Comparable<Lorg/apache/commons/lang3/mutable/MutableBoolean;>;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3MutableMutableBoolean = { "MutableBoolean", "org.apache.commons.lang3.mutable", ptrTable, methods, fields, 7, 0x1, 16, 2, -1, -1, -1, 9, -1 };
  return &_OrgApacheCommonsLang3MutableMutableBoolean;
}

@end

void OrgApacheCommonsLang3MutableMutableBoolean_init(OrgApacheCommonsLang3MutableMutableBoolean *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3MutableMutableBoolean *new_OrgApacheCommonsLang3MutableMutableBoolean_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3MutableMutableBoolean, init)
}

OrgApacheCommonsLang3MutableMutableBoolean *create_OrgApacheCommonsLang3MutableMutableBoolean_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3MutableMutableBoolean, init)
}

void OrgApacheCommonsLang3MutableMutableBoolean_initWithBoolean_(OrgApacheCommonsLang3MutableMutableBoolean *self, jboolean value) {
  NSObject_init(self);
  self->value_ = value;
}

OrgApacheCommonsLang3MutableMutableBoolean *new_OrgApacheCommonsLang3MutableMutableBoolean_initWithBoolean_(jboolean value) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3MutableMutableBoolean, initWithBoolean_, value)
}

OrgApacheCommonsLang3MutableMutableBoolean *create_OrgApacheCommonsLang3MutableMutableBoolean_initWithBoolean_(jboolean value) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3MutableMutableBoolean, initWithBoolean_, value)
}

void OrgApacheCommonsLang3MutableMutableBoolean_initWithJavaLangBoolean_(OrgApacheCommonsLang3MutableMutableBoolean *self, JavaLangBoolean *value) {
  NSObject_init(self);
  self->value_ = [((JavaLangBoolean *) nil_chk(value)) booleanValue];
}

OrgApacheCommonsLang3MutableMutableBoolean *new_OrgApacheCommonsLang3MutableMutableBoolean_initWithJavaLangBoolean_(JavaLangBoolean *value) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3MutableMutableBoolean, initWithJavaLangBoolean_, value)
}

OrgApacheCommonsLang3MutableMutableBoolean *create_OrgApacheCommonsLang3MutableMutableBoolean_initWithJavaLangBoolean_(JavaLangBoolean *value) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3MutableMutableBoolean, initWithJavaLangBoolean_, value)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3MutableMutableBoolean)
