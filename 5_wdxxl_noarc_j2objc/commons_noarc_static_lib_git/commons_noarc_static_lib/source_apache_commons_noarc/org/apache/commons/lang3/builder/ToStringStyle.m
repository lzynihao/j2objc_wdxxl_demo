//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/builder/ToStringStyle.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/System.h"
#include "java/lang/ThreadLocal.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/reflect/Array.h"
#include "java/util/Collection.h"
#include "java/util/Map.h"
#include "java/util/WeakHashMap.h"
#include "org/apache/commons/lang3/ClassUtils.h"
#include "org/apache/commons/lang3/ObjectUtils.h"
#include "org/apache/commons/lang3/SystemUtils.h"
#include "org/apache/commons/lang3/builder/ToStringStyle.h"

@interface OrgApacheCommonsLang3BuilderToStringStyle () {
 @public
  jboolean useFieldNames_;
  jboolean useClassName_;
  jboolean useShortClassName_;
  jboolean useIdentityHashCode_;
  NSString *contentStart_;
  NSString *contentEnd_;
  NSString *fieldNameValueSeparator_;
  jboolean fieldSeparatorAtStart_;
  jboolean fieldSeparatorAtEnd_;
  NSString *fieldSeparator_;
  NSString *arrayStart_;
  NSString *arraySeparator_;
  jboolean arrayContentDetail_;
  NSString *arrayEnd_;
  jboolean defaultFullDetail_;
  NSString *nullText_;
  NSString *sizeStartText_;
  NSString *sizeEndText_;
  NSString *summaryObjectStartText_;
  NSString *summaryObjectEndText_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, contentStart_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, contentEnd_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, fieldNameValueSeparator_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, fieldSeparator_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, arrayStart_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, arraySeparator_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, arrayEnd_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, nullText_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, sizeStartText_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, sizeEndText_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, summaryObjectStartText_, NSString *)
J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle, summaryObjectEndText_, NSString *)

inline jlong OrgApacheCommonsLang3BuilderToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderToStringStyle_serialVersionUID -2587890625525655916LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderToStringStyle, serialVersionUID, jlong)

inline JavaLangThreadLocal *OrgApacheCommonsLang3BuilderToStringStyle_get_REGISTRY(void);
static JavaLangThreadLocal *OrgApacheCommonsLang3BuilderToStringStyle_REGISTRY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgApacheCommonsLang3BuilderToStringStyle, REGISTRY, JavaLangThreadLocal *)

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withId_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, id value, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withNSObjectArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSObjectArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withLongArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSLongArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withIntArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSIntArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withShortArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSShortArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withByteArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSByteArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withCharArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSCharArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withDoubleArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSDoubleArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withFloatArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSFloatArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withBooleanArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSBooleanArray *array, JavaLangBoolean *fullDetail);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_appendFieldStartWithJavaLangStringBuffer_withNSString_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName);

@interface OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle : OrgApacheCommonsLang3BuilderToStringStyle

- (instancetype)init;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle)

inline jlong OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle *self);

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_init(void);

__attribute__((unused)) static id OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle)

@interface OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle : OrgApacheCommonsLang3BuilderToStringStyle

- (instancetype)init;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle)

inline jlong OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle *self);

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_init(void);

__attribute__((unused)) static id OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle)

@interface OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle : OrgApacheCommonsLang3BuilderToStringStyle

- (instancetype)init;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle)

inline jlong OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle *self);

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_init(void);

__attribute__((unused)) static id OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle)

@interface OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle : OrgApacheCommonsLang3BuilderToStringStyle

- (instancetype)init;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle)

inline jlong OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle *self);

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_init(void);

__attribute__((unused)) static id OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle)

@interface OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle : OrgApacheCommonsLang3BuilderToStringStyle

- (instancetype)init;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle)

inline jlong OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle *self);

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_init(void);

__attribute__((unused)) static id OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle)

@interface OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle : OrgApacheCommonsLang3BuilderToStringStyle

- (instancetype)init;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle)

inline jlong OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle *self);

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_init(void);

__attribute__((unused)) static id OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle)

@interface OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle : OrgApacheCommonsLang3BuilderToStringStyle {
 @public
  NSString *FIELD_NAME_PREFIX_;
}

- (instancetype)init;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                     withNSObjectArray:(IOSObjectArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withLongArray:(IOSLongArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                          withIntArray:(IOSIntArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                        withShortArray:(IOSShortArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withByteArray:(IOSByteArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withCharArray:(IOSCharArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                       withDoubleArray:(IOSDoubleArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                        withFloatArray:(IOSFloatArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                      withBooleanArray:(IOSBooleanArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                                withId:(id)value
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail;

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                      withId:(id)value;

- (void)appendValueAsStringWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                       withNSString:(NSString *)value;

- (void)appendFieldStartWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                    withNSString:(NSString *)fieldName;

- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle)

J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle, FIELD_NAME_PREFIX_, NSString *)

inline jlong OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle, serialVersionUID, jlong)

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *self);

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_init(void);

__attribute__((unused)) static void OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_appendValueAsStringWithJavaLangStringBuffer_withNSString_(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *self, JavaLangStringBuffer *buffer, NSString *value);

__attribute__((unused)) static id OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *self);

J2OBJC_TYPE_LITERAL_HEADER(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle)

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsLang3BuilderToStringStyle)

OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3BuilderToStringStyle_DEFAULT_STYLE;
OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3BuilderToStringStyle_MULTI_LINE_STYLE;
OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3BuilderToStringStyle_NO_FIELD_NAMES_STYLE;
OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3BuilderToStringStyle_SHORT_PREFIX_STYLE;
OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3BuilderToStringStyle_SIMPLE_STYLE;
OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3BuilderToStringStyle_NO_CLASS_NAME_STYLE;
OrgApacheCommonsLang3BuilderToStringStyle *OrgApacheCommonsLang3BuilderToStringStyle_JSON_STYLE;

@implementation OrgApacheCommonsLang3BuilderToStringStyle

+ (id<JavaUtilMap>)getRegistry {
  return OrgApacheCommonsLang3BuilderToStringStyle_getRegistry();
}

+ (jboolean)isRegisteredWithId:(id)value {
  return OrgApacheCommonsLang3BuilderToStringStyle_isRegisteredWithId_(value);
}

+ (void)register__WithId:(id)value {
  OrgApacheCommonsLang3BuilderToStringStyle_register__WithId_(value);
}

+ (void)unregisterWithId:(id)value {
  OrgApacheCommonsLang3BuilderToStringStyle_unregisterWithId_(value);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)appendSuperWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                               withNSString:(NSString *)superToString {
  [self appendToStringWithJavaLangStringBuffer:buffer withNSString:superToString];
}

- (void)appendToStringWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                  withNSString:(NSString *)toString {
  if (toString != nil) {
    jint pos1 = [toString java_indexOfString:contentStart_] + [((NSString *) nil_chk(contentStart_)) java_length];
    jint pos2 = [toString java_lastIndexOfString:contentEnd_];
    if (pos1 != pos2 && pos1 >= 0 && pos2 >= 0) {
      NSString *data = [toString java_substring:pos1 endIndex:pos2];
      if (fieldSeparatorAtStart_) {
        [self removeLastFieldSeparatorWithJavaLangStringBuffer:buffer];
      }
      [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:data];
      [self appendFieldSeparatorWithJavaLangStringBuffer:buffer];
    }
  }
}

- (void)appendStartWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                     withId:(id)object {
  if (object != nil) {
    [self appendClassNameWithJavaLangStringBuffer:buffer withId:object];
    [self appendIdentityHashCodeWithJavaLangStringBuffer:buffer withId:object];
    [self appendContentStartWithJavaLangStringBuffer:buffer];
    if (fieldSeparatorAtStart_) {
      [self appendFieldSeparatorWithJavaLangStringBuffer:buffer];
    }
  }
}

- (void)appendEndWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                   withId:(id)object {
  if (self->fieldSeparatorAtEnd_ == false) {
    [self removeLastFieldSeparatorWithJavaLangStringBuffer:buffer];
  }
  [self appendContentEndWithJavaLangStringBuffer:buffer];
  OrgApacheCommonsLang3BuilderToStringStyle_unregisterWithId_(object);
}

- (void)removeLastFieldSeparatorWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer {
  jint len = [((JavaLangStringBuffer *) nil_chk(buffer)) java_length];
  jint sepLen = [((NSString *) nil_chk(fieldSeparator_)) java_length];
  if (len > 0 && sepLen > 0 && len >= sepLen) {
    jboolean match = true;
    for (jint i = 0; i < sepLen; i++) {
      if ([buffer charAtWithInt:len - 1 - i] != [((NSString *) nil_chk(fieldSeparator_)) charAtWithInt:sepLen - 1 - i]) {
        match = false;
        break;
      }
    }
    if (match) {
      [buffer setLengthWithInt:len - sepLen];
    }
  }
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                                withId:(id)value
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withId_withJavaLangBoolean_(self, buffer, fieldName, value, fullDetail);
}

- (void)appendInternalWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                  withNSString:(NSString *)fieldName
                                        withId:(id)value
                                   withBoolean:(jboolean)detail {
  if (OrgApacheCommonsLang3BuilderToStringStyle_isRegisteredWithId_(value) && !([value isKindOfClass:[NSNumber class]] || [value isKindOfClass:[JavaLangBoolean class]] || [value isKindOfClass:[JavaLangCharacter class]])) {
    [self appendCyclicObjectWithJavaLangStringBuffer:buffer withNSString:fieldName withId:value];
    return;
  }
  OrgApacheCommonsLang3BuilderToStringStyle_register__WithId_(value);
  @try {
    if ([JavaUtilCollection_class_() isInstance:value]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withJavaUtilCollection:(id<JavaUtilCollection>) cast_check(value, JavaUtilCollection_class_())];
      }
      else {
        [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:[((id<JavaUtilCollection>) nil_chk(((id<JavaUtilCollection>) cast_check(value, JavaUtilCollection_class_())))) size]];
      }
    }
    else if ([JavaUtilMap_class_() isInstance:value]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withJavaUtilMap:(id<JavaUtilMap>) cast_check(value, JavaUtilMap_class_())];
      }
      else {
        [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:[((id<JavaUtilMap>) nil_chk(((id<JavaUtilMap>) cast_check(value, JavaUtilMap_class_())))) size]];
      }
    }
    else if ([value isKindOfClass:[IOSLongArray class]]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withLongArray:(IOSLongArray *) cast_chk(value, [IOSLongArray class])];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withLongArray:(IOSLongArray *) cast_chk(value, [IOSLongArray class])];
      }
    }
    else if ([value isKindOfClass:[IOSIntArray class]]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withIntArray:(IOSIntArray *) cast_chk(value, [IOSIntArray class])];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withIntArray:(IOSIntArray *) cast_chk(value, [IOSIntArray class])];
      }
    }
    else if ([value isKindOfClass:[IOSShortArray class]]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withShortArray:(IOSShortArray *) cast_chk(value, [IOSShortArray class])];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withShortArray:(IOSShortArray *) cast_chk(value, [IOSShortArray class])];
      }
    }
    else if ([value isKindOfClass:[IOSByteArray class]]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withByteArray:(IOSByteArray *) cast_chk(value, [IOSByteArray class])];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withByteArray:(IOSByteArray *) cast_chk(value, [IOSByteArray class])];
      }
    }
    else if ([value isKindOfClass:[IOSCharArray class]]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withCharArray:(IOSCharArray *) cast_chk(value, [IOSCharArray class])];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withCharArray:(IOSCharArray *) cast_chk(value, [IOSCharArray class])];
      }
    }
    else if ([value isKindOfClass:[IOSDoubleArray class]]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withDoubleArray:(IOSDoubleArray *) cast_chk(value, [IOSDoubleArray class])];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withDoubleArray:(IOSDoubleArray *) cast_chk(value, [IOSDoubleArray class])];
      }
    }
    else if ([value isKindOfClass:[IOSFloatArray class]]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withFloatArray:(IOSFloatArray *) cast_chk(value, [IOSFloatArray class])];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withFloatArray:(IOSFloatArray *) cast_chk(value, [IOSFloatArray class])];
      }
    }
    else if ([value isKindOfClass:[IOSBooleanArray class]]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withBooleanArray:(IOSBooleanArray *) cast_chk(value, [IOSBooleanArray class])];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withBooleanArray:(IOSBooleanArray *) cast_chk(value, [IOSBooleanArray class])];
      }
    }
    else if ([[nil_chk(value) java_getClass] isArray]) {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withNSObjectArray:(IOSObjectArray *) cast_check(value, IOSClass_arrayType(NSObject_class_(), 1))];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withNSObjectArray:(IOSObjectArray *) cast_check(value, IOSClass_arrayType(NSObject_class_(), 1))];
      }
    }
    else {
      if (detail) {
        [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withId:value];
      }
      else {
        [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withId:value];
      }
    }
  }
  @finally {
    OrgApacheCommonsLang3BuilderToStringStyle_unregisterWithId_(value);
  }
}

- (void)appendCyclicObjectWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                      withNSString:(NSString *)fieldName
                                            withId:(id)value {
  OrgApacheCommonsLang3ObjectUtils_identityToStringWithJavaLangStringBuffer_withId_(buffer, value);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                      withId:(id)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithId:value];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                      withJavaUtilCollection:(id<JavaUtilCollection>)coll {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithId:coll];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                             withJavaUtilMap:(id<JavaUtilMap>)map {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithId:map];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                                       withId:(id)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:summaryObjectStartText_];
  [buffer appendWithNSString:[self getShortClassNameWithIOSClass:[nil_chk(value) java_getClass]]];
  [buffer appendWithNSString:summaryObjectEndText_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                              withLong:(jlong)value {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withLong:value];
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                    withLong:(jlong)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithLong:value];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                               withInt:(jint)value {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:value];
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                     withInt:(jint)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithInt:value];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                             withShort:(jshort)value {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withShort:value];
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                   withShort:(jshort)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithInt:value];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                              withByte:(jbyte)value {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withByte:value];
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                    withByte:(jbyte)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithInt:value];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                              withChar:(jchar)value {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withChar:value];
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                    withChar:(jchar)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithChar:value];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                            withDouble:(jdouble)value {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withDouble:value];
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                  withDouble:(jdouble)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithDouble:value];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                             withFloat:(jfloat)value {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withFloat:value];
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                   withFloat:(jfloat)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithFloat:value];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                           withBoolean:(jboolean)value {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withBoolean:value];
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                 withBoolean:(jboolean)value {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithBoolean:value];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                     withNSObjectArray:(IOSObjectArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withNSObjectArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                           withNSObjectArray:(IOSObjectArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(array))->size_; i++) {
    id item = IOSObjectArray_Get(array, i);
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    if (item == nil) {
      [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
    }
    else {
      [self appendInternalWithJavaLangStringBuffer:buffer withNSString:fieldName withId:item withBoolean:arrayContentDetail_];
    }
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)reflectionAppendArrayDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                               withNSString:(NSString *)fieldName
                                                     withId:(id)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  jint length = JavaLangReflectArray_getLengthWithId_(array);
  for (jint i = 0; i < length; i++) {
    id item = JavaLangReflectArray_getWithId_withInt_(array, i);
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    if (item == nil) {
      [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
    }
    else {
      [self appendInternalWithJavaLangStringBuffer:buffer withNSString:fieldName withId:item withBoolean:arrayContentDetail_];
    }
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                            withNSObjectArray:(IOSObjectArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSObjectArray *) nil_chk(array))->size_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withLongArray:(IOSLongArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withLongArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                               withLongArray:(IOSLongArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSLongArray *) nil_chk(array))->size_; i++) {
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withLong:IOSLongArray_Get(array, i)];
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                                withLongArray:(IOSLongArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSLongArray *) nil_chk(array))->size_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                          withIntArray:(IOSIntArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withIntArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                withIntArray:(IOSIntArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSIntArray *) nil_chk(array))->size_; i++) {
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:IOSIntArray_Get(array, i)];
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                                 withIntArray:(IOSIntArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSIntArray *) nil_chk(array))->size_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                        withShortArray:(IOSShortArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withShortArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                              withShortArray:(IOSShortArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSShortArray *) nil_chk(array))->size_; i++) {
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withShort:IOSShortArray_Get(array, i)];
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                               withShortArray:(IOSShortArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSShortArray *) nil_chk(array))->size_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withByteArray:(IOSByteArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withByteArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                               withByteArray:(IOSByteArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSByteArray *) nil_chk(array))->size_; i++) {
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withByte:IOSByteArray_Get(array, i)];
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                                withByteArray:(IOSByteArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSByteArray *) nil_chk(array))->size_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withCharArray:(IOSCharArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withCharArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                               withCharArray:(IOSCharArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSCharArray *) nil_chk(array))->size_; i++) {
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withChar:IOSCharArray_Get(array, i)];
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                                withCharArray:(IOSCharArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSCharArray *) nil_chk(array))->size_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                       withDoubleArray:(IOSDoubleArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withDoubleArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                             withDoubleArray:(IOSDoubleArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSDoubleArray *) nil_chk(array))->size_; i++) {
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withDouble:IOSDoubleArray_Get(array, i)];
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                              withDoubleArray:(IOSDoubleArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSDoubleArray *) nil_chk(array))->size_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                        withFloatArray:(IOSFloatArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withFloatArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                              withFloatArray:(IOSFloatArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSFloatArray *) nil_chk(array))->size_; i++) {
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withFloat:IOSFloatArray_Get(array, i)];
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                               withFloatArray:(IOSFloatArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSFloatArray *) nil_chk(array))->size_];
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                      withBooleanArray:(IOSBooleanArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withBooleanArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                            withBooleanArray:(IOSBooleanArray *)array {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:arrayStart_];
  for (jint i = 0; i < ((IOSBooleanArray *) nil_chk(array))->size_; i++) {
    if (i > 0) {
      [buffer appendWithNSString:arraySeparator_];
    }
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withBoolean:IOSBooleanArray_Get(array, i)];
  }
  [buffer appendWithNSString:arrayEnd_];
}

- (void)appendSummaryWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                 withNSString:(NSString *)fieldName
                             withBooleanArray:(IOSBooleanArray *)array {
  [self appendSummarySizeWithJavaLangStringBuffer:buffer withNSString:fieldName withInt:((IOSBooleanArray *) nil_chk(array))->size_];
}

- (void)appendClassNameWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                         withId:(id)object {
  if (useClassName_ && object != nil) {
    OrgApacheCommonsLang3BuilderToStringStyle_register__WithId_(object);
    if (useShortClassName_) {
      [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:[self getShortClassNameWithIOSClass:[object java_getClass]]];
    }
    else {
      [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:[[object java_getClass] getName]];
    }
  }
}

- (void)appendIdentityHashCodeWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                                withId:(id)object {
  if ([self isUseIdentityHashCode] && object != nil) {
    OrgApacheCommonsLang3BuilderToStringStyle_register__WithId_(object);
    [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithChar:'@'];
    [buffer appendWithNSString:JavaLangInteger_toHexStringWithInt_(JavaLangSystem_identityHashCodeWithId_(object))];
  }
}

- (void)appendContentStartWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:contentStart_];
}

- (void)appendContentEndWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:contentEnd_];
}

- (void)appendNullTextWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                  withNSString:(NSString *)fieldName {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:nullText_];
}

- (void)appendFieldSeparatorWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:fieldSeparator_];
}

- (void)appendFieldStartWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                    withNSString:(NSString *)fieldName {
  OrgApacheCommonsLang3BuilderToStringStyle_appendFieldStartWithJavaLangStringBuffer_withNSString_(self, buffer, fieldName);
}

- (void)appendFieldEndWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                  withNSString:(NSString *)fieldName {
  [self appendFieldSeparatorWithJavaLangStringBuffer:buffer];
}

- (void)appendSummarySizeWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                     withNSString:(NSString *)fieldName
                                          withInt:(jint)size {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:sizeStartText_];
  [buffer appendWithInt:size];
  [buffer appendWithNSString:sizeEndText_];
}

- (jboolean)isFullDetailWithJavaLangBoolean:(JavaLangBoolean *)fullDetailRequest {
  if (fullDetailRequest == nil) {
    return defaultFullDetail_;
  }
  return [fullDetailRequest booleanValue];
}

- (NSString *)getShortClassNameWithIOSClass:(IOSClass *)cls {
  return OrgApacheCommonsLang3ClassUtils_getShortClassNameWithIOSClass_(cls);
}

- (jboolean)isUseClassName {
  return useClassName_;
}

- (void)setUseClassNameWithBoolean:(jboolean)useClassName {
  self->useClassName_ = useClassName;
}

- (jboolean)isUseShortClassName {
  return useShortClassName_;
}

- (void)setUseShortClassNameWithBoolean:(jboolean)useShortClassName {
  self->useShortClassName_ = useShortClassName;
}

- (jboolean)isUseIdentityHashCode {
  return useIdentityHashCode_;
}

- (void)setUseIdentityHashCodeWithBoolean:(jboolean)useIdentityHashCode {
  self->useIdentityHashCode_ = useIdentityHashCode;
}

- (jboolean)isUseFieldNames {
  return useFieldNames_;
}

- (void)setUseFieldNamesWithBoolean:(jboolean)useFieldNames {
  self->useFieldNames_ = useFieldNames;
}

- (jboolean)isDefaultFullDetail {
  return defaultFullDetail_;
}

- (void)setDefaultFullDetailWithBoolean:(jboolean)defaultFullDetail {
  self->defaultFullDetail_ = defaultFullDetail;
}

- (jboolean)isArrayContentDetail {
  return arrayContentDetail_;
}

- (void)setArrayContentDetailWithBoolean:(jboolean)arrayContentDetail {
  self->arrayContentDetail_ = arrayContentDetail;
}

- (NSString *)getArrayStart {
  return arrayStart_;
}

- (void)setArrayStartWithNSString:(NSString *)arrayStart {
  if (arrayStart == nil) {
    arrayStart = @"";
  }
  JreStrongAssign(&self->arrayStart_, arrayStart);
}

- (NSString *)getArrayEnd {
  return arrayEnd_;
}

- (void)setArrayEndWithNSString:(NSString *)arrayEnd {
  if (arrayEnd == nil) {
    arrayEnd = @"";
  }
  JreStrongAssign(&self->arrayEnd_, arrayEnd);
}

- (NSString *)getArraySeparator {
  return arraySeparator_;
}

- (void)setArraySeparatorWithNSString:(NSString *)arraySeparator {
  if (arraySeparator == nil) {
    arraySeparator = @"";
  }
  JreStrongAssign(&self->arraySeparator_, arraySeparator);
}

- (NSString *)getContentStart {
  return contentStart_;
}

- (void)setContentStartWithNSString:(NSString *)contentStart {
  if (contentStart == nil) {
    contentStart = @"";
  }
  JreStrongAssign(&self->contentStart_, contentStart);
}

- (NSString *)getContentEnd {
  return contentEnd_;
}

- (void)setContentEndWithNSString:(NSString *)contentEnd {
  if (contentEnd == nil) {
    contentEnd = @"";
  }
  JreStrongAssign(&self->contentEnd_, contentEnd);
}

- (NSString *)getFieldNameValueSeparator {
  return fieldNameValueSeparator_;
}

- (void)setFieldNameValueSeparatorWithNSString:(NSString *)fieldNameValueSeparator {
  if (fieldNameValueSeparator == nil) {
    fieldNameValueSeparator = @"";
  }
  JreStrongAssign(&self->fieldNameValueSeparator_, fieldNameValueSeparator);
}

- (NSString *)getFieldSeparator {
  return fieldSeparator_;
}

- (void)setFieldSeparatorWithNSString:(NSString *)fieldSeparator {
  if (fieldSeparator == nil) {
    fieldSeparator = @"";
  }
  JreStrongAssign(&self->fieldSeparator_, fieldSeparator);
}

- (jboolean)isFieldSeparatorAtStart {
  return fieldSeparatorAtStart_;
}

- (void)setFieldSeparatorAtStartWithBoolean:(jboolean)fieldSeparatorAtStart {
  self->fieldSeparatorAtStart_ = fieldSeparatorAtStart;
}

- (jboolean)isFieldSeparatorAtEnd {
  return fieldSeparatorAtEnd_;
}

- (void)setFieldSeparatorAtEndWithBoolean:(jboolean)fieldSeparatorAtEnd {
  self->fieldSeparatorAtEnd_ = fieldSeparatorAtEnd;
}

- (NSString *)getNullText {
  return nullText_;
}

- (void)setNullTextWithNSString:(NSString *)nullText {
  if (nullText == nil) {
    nullText = @"";
  }
  JreStrongAssign(&self->nullText_, nullText);
}

- (NSString *)getSizeStartText {
  return sizeStartText_;
}

- (void)setSizeStartTextWithNSString:(NSString *)sizeStartText {
  if (sizeStartText == nil) {
    sizeStartText = @"";
  }
  JreStrongAssign(&self->sizeStartText_, sizeStartText);
}

- (NSString *)getSizeEndText {
  return sizeEndText_;
}

- (void)setSizeEndTextWithNSString:(NSString *)sizeEndText {
  if (sizeEndText == nil) {
    sizeEndText = @"";
  }
  JreStrongAssign(&self->sizeEndText_, sizeEndText);
}

- (NSString *)getSummaryObjectStartText {
  return summaryObjectStartText_;
}

- (void)setSummaryObjectStartTextWithNSString:(NSString *)summaryObjectStartText {
  if (summaryObjectStartText == nil) {
    summaryObjectStartText = @"";
  }
  JreStrongAssign(&self->summaryObjectStartText_, summaryObjectStartText);
}

- (NSString *)getSummaryObjectEndText {
  return summaryObjectEndText_;
}

- (void)setSummaryObjectEndTextWithNSString:(NSString *)summaryObjectEndText {
  if (summaryObjectEndText == nil) {
    summaryObjectEndText = @"";
  }
  JreStrongAssign(&self->summaryObjectEndText_, summaryObjectEndText);
}

- (void)dealloc {
  RELEASE_(contentStart_);
  RELEASE_(contentEnd_);
  RELEASE_(fieldNameValueSeparator_);
  RELEASE_(fieldSeparator_);
  RELEASE_(arrayStart_);
  RELEASE_(arraySeparator_);
  RELEASE_(arrayEnd_);
  RELEASE_(nullText_);
  RELEASE_(sizeStartText_);
  RELEASE_(sizeEndText_);
  RELEASE_(summaryObjectStartText_);
  RELEASE_(summaryObjectEndText_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaUtilMap;", 0x8, -1, -1, -1, 0, -1, -1 },
    { NULL, "Z", 0x8, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 3, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 4, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 15, 16, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 20, -1, 21, -1, -1 },
    { NULL, "V", 0x4, 19, 22, -1, 23, -1, -1 },
    { NULL, "V", 0x4, 24, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 25, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 26, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 27, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 29, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 29, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 30, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 30, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 32, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 32, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 33, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 34, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 35, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 34, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 36, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 37, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 37, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 38, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 41, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 41, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 42, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 43, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 43, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 44, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 45, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 46, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 47, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 47, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 48, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 49, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 49, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 50, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 19, 51, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 24, 51, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 52, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 53, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 54, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 55, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 56, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 57, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 58, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 59, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 60, 26, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 61, 62, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 63, 64, -1, 65, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 66, 67, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 68, 67, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 69, 67, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 70, 67, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 71, 67, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 72, 67, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 73, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 75, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 76, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 77, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 78, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 79, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 80, 74, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 81, 67, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 82, 67, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 83, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 84, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 85, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 86, 74, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 87, 74, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(getRegistry);
  methods[1].selector = @selector(isRegisteredWithId:);
  methods[2].selector = @selector(register__WithId:);
  methods[3].selector = @selector(unregisterWithId:);
  methods[4].selector = @selector(init);
  methods[5].selector = @selector(appendSuperWithJavaLangStringBuffer:withNSString:);
  methods[6].selector = @selector(appendToStringWithJavaLangStringBuffer:withNSString:);
  methods[7].selector = @selector(appendStartWithJavaLangStringBuffer:withId:);
  methods[8].selector = @selector(appendEndWithJavaLangStringBuffer:withId:);
  methods[9].selector = @selector(removeLastFieldSeparatorWithJavaLangStringBuffer:);
  methods[10].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withId:withJavaLangBoolean:);
  methods[11].selector = @selector(appendInternalWithJavaLangStringBuffer:withNSString:withId:withBoolean:);
  methods[12].selector = @selector(appendCyclicObjectWithJavaLangStringBuffer:withNSString:withId:);
  methods[13].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withId:);
  methods[14].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withJavaUtilCollection:);
  methods[15].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withJavaUtilMap:);
  methods[16].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withId:);
  methods[17].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withLong:);
  methods[18].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withLong:);
  methods[19].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withInt:);
  methods[20].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withInt:);
  methods[21].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withShort:);
  methods[22].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withShort:);
  methods[23].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withByte:);
  methods[24].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withByte:);
  methods[25].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withChar:);
  methods[26].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withChar:);
  methods[27].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withDouble:);
  methods[28].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withDouble:);
  methods[29].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withFloat:);
  methods[30].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withFloat:);
  methods[31].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withBoolean:);
  methods[32].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withBoolean:);
  methods[33].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withNSObjectArray:withJavaLangBoolean:);
  methods[34].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withNSObjectArray:);
  methods[35].selector = @selector(reflectionAppendArrayDetailWithJavaLangStringBuffer:withNSString:withId:);
  methods[36].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withNSObjectArray:);
  methods[37].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withLongArray:withJavaLangBoolean:);
  methods[38].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withLongArray:);
  methods[39].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withLongArray:);
  methods[40].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withIntArray:withJavaLangBoolean:);
  methods[41].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withIntArray:);
  methods[42].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withIntArray:);
  methods[43].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withShortArray:withJavaLangBoolean:);
  methods[44].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withShortArray:);
  methods[45].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withShortArray:);
  methods[46].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withByteArray:withJavaLangBoolean:);
  methods[47].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withByteArray:);
  methods[48].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withByteArray:);
  methods[49].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withCharArray:withJavaLangBoolean:);
  methods[50].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withCharArray:);
  methods[51].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withCharArray:);
  methods[52].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withDoubleArray:withJavaLangBoolean:);
  methods[53].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withDoubleArray:);
  methods[54].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withDoubleArray:);
  methods[55].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withFloatArray:withJavaLangBoolean:);
  methods[56].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withFloatArray:);
  methods[57].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withFloatArray:);
  methods[58].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withBooleanArray:withJavaLangBoolean:);
  methods[59].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withBooleanArray:);
  methods[60].selector = @selector(appendSummaryWithJavaLangStringBuffer:withNSString:withBooleanArray:);
  methods[61].selector = @selector(appendClassNameWithJavaLangStringBuffer:withId:);
  methods[62].selector = @selector(appendIdentityHashCodeWithJavaLangStringBuffer:withId:);
  methods[63].selector = @selector(appendContentStartWithJavaLangStringBuffer:);
  methods[64].selector = @selector(appendContentEndWithJavaLangStringBuffer:);
  methods[65].selector = @selector(appendNullTextWithJavaLangStringBuffer:withNSString:);
  methods[66].selector = @selector(appendFieldSeparatorWithJavaLangStringBuffer:);
  methods[67].selector = @selector(appendFieldStartWithJavaLangStringBuffer:withNSString:);
  methods[68].selector = @selector(appendFieldEndWithJavaLangStringBuffer:withNSString:);
  methods[69].selector = @selector(appendSummarySizeWithJavaLangStringBuffer:withNSString:withInt:);
  methods[70].selector = @selector(isFullDetailWithJavaLangBoolean:);
  methods[71].selector = @selector(getShortClassNameWithIOSClass:);
  methods[72].selector = @selector(isUseClassName);
  methods[73].selector = @selector(setUseClassNameWithBoolean:);
  methods[74].selector = @selector(isUseShortClassName);
  methods[75].selector = @selector(setUseShortClassNameWithBoolean:);
  methods[76].selector = @selector(isUseIdentityHashCode);
  methods[77].selector = @selector(setUseIdentityHashCodeWithBoolean:);
  methods[78].selector = @selector(isUseFieldNames);
  methods[79].selector = @selector(setUseFieldNamesWithBoolean:);
  methods[80].selector = @selector(isDefaultFullDetail);
  methods[81].selector = @selector(setDefaultFullDetailWithBoolean:);
  methods[82].selector = @selector(isArrayContentDetail);
  methods[83].selector = @selector(setArrayContentDetailWithBoolean:);
  methods[84].selector = @selector(getArrayStart);
  methods[85].selector = @selector(setArrayStartWithNSString:);
  methods[86].selector = @selector(getArrayEnd);
  methods[87].selector = @selector(setArrayEndWithNSString:);
  methods[88].selector = @selector(getArraySeparator);
  methods[89].selector = @selector(setArraySeparatorWithNSString:);
  methods[90].selector = @selector(getContentStart);
  methods[91].selector = @selector(setContentStartWithNSString:);
  methods[92].selector = @selector(getContentEnd);
  methods[93].selector = @selector(setContentEndWithNSString:);
  methods[94].selector = @selector(getFieldNameValueSeparator);
  methods[95].selector = @selector(setFieldNameValueSeparatorWithNSString:);
  methods[96].selector = @selector(getFieldSeparator);
  methods[97].selector = @selector(setFieldSeparatorWithNSString:);
  methods[98].selector = @selector(isFieldSeparatorAtStart);
  methods[99].selector = @selector(setFieldSeparatorAtStartWithBoolean:);
  methods[100].selector = @selector(isFieldSeparatorAtEnd);
  methods[101].selector = @selector(setFieldSeparatorAtEndWithBoolean:);
  methods[102].selector = @selector(getNullText);
  methods[103].selector = @selector(setNullTextWithNSString:);
  methods[104].selector = @selector(getSizeStartText);
  methods[105].selector = @selector(setSizeStartTextWithNSString:);
  methods[106].selector = @selector(getSizeEndText);
  methods[107].selector = @selector(setSizeEndTextWithNSString:);
  methods[108].selector = @selector(getSummaryObjectStartText);
  methods[109].selector = @selector(setSummaryObjectStartTextWithNSString:);
  methods[110].selector = @selector(getSummaryObjectEndText);
  methods[111].selector = @selector(setSummaryObjectEndTextWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "DEFAULT_STYLE", "LOrgApacheCommonsLang3BuilderToStringStyle;", .constantValue.asLong = 0, 0x19, -1, 88, -1, -1 },
    { "MULTI_LINE_STYLE", "LOrgApacheCommonsLang3BuilderToStringStyle;", .constantValue.asLong = 0, 0x19, -1, 89, -1, -1 },
    { "NO_FIELD_NAMES_STYLE", "LOrgApacheCommonsLang3BuilderToStringStyle;", .constantValue.asLong = 0, 0x19, -1, 90, -1, -1 },
    { "SHORT_PREFIX_STYLE", "LOrgApacheCommonsLang3BuilderToStringStyle;", .constantValue.asLong = 0, 0x19, -1, 91, -1, -1 },
    { "SIMPLE_STYLE", "LOrgApacheCommonsLang3BuilderToStringStyle;", .constantValue.asLong = 0, 0x19, -1, 92, -1, -1 },
    { "NO_CLASS_NAME_STYLE", "LOrgApacheCommonsLang3BuilderToStringStyle;", .constantValue.asLong = 0, 0x19, -1, 93, -1, -1 },
    { "JSON_STYLE", "LOrgApacheCommonsLang3BuilderToStringStyle;", .constantValue.asLong = 0, 0x19, -1, 94, -1, -1 },
    { "REGISTRY", "LJavaLangThreadLocal;", .constantValue.asLong = 0, 0x1a, -1, 95, 96, -1 },
    { "useFieldNames_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "useClassName_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "useShortClassName_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "useIdentityHashCode_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentStart_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contentEnd_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldNameValueSeparator_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldSeparatorAtStart_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldSeparatorAtEnd_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fieldSeparator_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "arrayStart_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "arraySeparator_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "arrayContentDetail_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "arrayEnd_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "defaultFullDetail_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "nullText_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sizeStartText_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "sizeEndText_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "summaryObjectStartText_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "summaryObjectEndText_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;", "isRegistered", "LNSObject;", "register", "unregister", "appendSuper", "LJavaLangStringBuffer;LNSString;", "appendToString", "appendStart", "LJavaLangStringBuffer;LNSObject;", "appendEnd", "removeLastFieldSeparator", "LJavaLangStringBuffer;", "append", "LJavaLangStringBuffer;LNSString;LNSObject;LJavaLangBoolean;", "appendInternal", "LJavaLangStringBuffer;LNSString;LNSObject;Z", "appendCyclicObject", "LJavaLangStringBuffer;LNSString;LNSObject;", "appendDetail", "LJavaLangStringBuffer;LNSString;LJavaUtilCollection;", "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/util/Collection<*>;)V", "LJavaLangStringBuffer;LNSString;LJavaUtilMap;", "(Ljava/lang/StringBuffer;Ljava/lang/String;Ljava/util/Map<**>;)V", "appendSummary", "LJavaLangStringBuffer;LNSString;J", "LJavaLangStringBuffer;LNSString;I", "LJavaLangStringBuffer;LNSString;S", "LJavaLangStringBuffer;LNSString;B", "LJavaLangStringBuffer;LNSString;C", "LJavaLangStringBuffer;LNSString;D", "LJavaLangStringBuffer;LNSString;F", "LJavaLangStringBuffer;LNSString;Z", "LJavaLangStringBuffer;LNSString;[LNSObject;LJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[LNSObject;", "reflectionAppendArrayDetail", "LJavaLangStringBuffer;LNSString;[JLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[J", "LJavaLangStringBuffer;LNSString;[ILJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[I", "LJavaLangStringBuffer;LNSString;[SLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[S", "LJavaLangStringBuffer;LNSString;[BLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[B", "LJavaLangStringBuffer;LNSString;[CLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[C", "LJavaLangStringBuffer;LNSString;[DLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[D", "LJavaLangStringBuffer;LNSString;[FLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[F", "LJavaLangStringBuffer;LNSString;[ZLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[Z", "appendClassName", "appendIdentityHashCode", "appendContentStart", "appendContentEnd", "appendNullText", "appendFieldSeparator", "appendFieldStart", "appendFieldEnd", "appendSummarySize", "isFullDetail", "LJavaLangBoolean;", "getShortClassName", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/String;", "setUseClassName", "Z", "setUseShortClassName", "setUseIdentityHashCode", "setUseFieldNames", "setDefaultFullDetail", "setArrayContentDetail", "setArrayStart", "LNSString;", "setArrayEnd", "setArraySeparator", "setContentStart", "setContentEnd", "setFieldNameValueSeparator", "setFieldSeparator", "setFieldSeparatorAtStart", "setFieldSeparatorAtEnd", "setNullText", "setSizeStartText", "setSizeEndText", "setSummaryObjectStartText", "setSummaryObjectEndText", &OrgApacheCommonsLang3BuilderToStringStyle_DEFAULT_STYLE, &OrgApacheCommonsLang3BuilderToStringStyle_MULTI_LINE_STYLE, &OrgApacheCommonsLang3BuilderToStringStyle_NO_FIELD_NAMES_STYLE, &OrgApacheCommonsLang3BuilderToStringStyle_SHORT_PREFIX_STYLE, &OrgApacheCommonsLang3BuilderToStringStyle_SIMPLE_STYLE, &OrgApacheCommonsLang3BuilderToStringStyle_NO_CLASS_NAME_STYLE, &OrgApacheCommonsLang3BuilderToStringStyle_JSON_STYLE, &OrgApacheCommonsLang3BuilderToStringStyle_REGISTRY, "Ljava/lang/ThreadLocal<Ljava/util/WeakHashMap<Ljava/lang/Object;Ljava/lang/Object;>;>;", "LOrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle;LOrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle;LOrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle;LOrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle;LOrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle;LOrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle;LOrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderToStringStyle = { "ToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x401, 112, 29, -1, 97, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderToStringStyle;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsLang3BuilderToStringStyle class]) {
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3BuilderToStringStyle_DEFAULT_STYLE, new_OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_init());
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3BuilderToStringStyle_MULTI_LINE_STYLE, new_OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_init());
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3BuilderToStringStyle_NO_FIELD_NAMES_STYLE, new_OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_init());
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3BuilderToStringStyle_SHORT_PREFIX_STYLE, new_OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_init());
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3BuilderToStringStyle_SIMPLE_STYLE, new_OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_init());
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3BuilderToStringStyle_NO_CLASS_NAME_STYLE, new_OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_init());
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3BuilderToStringStyle_JSON_STYLE, new_OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_init());
    JreStrongAssignAndConsume(&OrgApacheCommonsLang3BuilderToStringStyle_REGISTRY, new_JavaLangThreadLocal_init());
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsLang3BuilderToStringStyle)
  }
}

@end

id<JavaUtilMap> OrgApacheCommonsLang3BuilderToStringStyle_getRegistry() {
  OrgApacheCommonsLang3BuilderToStringStyle_initialize();
  return [((JavaLangThreadLocal *) nil_chk(OrgApacheCommonsLang3BuilderToStringStyle_REGISTRY)) get];
}

jboolean OrgApacheCommonsLang3BuilderToStringStyle_isRegisteredWithId_(id value) {
  OrgApacheCommonsLang3BuilderToStringStyle_initialize();
  id<JavaUtilMap> m = OrgApacheCommonsLang3BuilderToStringStyle_getRegistry();
  return m != nil && [m containsKeyWithId:value];
}

void OrgApacheCommonsLang3BuilderToStringStyle_register__WithId_(id value) {
  OrgApacheCommonsLang3BuilderToStringStyle_initialize();
  if (value != nil) {
    id<JavaUtilMap> m = OrgApacheCommonsLang3BuilderToStringStyle_getRegistry();
    if (m == nil) {
      [((JavaLangThreadLocal *) nil_chk(OrgApacheCommonsLang3BuilderToStringStyle_REGISTRY)) setWithId:create_JavaUtilWeakHashMap_init()];
    }
    [((id<JavaUtilMap>) nil_chk(OrgApacheCommonsLang3BuilderToStringStyle_getRegistry())) putWithId:value withId:nil];
  }
}

void OrgApacheCommonsLang3BuilderToStringStyle_unregisterWithId_(id value) {
  OrgApacheCommonsLang3BuilderToStringStyle_initialize();
  if (value != nil) {
    id<JavaUtilMap> m = OrgApacheCommonsLang3BuilderToStringStyle_getRegistry();
    if (m != nil) {
      [m removeWithId:value];
      if ([m isEmpty]) {
        [((JavaLangThreadLocal *) nil_chk(OrgApacheCommonsLang3BuilderToStringStyle_REGISTRY)) remove];
      }
    }
  }
}

void OrgApacheCommonsLang3BuilderToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle *self) {
  NSObject_init(self);
  self->useFieldNames_ = true;
  self->useClassName_ = true;
  self->useShortClassName_ = false;
  self->useIdentityHashCode_ = true;
  JreStrongAssign(&self->contentStart_, @"[");
  JreStrongAssign(&self->contentEnd_, @"]");
  JreStrongAssign(&self->fieldNameValueSeparator_, @"=");
  self->fieldSeparatorAtStart_ = false;
  self->fieldSeparatorAtEnd_ = false;
  JreStrongAssign(&self->fieldSeparator_, @",");
  JreStrongAssign(&self->arrayStart_, @"{");
  JreStrongAssign(&self->arraySeparator_, @",");
  self->arrayContentDetail_ = true;
  JreStrongAssign(&self->arrayEnd_, @"}");
  self->defaultFullDetail_ = true;
  JreStrongAssign(&self->nullText_, @"<null>");
  JreStrongAssign(&self->sizeStartText_, @"<size=");
  JreStrongAssign(&self->sizeEndText_, @">");
  JreStrongAssign(&self->summaryObjectStartText_, @"<");
  JreStrongAssign(&self->summaryObjectEndText_, @">");
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withId_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, id value, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (value == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else {
    [self appendInternalWithJavaLangStringBuffer:buffer withNSString:fieldName withId:value withBoolean:[self isFullDetailWithJavaLangBoolean:fullDetail]];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withNSObjectArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSObjectArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withNSObjectArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withNSObjectArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withLongArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSLongArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withLongArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withLongArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withIntArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSIntArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withIntArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withIntArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withShortArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSShortArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withShortArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withShortArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withByteArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSByteArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withByteArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withByteArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withCharArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSCharArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withCharArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withCharArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withDoubleArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSDoubleArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withDoubleArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withDoubleArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withFloatArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSFloatArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withFloatArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withFloatArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withBooleanArray_withJavaLangBoolean_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName, IOSBooleanArray *array, JavaLangBoolean *fullDetail) {
  [self appendFieldStartWithJavaLangStringBuffer:buffer withNSString:fieldName];
  if (array == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
  }
  else if ([self isFullDetailWithJavaLangBoolean:fullDetail]) {
    [self appendDetailWithJavaLangStringBuffer:buffer withNSString:fieldName withBooleanArray:array];
  }
  else {
    [self appendSummaryWithJavaLangStringBuffer:buffer withNSString:fieldName withBooleanArray:array];
  }
  [self appendFieldEndWithJavaLangStringBuffer:buffer withNSString:fieldName];
}

void OrgApacheCommonsLang3BuilderToStringStyle_appendFieldStartWithJavaLangStringBuffer_withNSString_(OrgApacheCommonsLang3BuilderToStringStyle *self, JavaLangStringBuffer *buffer, NSString *fieldName) {
  if (self->useFieldNames_ && fieldName != nil) {
    [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:fieldName];
    [buffer appendWithNSString:self->fieldNameValueSeparator_];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderToStringStyle)

@implementation OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)readResolve {
  return OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_readResolve(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheCommonsLang3BuilderToStringStyle;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle = { "DefaultToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1a, 2, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle;
}

@end

void OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
}

OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle, init)
}

OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle, init)
}

id OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle *self) {
  return JreLoadStatic(OrgApacheCommonsLang3BuilderToStringStyle, DEFAULT_STYLE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderToStringStyle_DefaultToStringStyle)

@implementation OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)readResolve {
  return OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_readResolve(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheCommonsLang3BuilderToStringStyle;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle = { "NoFieldNameToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1a, 2, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle;
}

@end

void OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
  [self setUseFieldNamesWithBoolean:false];
}

OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle, init)
}

OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle, init)
}

id OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle *self) {
  return JreLoadStatic(OrgApacheCommonsLang3BuilderToStringStyle, NO_FIELD_NAMES_STYLE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderToStringStyle_NoFieldNameToStringStyle)

@implementation OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)readResolve {
  return OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_readResolve(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheCommonsLang3BuilderToStringStyle;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle = { "ShortPrefixToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1a, 2, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle;
}

@end

void OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
  [self setUseShortClassNameWithBoolean:true];
  [self setUseIdentityHashCodeWithBoolean:false];
}

OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle, init)
}

OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle, init)
}

id OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle *self) {
  return JreLoadStatic(OrgApacheCommonsLang3BuilderToStringStyle, SHORT_PREFIX_STYLE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderToStringStyle_ShortPrefixToStringStyle)

@implementation OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)readResolve {
  return OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_readResolve(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheCommonsLang3BuilderToStringStyle;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle = { "SimpleToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1a, 2, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle;
}

@end

void OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
  [self setUseClassNameWithBoolean:false];
  [self setUseIdentityHashCodeWithBoolean:false];
  [self setUseFieldNamesWithBoolean:false];
  [self setContentStartWithNSString:@""];
  [self setContentEndWithNSString:@""];
}

OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle, init)
}

OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle, init)
}

id OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle *self) {
  return JreLoadStatic(OrgApacheCommonsLang3BuilderToStringStyle, SIMPLE_STYLE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderToStringStyle_SimpleToStringStyle)

@implementation OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)readResolve {
  return OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_readResolve(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheCommonsLang3BuilderToStringStyle;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle = { "MultiLineToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1a, 2, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle;
}

@end

void OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
  [self setContentStartWithNSString:@"["];
  [self setFieldSeparatorWithNSString:JreStrcat("$$", JreLoadStatic(OrgApacheCommonsLang3SystemUtils, LINE_SEPARATOR), @"  ")];
  [self setFieldSeparatorAtStartWithBoolean:true];
  [self setContentEndWithNSString:JreStrcat("$C", JreLoadStatic(OrgApacheCommonsLang3SystemUtils, LINE_SEPARATOR), ']')];
}

OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle, init)
}

OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle, init)
}

id OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle *self) {
  return JreLoadStatic(OrgApacheCommonsLang3BuilderToStringStyle, MULTI_LINE_STYLE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderToStringStyle_MultiLineToStringStyle)

@implementation OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)readResolve {
  return OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_readResolve(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgApacheCommonsLang3BuilderToStringStyle;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle = { "NoClassNameToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1a, 2, 1, 0, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle;
}

@end

void OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
  [self setUseClassNameWithBoolean:false];
  [self setUseIdentityHashCodeWithBoolean:false];
}

OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle, init)
}

OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle, init)
}

id OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle *self) {
  return JreLoadStatic(OrgApacheCommonsLang3BuilderToStringStyle, NO_CLASS_NAME_STYLE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderToStringStyle_NoClassNameToStringStyle)

@implementation OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                     withNSObjectArray:(IOSObjectArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withNSObjectArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withLongArray:(IOSLongArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withLongArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                          withIntArray:(IOSIntArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withIntArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                        withShortArray:(IOSShortArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withShortArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withByteArray:(IOSByteArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withByteArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                         withCharArray:(IOSCharArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withCharArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                       withDoubleArray:(IOSDoubleArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withDoubleArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                        withFloatArray:(IOSFloatArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withFloatArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                      withBooleanArray:(IOSBooleanArray *)array
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withBooleanArray_withJavaLangBoolean_(self, buffer, fieldName, array, fullDetail);
}

- (void)appendWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                          withNSString:(NSString *)fieldName
                                withId:(id)value
                   withJavaLangBoolean:(JavaLangBoolean *)fullDetail {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  if (![self isFullDetailWithJavaLangBoolean:fullDetail]) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"FullDetail must be true when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendWithJavaLangStringBuffer_withNSString_withId_withJavaLangBoolean_(self, buffer, fieldName, value, fullDetail);
}

- (void)appendDetailWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                withNSString:(NSString *)fieldName
                                      withId:(id)value {
  if (value == nil) {
    [self appendNullTextWithJavaLangStringBuffer:buffer withNSString:fieldName];
    return;
  }
  if ([value java_getClass] == NSString_class_()) {
    OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_appendValueAsStringWithJavaLangStringBuffer_withNSString_(self, buffer, (NSString *) cast_chk(value, [NSString class]));
    return;
  }
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithId:value];
}

- (void)appendValueAsStringWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                       withNSString:(NSString *)value {
  OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_appendValueAsStringWithJavaLangStringBuffer_withNSString_(self, buffer, value);
}

- (void)appendFieldStartWithJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                                    withNSString:(NSString *)fieldName {
  if (fieldName == nil) {
    @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Field names are mandatory when using JsonToStringStyle");
  }
  OrgApacheCommonsLang3BuilderToStringStyle_appendFieldStartWithJavaLangStringBuffer_withNSString_(self, buffer, JreStrcat("$$$", FIELD_NAME_PREFIX_, fieldName, FIELD_NAME_PREFIX_));
}

- (id)readResolve {
  return OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_readResolve(self);
}

- (void)dealloc {
  RELEASE_(FIELD_NAME_PREFIX_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 9, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 15, 14, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withNSObjectArray:withJavaLangBoolean:);
  methods[2].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withLongArray:withJavaLangBoolean:);
  methods[3].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withIntArray:withJavaLangBoolean:);
  methods[4].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withShortArray:withJavaLangBoolean:);
  methods[5].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withByteArray:withJavaLangBoolean:);
  methods[6].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withCharArray:withJavaLangBoolean:);
  methods[7].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withDoubleArray:withJavaLangBoolean:);
  methods[8].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withFloatArray:withJavaLangBoolean:);
  methods[9].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withBooleanArray:withJavaLangBoolean:);
  methods[10].selector = @selector(appendWithJavaLangStringBuffer:withNSString:withId:withJavaLangBoolean:);
  methods[11].selector = @selector(appendDetailWithJavaLangStringBuffer:withNSString:withId:);
  methods[12].selector = @selector(appendValueAsStringWithJavaLangStringBuffer:withNSString:);
  methods[13].selector = @selector(appendFieldStartWithJavaLangStringBuffer:withNSString:);
  methods[14].selector = @selector(readResolve);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "FIELD_NAME_PREFIX_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "append", "LJavaLangStringBuffer;LNSString;[LNSObject;LJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[JLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[ILJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[SLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[BLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[CLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[DLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[FLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;[ZLJavaLangBoolean;", "LJavaLangStringBuffer;LNSString;LNSObject;LJavaLangBoolean;", "appendDetail", "LJavaLangStringBuffer;LNSString;LNSObject;", "appendValueAsString", "LJavaLangStringBuffer;LNSString;", "appendFieldStart", "LOrgApacheCommonsLang3BuilderToStringStyle;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle = { "JsonToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1a, 15, 2, 16, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle;
}

@end

void OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_init(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
  JreStrongAssign(&self->FIELD_NAME_PREFIX_, @"\"");
  [self setUseClassNameWithBoolean:false];
  [self setUseIdentityHashCodeWithBoolean:false];
  [self setContentStartWithNSString:@"{"];
  [self setContentEndWithNSString:@"}"];
  [self setArrayStartWithNSString:@"["];
  [self setArrayEndWithNSString:@"]"];
  [self setFieldSeparatorWithNSString:@","];
  [self setFieldNameValueSeparatorWithNSString:@":"];
  [self setNullTextWithNSString:@"null"];
  [self setSummaryObjectStartTextWithNSString:@"\"<"];
  [self setSummaryObjectEndTextWithNSString:@">\""];
  [self setSizeStartTextWithNSString:@"\"<size="];
  [self setSizeEndTextWithNSString:@">\""];
}

OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *new_OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle, init)
}

OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *create_OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle, init)
}

void OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_appendValueAsStringWithJavaLangStringBuffer_withNSString_(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *self, JavaLangStringBuffer *buffer, NSString *value) {
  [((JavaLangStringBuffer *) nil_chk(buffer)) appendWithNSString:JreStrcat("C$C", '"', value, '"')];
}

id OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle_readResolve(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle *self) {
  return JreLoadStatic(OrgApacheCommonsLang3BuilderToStringStyle, JSON_STYLE);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderToStringStyle_JsonToStringStyle)
