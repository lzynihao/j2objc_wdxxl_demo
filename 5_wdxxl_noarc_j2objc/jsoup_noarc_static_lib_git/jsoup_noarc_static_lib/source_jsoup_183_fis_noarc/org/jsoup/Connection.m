//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/Connection.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "org/jsoup/Connection.h"

@interface OrgJsoupConnection : NSObject

@end

@interface OrgJsoupConnection_Method () {
 @public
  jboolean hasBody_;
}

@end

__attribute__((unused)) static void OrgJsoupConnection_Method_initWithBoolean_withNSString_withInt_(OrgJsoupConnection_Method *self, jboolean hasBody, NSString *__name, jint __ordinal);

@interface OrgJsoupConnection_Base : NSObject

@end

@interface OrgJsoupConnection_Request : NSObject

@end

@interface OrgJsoupConnection_Response : NSObject

@end

@interface OrgJsoupConnection_KeyVal : NSObject

@end

@implementation OrgJsoupConnection

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJsoupConnection;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 0, 2, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 3, 2, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 6, 5, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 7, 2, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 12, 9, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 13, 9, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 14, 9, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 15, 16, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 15, 17, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 15, 18, -1, 19, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 15, 20, -1, 21, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x481, 15, 22, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 23, 16, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 24, 16, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 25, 20, -1, 21, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 26, 27, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 28, 2, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x401, -1, -1, 29, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x401, -1, -1, 29, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Response;", 0x401, -1, -1, 29, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 30, 31, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Response;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x401, 32, 33, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(urlWithJavaNetURL:);
  methods[1].selector = @selector(urlWithNSString:);
  methods[2].selector = @selector(userAgentWithNSString:);
  methods[3].selector = @selector(timeoutWithInt:);
  methods[4].selector = @selector(maxBodySizeWithInt:);
  methods[5].selector = @selector(referrerWithNSString:);
  methods[6].selector = @selector(followRedirectsWithBoolean:);
  methods[7].selector = @selector(methodWithOrgJsoupConnection_Method:);
  methods[8].selector = @selector(ignoreHttpErrorsWithBoolean:);
  methods[9].selector = @selector(ignoreContentTypeWithBoolean:);
  methods[10].selector = @selector(validateTLSCertificatesWithBoolean:);
  methods[11].selector = @selector(dataWithNSString:withNSString:);
  methods[12].selector = @selector(dataWithNSString:withNSString:withJavaIoInputStream:);
  methods[13].selector = @selector(dataWithJavaUtilCollection:);
  methods[14].selector = @selector(dataWithJavaUtilMap:);
  methods[15].selector = @selector(dataWithNSStringArray:);
  methods[16].selector = @selector(headerWithNSString:withNSString:);
  methods[17].selector = @selector(cookieWithNSString:withNSString:);
  methods[18].selector = @selector(cookiesWithJavaUtilMap:);
  methods[19].selector = @selector(parserWithOrgJsoupParserParser:);
  methods[20].selector = @selector(postDataCharsetWithNSString:);
  methods[21].selector = @selector(get);
  methods[22].selector = @selector(post);
  methods[23].selector = @selector(execute);
  methods[24].selector = @selector(request);
  methods[25].selector = @selector(requestWithOrgJsoupConnection_Request:);
  methods[26].selector = @selector(response);
  methods[27].selector = @selector(responseWithOrgJsoupConnection_Response:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "url", "LJavaNetURL;", "LNSString;", "userAgent", "timeout", "I", "maxBodySize", "referrer", "followRedirects", "Z", "method", "LOrgJsoupConnection_Method;", "ignoreHttpErrors", "ignoreContentType", "validateTLSCertificates", "data", "LNSString;LNSString;", "LNSString;LNSString;LJavaIoInputStream;", "LJavaUtilCollection;", "(Ljava/util/Collection<Lorg/jsoup/Connection$KeyVal;>;)Lorg/jsoup/Connection;", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)Lorg/jsoup/Connection;", "[LNSString;", "header", "cookie", "cookies", "parser", "LOrgJsoupParserParser;", "postDataCharset", "LJavaIoIOException;", "request", "LOrgJsoupConnection_Request;", "response", "LOrgJsoupConnection_Response;", "LOrgJsoupConnection_Method;LOrgJsoupConnection_Base;LOrgJsoupConnection_Request;LOrgJsoupConnection_Response;LOrgJsoupConnection_KeyVal;" };
  static const J2ObjcClassInfo _OrgJsoupConnection = { "Connection", "org.jsoup", ptrTable, methods, NULL, 7, 0x609, 28, 0, -1, 34, -1, -1, -1 };
  return &_OrgJsoupConnection;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJsoupConnection)

J2OBJC_INITIALIZED_DEFN(OrgJsoupConnection_Method)

OrgJsoupConnection_Method *OrgJsoupConnection_Method_values_[5];

@implementation OrgJsoupConnection_Method

- (jboolean)hasBody {
  return hasBody_;
}

+ (IOSObjectArray *)values {
  return OrgJsoupConnection_Method_values();
}

+ (OrgJsoupConnection_Method *)valueOfWithNSString:(NSString *)name {
  return OrgJsoupConnection_Method_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LOrgJsoupConnection_Method;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Method;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(hasBody);
  methods[1].selector = @selector(values);
  methods[2].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "GET", "LOrgJsoupConnection_Method;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "POST", "LOrgJsoupConnection_Method;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "PUT", "LOrgJsoupConnection_Method;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "DELETE", "LOrgJsoupConnection_Method;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "PATCH", "LOrgJsoupConnection_Method;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "hasBody_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJsoupConnection_Method, GET), &JreEnum(OrgJsoupConnection_Method, POST), &JreEnum(OrgJsoupConnection_Method, PUT), &JreEnum(OrgJsoupConnection_Method, DELETE), &JreEnum(OrgJsoupConnection_Method, PATCH), "LOrgJsoupConnection;", "Ljava/lang/Enum<Lorg/jsoup/Connection$Method;>;" };
  static const J2ObjcClassInfo _OrgJsoupConnection_Method = { "Method", "org.jsoup", ptrTable, methods, fields, 7, 0x4019, 3, 6, 7, -1, -1, 8, -1 };
  return &_OrgJsoupConnection_Method;
}

+ (void)initialize {
  if (self == [OrgJsoupConnection_Method class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 5 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    (JreEnum(OrgJsoupConnection_Method, GET) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgJsoupConnection_Method_initWithBoolean_withNSString_withInt_(e, false, @"GET", 0);
    (JreEnum(OrgJsoupConnection_Method, POST) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgJsoupConnection_Method_initWithBoolean_withNSString_withInt_(e, true, @"POST", 1);
    (JreEnum(OrgJsoupConnection_Method, PUT) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgJsoupConnection_Method_initWithBoolean_withNSString_withInt_(e, true, @"PUT", 2);
    (JreEnum(OrgJsoupConnection_Method, DELETE) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgJsoupConnection_Method_initWithBoolean_withNSString_withInt_(e, false, @"DELETE", 3);
    (JreEnum(OrgJsoupConnection_Method, PATCH) = e = objc_constructInstance(self, (void *)ptr), ptr += objSize);
    OrgJsoupConnection_Method_initWithBoolean_withNSString_withInt_(e, true, @"PATCH", 4);
    J2OBJC_SET_INITIALIZED(OrgJsoupConnection_Method)
  }
}

@end

void OrgJsoupConnection_Method_initWithBoolean_withNSString_withInt_(OrgJsoupConnection_Method *self, jboolean hasBody, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->hasBody_ = hasBody;
}

IOSObjectArray *OrgJsoupConnection_Method_values() {
  OrgJsoupConnection_Method_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJsoupConnection_Method_values_ count:5 type:OrgJsoupConnection_Method_class_()];
}

OrgJsoupConnection_Method *OrgJsoupConnection_Method_valueOfWithNSString_(NSString *name) {
  OrgJsoupConnection_Method_initialize();
  for (int i = 0; i < 5; i++) {
    OrgJsoupConnection_Method *e = OrgJsoupConnection_Method_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJsoupConnection_Method *OrgJsoupConnection_Method_fromOrdinal(NSUInteger ordinal) {
  OrgJsoupConnection_Method_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return OrgJsoupConnection_Method_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupConnection_Method)

@implementation OrgJsoupConnection_Base

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LJavaNetURL;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Base;", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LOrgJsoupConnection_Method;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Base;", 0x401, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSString;", 0x401, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Base;", 0x401, 6, 8, -1, 9, -1, -1 },
    { NULL, "Z", 0x401, 10, 7, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 11, 8, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Base;", 0x401, 12, 7, -1, 13, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x401, -1, -1, -1, 14, -1, -1 },
    { NULL, "LNSString;", 0x401, 15, 7, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Base;", 0x401, 15, 8, -1, 9, -1, -1 },
    { NULL, "Z", 0x401, 16, 7, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Base;", 0x401, 17, 7, -1, 13, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x401, -1, -1, -1, 14, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(url);
  methods[1].selector = @selector(urlWithJavaNetURL:);
  methods[2].selector = @selector(method);
  methods[3].selector = @selector(methodWithOrgJsoupConnection_Method:);
  methods[4].selector = @selector(headerWithNSString:);
  methods[5].selector = @selector(headerWithNSString:withNSString:);
  methods[6].selector = @selector(hasHeaderWithNSString:);
  methods[7].selector = @selector(hasHeaderWithValueWithNSString:withNSString:);
  methods[8].selector = @selector(removeHeaderWithNSString:);
  methods[9].selector = @selector(headers);
  methods[10].selector = @selector(cookieWithNSString:);
  methods[11].selector = @selector(cookieWithNSString:withNSString:);
  methods[12].selector = @selector(hasCookieWithNSString:);
  methods[13].selector = @selector(removeCookieWithNSString:);
  methods[14].selector = @selector(cookies);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "url", "LJavaNetURL;", "(Ljava/net/URL;)TT;", "method", "LOrgJsoupConnection_Method;", "(Lorg/jsoup/Connection$Method;)TT;", "header", "LNSString;", "LNSString;LNSString;", "(Ljava/lang/String;Ljava/lang/String;)TT;", "hasHeader", "hasHeaderWithValue", "removeHeader", "(Ljava/lang/String;)TT;", "()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "cookie", "hasCookie", "removeCookie", "LOrgJsoupConnection;", "<T::Lorg/jsoup/Connection$Base;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _OrgJsoupConnection_Base = { "Base", "org.jsoup", ptrTable, methods, NULL, 7, 0x609, 15, 0, 18, -1, -1, 19, -1 };
  return &_OrgJsoupConnection_Base;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJsoupConnection_Base)

@implementation OrgJsoupConnection_Request

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, 5, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, 6, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x401, 7, 4, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, 8, 9, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x401, -1, -1, -1, 10, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, 11, 12, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserParser;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_Request;", 0x401, 13, 14, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(timeout);
  methods[1].selector = @selector(timeoutWithInt:);
  methods[2].selector = @selector(maxBodySize);
  methods[3].selector = @selector(maxBodySizeWithInt:);
  methods[4].selector = @selector(followRedirects);
  methods[5].selector = @selector(followRedirectsWithBoolean:);
  methods[6].selector = @selector(ignoreHttpErrors);
  methods[7].selector = @selector(ignoreHttpErrorsWithBoolean:);
  methods[8].selector = @selector(ignoreContentType);
  methods[9].selector = @selector(ignoreContentTypeWithBoolean:);
  methods[10].selector = @selector(validateTLSCertificates);
  methods[11].selector = @selector(validateTLSCertificatesWithBoolean:);
  methods[12].selector = @selector(dataWithOrgJsoupConnection_KeyVal:);
  methods[13].selector = @selector(data);
  methods[14].selector = @selector(parserWithOrgJsoupParserParser:);
  methods[15].selector = @selector(parser);
  methods[16].selector = @selector(postDataCharsetWithNSString:);
  methods[17].selector = @selector(postDataCharset);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "timeout", "I", "maxBodySize", "followRedirects", "Z", "ignoreHttpErrors", "ignoreContentType", "validateTLSCertificates", "data", "LOrgJsoupConnection_KeyVal;", "()Ljava/util/Collection<Lorg/jsoup/Connection$KeyVal;>;", "parser", "LOrgJsoupParserParser;", "postDataCharset", "LNSString;", "LOrgJsoupConnection;", "Ljava/lang/Object;Lorg/jsoup/Connection$Base<Lorg/jsoup/Connection$Request;>;" };
  static const J2ObjcClassInfo _OrgJsoupConnection_Request = { "Request", "org.jsoup", ptrTable, methods, NULL, 7, 0x609, 18, 0, 15, -1, -1, 16, -1 };
  return &_OrgJsoupConnection_Request;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJsoupConnection_Request)

@implementation OrgJsoupConnection_Response

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x401, -1, -1, 0, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(statusCode);
  methods[1].selector = @selector(statusMessage);
  methods[2].selector = @selector(charset);
  methods[3].selector = @selector(contentType);
  methods[4].selector = @selector(parse);
  methods[5].selector = @selector(body);
  methods[6].selector = @selector(bodyAsBytes);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaIoIOException;", "LOrgJsoupConnection;", "Ljava/lang/Object;Lorg/jsoup/Connection$Base<Lorg/jsoup/Connection$Response;>;" };
  static const J2ObjcClassInfo _OrgJsoupConnection_Response = { "Response", "org.jsoup", ptrTable, methods, NULL, 7, 0x609, 7, 0, 1, -1, -1, 2, -1 };
  return &_OrgJsoupConnection_Response;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJsoupConnection_Response)

@implementation OrgJsoupConnection_KeyVal

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJsoupConnection_KeyVal;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_KeyVal;", 0x401, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection_KeyVal;", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaIoInputStream;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(keyWithNSString:);
  methods[1].selector = @selector(key);
  methods[2].selector = @selector(valueWithNSString:);
  methods[3].selector = @selector(value);
  methods[4].selector = @selector(inputStreamWithJavaIoInputStream:);
  methods[5].selector = @selector(inputStream);
  methods[6].selector = @selector(hasInputStream);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "key", "LNSString;", "value", "inputStream", "LJavaIoInputStream;", "LOrgJsoupConnection;" };
  static const J2ObjcClassInfo _OrgJsoupConnection_KeyVal = { "KeyVal", "org.jsoup", ptrTable, methods, NULL, 7, 0x609, 7, 0, 5, -1, -1, -1, -1 };
  return &_OrgJsoupConnection_KeyVal;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(OrgJsoupConnection_KeyVal)
