//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/parser/HtmlTreeBuilder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/jsoup/helper/StringUtil.h"
#include "org/jsoup/helper/Validate.h"
#include "org/jsoup/nodes/Attributes.h"
#include "org/jsoup/nodes/Comment.h"
#include "org/jsoup/nodes/DataNode.h"
#include "org/jsoup/nodes/Document.h"
#include "org/jsoup/nodes/Element.h"
#include "org/jsoup/nodes/FormElement.h"
#include "org/jsoup/nodes/Node.h"
#include "org/jsoup/nodes/TextNode.h"
#include "org/jsoup/parser/CharacterReader.h"
#include "org/jsoup/parser/HtmlTreeBuilder.h"
#include "org/jsoup/parser/HtmlTreeBuilderState.h"
#include "org/jsoup/parser/ParseError.h"
#include "org/jsoup/parser/ParseErrorList.h"
#include "org/jsoup/parser/Tag.h"
#include "org/jsoup/parser/Token.h"
#include "org/jsoup/parser/Tokeniser.h"
#include "org/jsoup/parser/TokeniserState.h"
#include "org/jsoup/parser/TreeBuilder.h"
#include "org/jsoup/select/Elements.h"

@interface OrgJsoupParserHtmlTreeBuilder () {
 @public
  OrgJsoupParserHtmlTreeBuilderState *state_;
  OrgJsoupParserHtmlTreeBuilderState *originalState_;
  jboolean baseUriSetFromDoc_;
  OrgJsoupNodesElement *headElement_;
  OrgJsoupNodesFormElement *formElement_;
  OrgJsoupNodesElement *contextElement_;
  JavaUtilArrayList *formattingElements_;
  id<JavaUtilList> pendingTableCharacters_;
  OrgJsoupParserToken_EndTag *emptyEnd_;
  jboolean framesetOk_;
  jboolean fosterInserts_;
  jboolean fragmentParsing_;
  IOSObjectArray *specificScopeTarget_;
}

- (void)insertNodeWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)node;

- (jboolean)isElementInQueueWithJavaUtilArrayList:(JavaUtilArrayList *)queue
                         withOrgJsoupNodesElement:(OrgJsoupNodesElement *)element;

- (void)clearStackToContextWithNSStringArray:(IOSObjectArray *)nodeNames;

- (void)replaceInQueueWithJavaUtilArrayList:(JavaUtilArrayList *)queue
                   withOrgJsoupNodesElement:(OrgJsoupNodesElement *)outArg
                   withOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg;

- (jboolean)inSpecificScopeWithNSString:(NSString *)targetName
                      withNSStringArray:(IOSObjectArray *)baseTypes
                      withNSStringArray:(IOSObjectArray *)extraTypes;

- (jboolean)inSpecificScopeWithNSStringArray:(IOSObjectArray *)targetNames
                           withNSStringArray:(IOSObjectArray *)baseTypes
                           withNSStringArray:(IOSObjectArray *)extraTypes;

- (jboolean)isSameFormattingElementWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)a
                                   withOrgJsoupNodesElement:(OrgJsoupNodesElement *)b;

@end

J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, state_, OrgJsoupParserHtmlTreeBuilderState *)
J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, originalState_, OrgJsoupParserHtmlTreeBuilderState *)
J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, headElement_, OrgJsoupNodesElement *)
J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, formElement_, OrgJsoupNodesFormElement *)
J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, contextElement_, OrgJsoupNodesElement *)
J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, formattingElements_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, pendingTableCharacters_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, emptyEnd_, OrgJsoupParserToken_EndTag *)
J2OBJC_FIELD_SETTER(OrgJsoupParserHtmlTreeBuilder, specificScopeTarget_, IOSObjectArray *)

inline IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_get_TagsScriptStyle(void);
static IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagsScriptStyle;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupParserHtmlTreeBuilder, TagsScriptStyle, IOSObjectArray *)

inline IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_get_TagSearchList(void);
static IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagSearchList;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupParserHtmlTreeBuilder, TagSearchList, IOSObjectArray *)

inline IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_get_TagSearchButton(void);
static IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagSearchButton;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupParserHtmlTreeBuilder, TagSearchButton, IOSObjectArray *)

inline IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_get_TagSearchTableScope(void);
static IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagSearchTableScope;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupParserHtmlTreeBuilder, TagSearchTableScope, IOSObjectArray *)

inline IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_get_TagSearchSelectScope(void);
static IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagSearchSelectScope;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupParserHtmlTreeBuilder, TagSearchSelectScope, IOSObjectArray *)

inline IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_get_TagSearchEndTags(void);
static IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagSearchEndTags;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupParserHtmlTreeBuilder, TagSearchEndTags, IOSObjectArray *)

inline IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_get_TagSearchSpecial(void);
static IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagSearchSpecial;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupParserHtmlTreeBuilder, TagSearchSpecial, IOSObjectArray *)

__attribute__((unused)) static void OrgJsoupParserHtmlTreeBuilder_insertNodeWithOrgJsoupNodesNode_(OrgJsoupParserHtmlTreeBuilder *self, OrgJsoupNodesNode *node);

__attribute__((unused)) static jboolean OrgJsoupParserHtmlTreeBuilder_isElementInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_(OrgJsoupParserHtmlTreeBuilder *self, JavaUtilArrayList *queue, OrgJsoupNodesElement *element);

__attribute__((unused)) static void OrgJsoupParserHtmlTreeBuilder_clearStackToContextWithNSStringArray_(OrgJsoupParserHtmlTreeBuilder *self, IOSObjectArray *nodeNames);

__attribute__((unused)) static void OrgJsoupParserHtmlTreeBuilder_replaceInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_withOrgJsoupNodesElement_(OrgJsoupParserHtmlTreeBuilder *self, JavaUtilArrayList *queue, OrgJsoupNodesElement *outArg, OrgJsoupNodesElement *inArg);

__attribute__((unused)) static jboolean OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSString_withNSStringArray_withNSStringArray_(OrgJsoupParserHtmlTreeBuilder *self, NSString *targetName, IOSObjectArray *baseTypes, IOSObjectArray *extraTypes);

__attribute__((unused)) static jboolean OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSStringArray_withNSStringArray_withNSStringArray_(OrgJsoupParserHtmlTreeBuilder *self, IOSObjectArray *targetNames, IOSObjectArray *baseTypes, IOSObjectArray *extraTypes);

__attribute__((unused)) static jboolean OrgJsoupParserHtmlTreeBuilder_isSameFormattingElementWithOrgJsoupNodesElement_withOrgJsoupNodesElement_(OrgJsoupParserHtmlTreeBuilder *self, OrgJsoupNodesElement *a, OrgJsoupNodesElement *b);

J2OBJC_INITIALIZED_DEFN(OrgJsoupParserHtmlTreeBuilder)

IOSObjectArray *OrgJsoupParserHtmlTreeBuilder_TagsSearchInScope;

@implementation OrgJsoupParserHtmlTreeBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserHtmlTreeBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJsoupNodesDocument *)parseWithNSString:(NSString *)input
                                withNSString:(NSString *)baseUri
            withOrgJsoupParserParseErrorList:(OrgJsoupParserParseErrorList *)errors {
  JreStrongAssign(&state_, JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, Initial));
  baseUriSetFromDoc_ = false;
  return [super parseWithNSString:input withNSString:baseUri withOrgJsoupParserParseErrorList:errors];
}

- (id<JavaUtilList>)parseFragmentWithNSString:(NSString *)inputFragment
                     withOrgJsoupNodesElement:(OrgJsoupNodesElement *)context
                                 withNSString:(NSString *)baseUri
             withOrgJsoupParserParseErrorList:(OrgJsoupParserParseErrorList *)errors {
  JreStrongAssign(&state_, JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, Initial));
  [self initialiseParseWithNSString:inputFragment withNSString:baseUri withOrgJsoupParserParseErrorList:errors];
  JreStrongAssign(&contextElement_, context);
  fragmentParsing_ = true;
  OrgJsoupNodesElement *root = nil;
  if (context != nil) {
    if ([context ownerDocument] != nil) [((OrgJsoupNodesDocument *) nil_chk(doc_)) quirksModeWithOrgJsoupNodesDocument_QuirksMode:[((OrgJsoupNodesDocument *) nil_chk([context ownerDocument])) quirksMode]];
    NSString *contextTag = [context tagName];
    if (OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(contextTag, [IOSObjectArray arrayWithObjects:(id[]){ @"title", @"textarea" } count:2 type:NSString_class_()])) [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) transitionWithOrgJsoupParserTokeniserState:JreLoadEnum(OrgJsoupParserTokeniserState, Rcdata)];
    else if (OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(contextTag, [IOSObjectArray arrayWithObjects:(id[]){ @"iframe", @"noembed", @"noframes", @"style", @"xmp" } count:5 type:NSString_class_()])) [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) transitionWithOrgJsoupParserTokeniserState:JreLoadEnum(OrgJsoupParserTokeniserState, Rawtext)];
    else if ([((NSString *) nil_chk(contextTag)) isEqual:@"script"]) [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) transitionWithOrgJsoupParserTokeniserState:JreLoadEnum(OrgJsoupParserTokeniserState, ScriptData)];
    else if ([contextTag isEqual:(@"noscript")]) [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) transitionWithOrgJsoupParserTokeniserState:JreLoadEnum(OrgJsoupParserTokeniserState, Data)];
    else if ([contextTag isEqual:@"plaintext"]) [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) transitionWithOrgJsoupParserTokeniserState:JreLoadEnum(OrgJsoupParserTokeniserState, Data)];
    else [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) transitionWithOrgJsoupParserTokeniserState:JreLoadEnum(OrgJsoupParserTokeniserState, Data)];
    root = create_OrgJsoupNodesElement_initWithOrgJsoupParserTag_withNSString_(OrgJsoupParserTag_valueOfWithNSString_(@"html"), baseUri);
    [((OrgJsoupNodesDocument *) nil_chk(doc_)) appendChildWithOrgJsoupNodesNode:root];
    [((JavaUtilArrayList *) nil_chk(stack_)) addWithId:root];
    [self resetInsertionMode];
    OrgJsoupSelectElements *contextChain = [context parents];
    [((OrgJsoupSelectElements *) nil_chk(contextChain)) addWithInt:0 withId:context];
    for (OrgJsoupNodesElement * __strong parent in contextChain) {
      if ([parent isKindOfClass:[OrgJsoupNodesFormElement class]]) {
        JreStrongAssign(&formElement_, (OrgJsoupNodesFormElement *) cast_chk(parent, [OrgJsoupNodesFormElement class]));
        break;
      }
    }
  }
  [self runParser];
  if (context != nil && root != nil) return [root childNodes];
  else return [((OrgJsoupNodesDocument *) nil_chk(doc_)) childNodes];
}

- (jboolean)processWithOrgJsoupParserToken:(OrgJsoupParserToken *)token {
  JreStrongAssign(&currentToken_, token);
  return [((OrgJsoupParserHtmlTreeBuilderState *) nil_chk(self->state_)) processWithOrgJsoupParserToken:token withOrgJsoupParserHtmlTreeBuilder:self];
}

- (jboolean)processWithOrgJsoupParserToken:(OrgJsoupParserToken *)token
    withOrgJsoupParserHtmlTreeBuilderState:(OrgJsoupParserHtmlTreeBuilderState *)state {
  JreStrongAssign(&currentToken_, token);
  return [((OrgJsoupParserHtmlTreeBuilderState *) nil_chk(state)) processWithOrgJsoupParserToken:token withOrgJsoupParserHtmlTreeBuilder:self];
}

- (void)transitionWithOrgJsoupParserHtmlTreeBuilderState:(OrgJsoupParserHtmlTreeBuilderState *)state {
  JreStrongAssign(&self->state_, state);
}

- (OrgJsoupParserHtmlTreeBuilderState *)state {
  return state_;
}

- (void)markInsertionMode {
  JreStrongAssign(&originalState_, state_);
}

- (OrgJsoupParserHtmlTreeBuilderState *)originalState {
  return originalState_;
}

- (void)framesetOkWithBoolean:(jboolean)framesetOk {
  self->framesetOk_ = framesetOk;
}

- (jboolean)framesetOk {
  return framesetOk_;
}

- (OrgJsoupNodesDocument *)getDocument {
  return doc_;
}

- (NSString *)getBaseUri {
  return baseUri_;
}

- (void)maybeSetBaseUriWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)base {
  if (baseUriSetFromDoc_) return;
  NSString *href = [((OrgJsoupNodesElement *) nil_chk(base)) absUrlWithNSString:@"href"];
  if ([((NSString *) nil_chk(href)) java_length] != 0) {
    JreStrongAssign(&baseUri_, href);
    baseUriSetFromDoc_ = true;
    [((OrgJsoupNodesDocument *) nil_chk(doc_)) setBaseUriWithNSString:href];
  }
}

- (jboolean)isFragmentParsing {
  return fragmentParsing_;
}

- (void)errorWithOrgJsoupParserHtmlTreeBuilderState:(OrgJsoupParserHtmlTreeBuilderState *)state {
  if ([((OrgJsoupParserParseErrorList *) nil_chk(errors_)) canAddError]) [((OrgJsoupParserParseErrorList *) nil_chk(errors_)) addWithId:create_OrgJsoupParserParseError_initWithInt_withNSString_withNSObjectArray_([((OrgJsoupParserCharacterReader *) nil_chk(reader_)) pos], @"Unexpected token [%s] when in state [%s]", [IOSObjectArray arrayWithObjects:(id[]){ [((OrgJsoupParserToken *) nil_chk(currentToken_)) tokenType], state } count:2 type:NSObject_class_()])];
}

- (OrgJsoupNodesElement *)insertWithOrgJsoupParserToken_StartTag:(OrgJsoupParserToken_StartTag *)startTag {
  if ([((OrgJsoupParserToken_StartTag *) nil_chk(startTag)) isSelfClosing]) {
    OrgJsoupNodesElement *el = [self insertEmptyWithOrgJsoupParserToken_StartTag:startTag];
    [((JavaUtilArrayList *) nil_chk(stack_)) addWithId:el];
    [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) transitionWithOrgJsoupParserTokeniserState:JreLoadEnum(OrgJsoupParserTokeniserState, Data)];
    [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) emitWithOrgJsoupParserToken:[((OrgJsoupParserToken_Tag *) nil_chk([((OrgJsoupParserToken_EndTag *) nil_chk(emptyEnd_)) reset])) nameWithNSString:[((OrgJsoupNodesElement *) nil_chk(el)) tagName]]];
    return el;
  }
  OrgJsoupNodesElement *el = create_OrgJsoupNodesElement_initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_(OrgJsoupParserTag_valueOfWithNSString_([startTag name]), baseUri_, startTag->attributes_);
  [self insertWithOrgJsoupNodesElement:el];
  return el;
}

- (OrgJsoupNodesElement *)insertStartTagWithNSString:(NSString *)startTagName {
  OrgJsoupNodesElement *el = create_OrgJsoupNodesElement_initWithOrgJsoupParserTag_withNSString_(OrgJsoupParserTag_valueOfWithNSString_(startTagName), baseUri_);
  [self insertWithOrgJsoupNodesElement:el];
  return el;
}

- (void)insertWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el {
  OrgJsoupParserHtmlTreeBuilder_insertNodeWithOrgJsoupNodesNode_(self, el);
  [((JavaUtilArrayList *) nil_chk(stack_)) addWithId:el];
}

- (OrgJsoupNodesElement *)insertEmptyWithOrgJsoupParserToken_StartTag:(OrgJsoupParserToken_StartTag *)startTag {
  OrgJsoupParserTag *tag = OrgJsoupParserTag_valueOfWithNSString_([((OrgJsoupParserToken_StartTag *) nil_chk(startTag)) name]);
  OrgJsoupNodesElement *el = create_OrgJsoupNodesElement_initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_(tag, baseUri_, startTag->attributes_);
  OrgJsoupParserHtmlTreeBuilder_insertNodeWithOrgJsoupNodesNode_(self, el);
  if ([startTag isSelfClosing]) {
    if ([((OrgJsoupParserTag *) nil_chk(tag)) isKnownTag]) {
      if ([tag isSelfClosing]) [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) acknowledgeSelfClosingFlag];
    }
    else {
      [tag setSelfClosing];
      [((OrgJsoupParserTokeniser *) nil_chk(tokeniser_)) acknowledgeSelfClosingFlag];
    }
  }
  return el;
}

- (OrgJsoupNodesFormElement *)insertFormWithOrgJsoupParserToken_StartTag:(OrgJsoupParserToken_StartTag *)startTag
                                                             withBoolean:(jboolean)onStack {
  OrgJsoupParserTag *tag = OrgJsoupParserTag_valueOfWithNSString_([((OrgJsoupParserToken_StartTag *) nil_chk(startTag)) name]);
  OrgJsoupNodesFormElement *el = create_OrgJsoupNodesFormElement_initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_(tag, baseUri_, startTag->attributes_);
  [self setFormElementWithOrgJsoupNodesFormElement:el];
  OrgJsoupParserHtmlTreeBuilder_insertNodeWithOrgJsoupNodesNode_(self, el);
  if (onStack) [((JavaUtilArrayList *) nil_chk(stack_)) addWithId:el];
  return el;
}

- (void)insertWithOrgJsoupParserToken_Comment:(OrgJsoupParserToken_Comment *)commentToken {
  OrgJsoupNodesComment *comment = create_OrgJsoupNodesComment_initWithNSString_withNSString_([((OrgJsoupParserToken_Comment *) nil_chk(commentToken)) getData], baseUri_);
  OrgJsoupParserHtmlTreeBuilder_insertNodeWithOrgJsoupNodesNode_(self, comment);
}

- (void)insertWithOrgJsoupParserToken_Character:(OrgJsoupParserToken_Character *)characterToken {
  OrgJsoupNodesNode *node;
  NSString *tagName = [((OrgJsoupNodesElement *) nil_chk([self currentElement])) tagName];
  if ([((NSString *) nil_chk(tagName)) isEqual:@"script"] || [tagName isEqual:@"style"]) node = create_OrgJsoupNodesDataNode_initWithNSString_withNSString_([((OrgJsoupParserToken_Character *) nil_chk(characterToken)) getData], baseUri_);
  else node = create_OrgJsoupNodesTextNode_initWithNSString_withNSString_([((OrgJsoupParserToken_Character *) nil_chk(characterToken)) getData], baseUri_);
  [((OrgJsoupNodesElement *) nil_chk([self currentElement])) appendChildWithOrgJsoupNodesNode:node];
}

- (void)insertNodeWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)node {
  OrgJsoupParserHtmlTreeBuilder_insertNodeWithOrgJsoupNodesNode_(self, node);
}

- (OrgJsoupNodesElement *)pop {
  jint size = [((JavaUtilArrayList *) nil_chk(stack_)) size];
  return [((JavaUtilArrayList *) nil_chk(stack_)) removeWithInt:size - 1];
}

- (void)pushWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)element {
  [((JavaUtilArrayList *) nil_chk(stack_)) addWithId:element];
}

- (JavaUtilArrayList *)getStack {
  return stack_;
}

- (jboolean)onStackWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el {
  return OrgJsoupParserHtmlTreeBuilder_isElementInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_(self, stack_, el);
}

- (jboolean)isElementInQueueWithJavaUtilArrayList:(JavaUtilArrayList *)queue
                         withOrgJsoupNodesElement:(OrgJsoupNodesElement *)element {
  return OrgJsoupParserHtmlTreeBuilder_isElementInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_(self, queue, element);
}

- (OrgJsoupNodesElement *)getFromStackWithNSString:(NSString *)elName {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos];
    if ([((NSString *) nil_chk([((OrgJsoupNodesElement *) nil_chk(next)) nodeName])) isEqual:elName]) {
      return next;
    }
  }
  return nil;
}

- (jboolean)removeFromStackWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos];
    if (next == el) {
      [((JavaUtilArrayList *) nil_chk(stack_)) removeWithInt:pos];
      return true;
    }
  }
  return false;
}

- (void)popStackToCloseWithNSString:(NSString *)elName {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos];
    [((JavaUtilArrayList *) nil_chk(stack_)) removeWithInt:pos];
    if ([((NSString *) nil_chk([((OrgJsoupNodesElement *) nil_chk(next)) nodeName])) isEqual:elName]) break;
  }
}

- (void)popStackToCloseWithNSStringArray:(IOSObjectArray *)elNames {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos];
    [((JavaUtilArrayList *) nil_chk(stack_)) removeWithInt:pos];
    if (OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_([((OrgJsoupNodesElement *) nil_chk(next)) nodeName], elNames)) break;
  }
}

- (void)popStackToBeforeWithNSString:(NSString *)elName {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos];
    if ([((NSString *) nil_chk([((OrgJsoupNodesElement *) nil_chk(next)) nodeName])) isEqual:elName]) {
      break;
    }
    else {
      [((JavaUtilArrayList *) nil_chk(stack_)) removeWithInt:pos];
    }
  }
}

- (void)clearStackToTableContext {
  OrgJsoupParserHtmlTreeBuilder_clearStackToContextWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"table" } count:1 type:NSString_class_()]);
}

- (void)clearStackToTableBodyContext {
  OrgJsoupParserHtmlTreeBuilder_clearStackToContextWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"tbody", @"tfoot", @"thead" } count:3 type:NSString_class_()]);
}

- (void)clearStackToTableRowContext {
  OrgJsoupParserHtmlTreeBuilder_clearStackToContextWithNSStringArray_(self, [IOSObjectArray arrayWithObjects:(id[]){ @"tr" } count:1 type:NSString_class_()]);
}

- (void)clearStackToContextWithNSStringArray:(IOSObjectArray *)nodeNames {
  OrgJsoupParserHtmlTreeBuilder_clearStackToContextWithNSStringArray_(self, nodeNames);
}

- (OrgJsoupNodesElement *)aboveOnStackWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el {
  JreAssert([self onStackWithOrgJsoupNodesElement:el], @"org/jsoup/parser/HtmlTreeBuilder.java:356 condition failed: assert onStack(el);");
  for (jint pos = [((JavaUtilArrayList *) nil_chk(stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos];
    if (next == el) {
      return [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos - 1];
    }
  }
  return nil;
}

- (void)insertOnStackAfterWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)after
                          withOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg {
  jint i = [((JavaUtilArrayList *) nil_chk(stack_)) lastIndexOfWithId:after];
  OrgJsoupHelperValidate_isTrueWithBoolean_(i != -1);
  [((JavaUtilArrayList *) nil_chk(stack_)) addWithInt:i + 1 withId:inArg];
}

- (void)replaceOnStackWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)outArg
                      withOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg {
  OrgJsoupParserHtmlTreeBuilder_replaceInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_withOrgJsoupNodesElement_(self, stack_, outArg, inArg);
}

- (void)replaceInQueueWithJavaUtilArrayList:(JavaUtilArrayList *)queue
                   withOrgJsoupNodesElement:(OrgJsoupNodesElement *)outArg
                   withOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg {
  OrgJsoupParserHtmlTreeBuilder_replaceInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_withOrgJsoupNodesElement_(self, queue, outArg, inArg);
}

- (void)resetInsertionMode {
  jboolean last = false;
  for (jint pos = [((JavaUtilArrayList *) nil_chk(stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *node = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos];
    if (pos == 0) {
      last = true;
      node = contextElement_;
    }
    NSString *name = [((OrgJsoupNodesElement *) nil_chk(node)) nodeName];
    if ([@"select" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InSelect)];
      break;
    }
    else if (([@"td" isEqual:name] || ([@"th" isEqual:name] && !last))) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InCell)];
      break;
    }
    else if ([@"tr" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InRow)];
      break;
    }
    else if ([@"tbody" isEqual:name] || [@"thead" isEqual:name] || [@"tfoot" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InTableBody)];
      break;
    }
    else if ([@"caption" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InCaption)];
      break;
    }
    else if ([@"colgroup" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InColumnGroup)];
      break;
    }
    else if ([@"table" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InTable)];
      break;
    }
    else if ([@"head" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InBody)];
      break;
    }
    else if ([@"body" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InBody)];
      break;
    }
    else if ([@"frameset" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InFrameset)];
      break;
    }
    else if ([@"html" isEqual:name]) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, BeforeHead)];
      break;
    }
    else if (last) {
      [self transitionWithOrgJsoupParserHtmlTreeBuilderState:JreLoadEnum(OrgJsoupParserHtmlTreeBuilderState, InBody)];
      break;
    }
  }
}

- (jboolean)inSpecificScopeWithNSString:(NSString *)targetName
                      withNSStringArray:(IOSObjectArray *)baseTypes
                      withNSStringArray:(IOSObjectArray *)extraTypes {
  return OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSString_withNSStringArray_withNSStringArray_(self, targetName, baseTypes, extraTypes);
}

- (jboolean)inSpecificScopeWithNSStringArray:(IOSObjectArray *)targetNames
                           withNSStringArray:(IOSObjectArray *)baseTypes
                           withNSStringArray:(IOSObjectArray *)extraTypes {
  return OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSStringArray_withNSStringArray_withNSStringArray_(self, targetNames, baseTypes, extraTypes);
}

- (jboolean)inScopeWithNSStringArray:(IOSObjectArray *)targetNames {
  return OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSStringArray_withNSStringArray_withNSStringArray_(self, targetNames, OrgJsoupParserHtmlTreeBuilder_TagsSearchInScope, nil);
}

- (jboolean)inScopeWithNSString:(NSString *)targetName {
  return [self inScopeWithNSString:targetName withNSStringArray:nil];
}

- (jboolean)inScopeWithNSString:(NSString *)targetName
              withNSStringArray:(IOSObjectArray *)extras {
  return OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSString_withNSStringArray_withNSStringArray_(self, targetName, OrgJsoupParserHtmlTreeBuilder_TagsSearchInScope, extras);
}

- (jboolean)inListItemScopeWithNSString:(NSString *)targetName {
  return [self inScopeWithNSString:targetName withNSStringArray:OrgJsoupParserHtmlTreeBuilder_TagSearchList];
}

- (jboolean)inButtonScopeWithNSString:(NSString *)targetName {
  return [self inScopeWithNSString:targetName withNSStringArray:OrgJsoupParserHtmlTreeBuilder_TagSearchButton];
}

- (jboolean)inTableScopeWithNSString:(NSString *)targetName {
  return OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSString_withNSStringArray_withNSStringArray_(self, targetName, OrgJsoupParserHtmlTreeBuilder_TagSearchTableScope, nil);
}

- (jboolean)inSelectScopeWithNSString:(NSString *)targetName {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *el = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:pos];
    NSString *elName = [((OrgJsoupNodesElement *) nil_chk(el)) nodeName];
    if ([((NSString *) nil_chk(elName)) isEqual:targetName]) return true;
    if (!OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(elName, OrgJsoupParserHtmlTreeBuilder_TagSearchSelectScope)) return false;
  }
  OrgJsoupHelperValidate_failWithNSString_(@"Should not be reachable");
  return false;
}

- (void)setHeadElementWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)headElement {
  JreStrongAssign(&self->headElement_, headElement);
}

- (OrgJsoupNodesElement *)getHeadElement {
  return headElement_;
}

- (jboolean)isFosterInserts {
  return fosterInserts_;
}

- (void)setFosterInsertsWithBoolean:(jboolean)fosterInserts {
  self->fosterInserts_ = fosterInserts;
}

- (OrgJsoupNodesFormElement *)getFormElement {
  return formElement_;
}

- (void)setFormElementWithOrgJsoupNodesFormElement:(OrgJsoupNodesFormElement *)formElement {
  JreStrongAssign(&self->formElement_, formElement);
}

- (void)newPendingTableCharacters {
  JreStrongAssignAndConsume(&pendingTableCharacters_, new_JavaUtilArrayList_init());
}

- (id<JavaUtilList>)getPendingTableCharacters {
  return pendingTableCharacters_;
}

- (void)setPendingTableCharactersWithJavaUtilList:(id<JavaUtilList>)pendingTableCharacters {
  JreStrongAssign(&self->pendingTableCharacters_, pendingTableCharacters);
}

- (void)generateImpliedEndTagsWithNSString:(NSString *)excludeTag {
  while ((excludeTag != nil && ![((NSString *) nil_chk([((OrgJsoupNodesElement *) nil_chk([self currentElement])) nodeName])) isEqual:excludeTag]) && OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_([((OrgJsoupNodesElement *) nil_chk([self currentElement])) nodeName], OrgJsoupParserHtmlTreeBuilder_TagSearchEndTags)) [self pop];
}

- (void)generateImpliedEndTags {
  [self generateImpliedEndTagsWithNSString:nil];
}

- (jboolean)isSpecialWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el {
  NSString *name = [((OrgJsoupNodesElement *) nil_chk(el)) nodeName];
  return OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(name, OrgJsoupParserHtmlTreeBuilder_TagSearchSpecial);
}

- (OrgJsoupNodesElement *)lastFormattingElement {
  return [((JavaUtilArrayList *) nil_chk(formattingElements_)) size] > 0 ? [((JavaUtilArrayList *) nil_chk(formattingElements_)) getWithInt:[formattingElements_ size] - 1] : nil;
}

- (OrgJsoupNodesElement *)removeLastFormattingElement {
  jint size = [((JavaUtilArrayList *) nil_chk(formattingElements_)) size];
  if (size > 0) return [((JavaUtilArrayList *) nil_chk(formattingElements_)) removeWithInt:size - 1];
  else return nil;
}

- (void)pushActiveFormattingElementsWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg {
  jint numSeen = 0;
  for (jint pos = [((JavaUtilArrayList *) nil_chk(formattingElements_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *el = [((JavaUtilArrayList *) nil_chk(formattingElements_)) getWithInt:pos];
    if (el == nil) break;
    if (OrgJsoupParserHtmlTreeBuilder_isSameFormattingElementWithOrgJsoupNodesElement_withOrgJsoupNodesElement_(self, inArg, el)) numSeen++;
    if (numSeen == 3) {
      [((JavaUtilArrayList *) nil_chk(formattingElements_)) removeWithInt:pos];
      break;
    }
  }
  [((JavaUtilArrayList *) nil_chk(formattingElements_)) addWithId:inArg];
}

- (jboolean)isSameFormattingElementWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)a
                                   withOrgJsoupNodesElement:(OrgJsoupNodesElement *)b {
  return OrgJsoupParserHtmlTreeBuilder_isSameFormattingElementWithOrgJsoupNodesElement_withOrgJsoupNodesElement_(self, a, b);
}

- (void)reconstructFormattingElements {
  OrgJsoupNodesElement *last = [self lastFormattingElement];
  if (last == nil || [self onStackWithOrgJsoupNodesElement:last]) return;
  OrgJsoupNodesElement *entry_ = last;
  jint size = [((JavaUtilArrayList *) nil_chk(formattingElements_)) size];
  jint pos = size - 1;
  jboolean skip = false;
  while (true) {
    if (pos == 0) {
      skip = true;
      break;
    }
    entry_ = [((JavaUtilArrayList *) nil_chk(formattingElements_)) getWithInt:--pos];
    if (entry_ == nil || [self onStackWithOrgJsoupNodesElement:entry_]) break;
  }
  while (true) {
    if (!skip) entry_ = [((JavaUtilArrayList *) nil_chk(formattingElements_)) getWithInt:++pos];
    OrgJsoupHelperValidate_notNullWithId_(entry_);
    skip = false;
    OrgJsoupNodesElement *newEl = [self insertStartTagWithNSString:[((OrgJsoupNodesElement *) nil_chk(entry_)) nodeName]];
    [((OrgJsoupNodesAttributes *) nil_chk([((OrgJsoupNodesElement *) nil_chk(newEl)) attributes])) addAllWithOrgJsoupNodesAttributes:[entry_ attributes]];
    [((JavaUtilArrayList *) nil_chk(formattingElements_)) setWithInt:pos withId:newEl];
    if (pos == size - 1) break;
  }
}

- (void)clearFormattingElementsToLastMarker {
  while (![((JavaUtilArrayList *) nil_chk(formattingElements_)) isEmpty]) {
    OrgJsoupNodesElement *el = [self removeLastFormattingElement];
    if (el == nil) break;
  }
}

- (void)removeFromActiveFormattingElementsWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(formattingElements_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(formattingElements_)) getWithInt:pos];
    if (next == el) {
      [((JavaUtilArrayList *) nil_chk(formattingElements_)) removeWithInt:pos];
      break;
    }
  }
}

- (jboolean)isInActiveFormattingElementsWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)el {
  return OrgJsoupParserHtmlTreeBuilder_isElementInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_(self, formattingElements_, el);
}

- (OrgJsoupNodesElement *)getActiveFormattingElementWithNSString:(NSString *)nodeName {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(formattingElements_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(formattingElements_)) getWithInt:pos];
    if (next == nil) break;
    else if ([((NSString *) nil_chk([next nodeName])) isEqual:nodeName]) return next;
  }
  return nil;
}

- (void)replaceActiveFormattingElementWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)outArg
                                      withOrgJsoupNodesElement:(OrgJsoupNodesElement *)inArg {
  OrgJsoupParserHtmlTreeBuilder_replaceInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_withOrgJsoupNodesElement_(self, formattingElements_, outArg, inArg);
}

- (void)insertMarkerToFormattingElements {
  [((JavaUtilArrayList *) nil_chk(formattingElements_)) addWithId:nil];
}

- (void)insertInFosterParentWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)inArg {
  OrgJsoupNodesElement *fosterParent;
  OrgJsoupNodesElement *lastTable = [self getFromStackWithNSString:@"table"];
  jboolean isLastTableParent = false;
  if (lastTable != nil) {
    if ([lastTable parent] != nil) {
      fosterParent = [lastTable parent];
      isLastTableParent = true;
    }
    else fosterParent = [self aboveOnStackWithOrgJsoupNodesElement:lastTable];
  }
  else {
    fosterParent = [((JavaUtilArrayList *) nil_chk(stack_)) getWithInt:0];
  }
  if (isLastTableParent) {
    OrgJsoupHelperValidate_notNullWithId_(lastTable);
    [((OrgJsoupNodesElement *) nil_chk(lastTable)) beforeWithOrgJsoupNodesNode:inArg];
  }
  else [((OrgJsoupNodesElement *) nil_chk(fosterParent)) appendChildWithOrgJsoupNodesNode:inArg];
}

- (NSString *)description {
  return JreStrcat("$@$@$@C", @"TreeBuilder{currentToken=", currentToken_, @", state=", state_, @", currentElement=", [self currentElement], '}');
}

- (void)dealloc {
  RELEASE_(state_);
  RELEASE_(originalState_);
  RELEASE_(headElement_);
  RELEASE_(formElement_);
  RELEASE_(contextElement_);
  RELEASE_(formattingElements_);
  RELEASE_(pendingTableCharacters_);
  RELEASE_(emptyEnd_);
  RELEASE_(specificScopeTarget_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, 2, 3, -1, 4, -1, -1 },
    { NULL, "Z", 0x4, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 5, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 8, 9, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserHtmlTreeBuilderState;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserHtmlTreeBuilderState;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 10, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 12, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 14, 9, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, 15, 16, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, 17, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 13, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, 19, 16, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesFormElement;", 0x0, 20, 21, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 22, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 15, 23, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 24, 25, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 26, 13, -1, -1, -1, -1 },
    { NULL, "LJavaUtilArrayList;", 0x0, -1, -1, -1, 27, -1, -1 },
    { NULL, "Z", 0x0, 28, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 29, 30, -1, 31, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, 32, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 33, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 34, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x80, 34, 35, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 36, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x82, 37, 35, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, 38, 13, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 39, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 41, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 42, 43, -1, 44, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 45, 46, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 45, 47, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 48, 35, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 48, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 48, 49, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 50, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 51, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 52, 18, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 53, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 54, 13, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 55, 11, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesFormElement;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 56, 57, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x0, -1, -1, -1, 58, -1, -1 },
    { NULL, "V", 0x0, 59, 60, -1, 61, -1, -1 },
    { NULL, "V", 0x0, 62, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 63, 13, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 64, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x2, 65, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 66, 13, -1, -1, -1, -1 },
    { NULL, "Z", 0x0, 67, 13, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x0, 68, 18, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 69, 40, -1, -1, -1, -1 },
    { NULL, "V", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 70, 25, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 71, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(parseWithNSString:withNSString:withOrgJsoupParserParseErrorList:);
  methods[2].selector = @selector(parseFragmentWithNSString:withOrgJsoupNodesElement:withNSString:withOrgJsoupParserParseErrorList:);
  methods[3].selector = @selector(processWithOrgJsoupParserToken:);
  methods[4].selector = @selector(processWithOrgJsoupParserToken:withOrgJsoupParserHtmlTreeBuilderState:);
  methods[5].selector = @selector(transitionWithOrgJsoupParserHtmlTreeBuilderState:);
  methods[6].selector = @selector(state);
  methods[7].selector = @selector(markInsertionMode);
  methods[8].selector = @selector(originalState);
  methods[9].selector = @selector(framesetOkWithBoolean:);
  methods[10].selector = @selector(framesetOk);
  methods[11].selector = @selector(getDocument);
  methods[12].selector = @selector(getBaseUri);
  methods[13].selector = @selector(maybeSetBaseUriWithOrgJsoupNodesElement:);
  methods[14].selector = @selector(isFragmentParsing);
  methods[15].selector = @selector(errorWithOrgJsoupParserHtmlTreeBuilderState:);
  methods[16].selector = @selector(insertWithOrgJsoupParserToken_StartTag:);
  methods[17].selector = @selector(insertStartTagWithNSString:);
  methods[18].selector = @selector(insertWithOrgJsoupNodesElement:);
  methods[19].selector = @selector(insertEmptyWithOrgJsoupParserToken_StartTag:);
  methods[20].selector = @selector(insertFormWithOrgJsoupParserToken_StartTag:withBoolean:);
  methods[21].selector = @selector(insertWithOrgJsoupParserToken_Comment:);
  methods[22].selector = @selector(insertWithOrgJsoupParserToken_Character:);
  methods[23].selector = @selector(insertNodeWithOrgJsoupNodesNode:);
  methods[24].selector = @selector(pop);
  methods[25].selector = @selector(pushWithOrgJsoupNodesElement:);
  methods[26].selector = @selector(getStack);
  methods[27].selector = @selector(onStackWithOrgJsoupNodesElement:);
  methods[28].selector = @selector(isElementInQueueWithJavaUtilArrayList:withOrgJsoupNodesElement:);
  methods[29].selector = @selector(getFromStackWithNSString:);
  methods[30].selector = @selector(removeFromStackWithOrgJsoupNodesElement:);
  methods[31].selector = @selector(popStackToCloseWithNSString:);
  methods[32].selector = @selector(popStackToCloseWithNSStringArray:);
  methods[33].selector = @selector(popStackToBeforeWithNSString:);
  methods[34].selector = @selector(clearStackToTableContext);
  methods[35].selector = @selector(clearStackToTableBodyContext);
  methods[36].selector = @selector(clearStackToTableRowContext);
  methods[37].selector = @selector(clearStackToContextWithNSStringArray:);
  methods[38].selector = @selector(aboveOnStackWithOrgJsoupNodesElement:);
  methods[39].selector = @selector(insertOnStackAfterWithOrgJsoupNodesElement:withOrgJsoupNodesElement:);
  methods[40].selector = @selector(replaceOnStackWithOrgJsoupNodesElement:withOrgJsoupNodesElement:);
  methods[41].selector = @selector(replaceInQueueWithJavaUtilArrayList:withOrgJsoupNodesElement:withOrgJsoupNodesElement:);
  methods[42].selector = @selector(resetInsertionMode);
  methods[43].selector = @selector(inSpecificScopeWithNSString:withNSStringArray:withNSStringArray:);
  methods[44].selector = @selector(inSpecificScopeWithNSStringArray:withNSStringArray:withNSStringArray:);
  methods[45].selector = @selector(inScopeWithNSStringArray:);
  methods[46].selector = @selector(inScopeWithNSString:);
  methods[47].selector = @selector(inScopeWithNSString:withNSStringArray:);
  methods[48].selector = @selector(inListItemScopeWithNSString:);
  methods[49].selector = @selector(inButtonScopeWithNSString:);
  methods[50].selector = @selector(inTableScopeWithNSString:);
  methods[51].selector = @selector(inSelectScopeWithNSString:);
  methods[52].selector = @selector(setHeadElementWithOrgJsoupNodesElement:);
  methods[53].selector = @selector(getHeadElement);
  methods[54].selector = @selector(isFosterInserts);
  methods[55].selector = @selector(setFosterInsertsWithBoolean:);
  methods[56].selector = @selector(getFormElement);
  methods[57].selector = @selector(setFormElementWithOrgJsoupNodesFormElement:);
  methods[58].selector = @selector(newPendingTableCharacters);
  methods[59].selector = @selector(getPendingTableCharacters);
  methods[60].selector = @selector(setPendingTableCharactersWithJavaUtilList:);
  methods[61].selector = @selector(generateImpliedEndTagsWithNSString:);
  methods[62].selector = @selector(generateImpliedEndTags);
  methods[63].selector = @selector(isSpecialWithOrgJsoupNodesElement:);
  methods[64].selector = @selector(lastFormattingElement);
  methods[65].selector = @selector(removeLastFormattingElement);
  methods[66].selector = @selector(pushActiveFormattingElementsWithOrgJsoupNodesElement:);
  methods[67].selector = @selector(isSameFormattingElementWithOrgJsoupNodesElement:withOrgJsoupNodesElement:);
  methods[68].selector = @selector(reconstructFormattingElements);
  methods[69].selector = @selector(clearFormattingElementsToLastMarker);
  methods[70].selector = @selector(removeFromActiveFormattingElementsWithOrgJsoupNodesElement:);
  methods[71].selector = @selector(isInActiveFormattingElementsWithOrgJsoupNodesElement:);
  methods[72].selector = @selector(getActiveFormattingElementWithNSString:);
  methods[73].selector = @selector(replaceActiveFormattingElementWithOrgJsoupNodesElement:withOrgJsoupNodesElement:);
  methods[74].selector = @selector(insertMarkerToFormattingElements);
  methods[75].selector = @selector(insertInFosterParentWithOrgJsoupNodesNode:);
  methods[76].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TagsScriptStyle", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 72, -1, -1 },
    { "TagsSearchInScope", "[LNSString;", .constantValue.asLong = 0, 0x19, -1, 73, -1, -1 },
    { "TagSearchList", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 74, -1, -1 },
    { "TagSearchButton", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 75, -1, -1 },
    { "TagSearchTableScope", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 76, -1, -1 },
    { "TagSearchSelectScope", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 77, -1, -1 },
    { "TagSearchEndTags", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 78, -1, -1 },
    { "TagSearchSpecial", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 79, -1, -1 },
    { "state_", "LOrgJsoupParserHtmlTreeBuilderState;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "originalState_", "LOrgJsoupParserHtmlTreeBuilderState;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "baseUriSetFromDoc_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "headElement_", "LOrgJsoupNodesElement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "formElement_", "LOrgJsoupNodesFormElement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "contextElement_", "LOrgJsoupNodesElement;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "formattingElements_", "LJavaUtilArrayList;", .constantValue.asLong = 0, 0x2, -1, -1, 80, -1 },
    { "pendingTableCharacters_", "LJavaUtilList;", .constantValue.asLong = 0, 0x2, -1, -1, 81, -1 },
    { "emptyEnd_", "LOrgJsoupParserToken_EndTag;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "framesetOk_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fosterInserts_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "fragmentParsing_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "specificScopeTarget_", "[LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "parse", "LNSString;LNSString;LOrgJsoupParserParseErrorList;", "parseFragment", "LNSString;LOrgJsoupNodesElement;LNSString;LOrgJsoupParserParseErrorList;", "(Ljava/lang/String;Lorg/jsoup/nodes/Element;Ljava/lang/String;Lorg/jsoup/parser/ParseErrorList;)Ljava/util/List<Lorg/jsoup/nodes/Node;>;", "process", "LOrgJsoupParserToken;", "LOrgJsoupParserToken;LOrgJsoupParserHtmlTreeBuilderState;", "transition", "LOrgJsoupParserHtmlTreeBuilderState;", "framesetOk", "Z", "maybeSetBaseUri", "LOrgJsoupNodesElement;", "error", "insert", "LOrgJsoupParserToken_StartTag;", "insertStartTag", "LNSString;", "insertEmpty", "insertForm", "LOrgJsoupParserToken_StartTag;Z", "LOrgJsoupParserToken_Comment;", "LOrgJsoupParserToken_Character;", "insertNode", "LOrgJsoupNodesNode;", "push", "()Ljava/util/ArrayList<Lorg/jsoup/nodes/Element;>;", "onStack", "isElementInQueue", "LJavaUtilArrayList;LOrgJsoupNodesElement;", "(Ljava/util/ArrayList<Lorg/jsoup/nodes/Element;>;Lorg/jsoup/nodes/Element;)Z", "getFromStack", "removeFromStack", "popStackToClose", "[LNSString;", "popStackToBefore", "clearStackToContext", "aboveOnStack", "insertOnStackAfter", "LOrgJsoupNodesElement;LOrgJsoupNodesElement;", "replaceOnStack", "replaceInQueue", "LJavaUtilArrayList;LOrgJsoupNodesElement;LOrgJsoupNodesElement;", "(Ljava/util/ArrayList<Lorg/jsoup/nodes/Element;>;Lorg/jsoup/nodes/Element;Lorg/jsoup/nodes/Element;)V", "inSpecificScope", "LNSString;[LNSString;[LNSString;", "[LNSString;[LNSString;[LNSString;", "inScope", "LNSString;[LNSString;", "inListItemScope", "inButtonScope", "inTableScope", "inSelectScope", "setHeadElement", "setFosterInserts", "setFormElement", "LOrgJsoupNodesFormElement;", "()Ljava/util/List<Ljava/lang/String;>;", "setPendingTableCharacters", "LJavaUtilList;", "(Ljava/util/List<Ljava/lang/String;>;)V", "generateImpliedEndTags", "isSpecial", "pushActiveFormattingElements", "isSameFormattingElement", "removeFromActiveFormattingElements", "isInActiveFormattingElements", "getActiveFormattingElement", "replaceActiveFormattingElement", "insertInFosterParent", "toString", &OrgJsoupParserHtmlTreeBuilder_TagsScriptStyle, &OrgJsoupParserHtmlTreeBuilder_TagsSearchInScope, &OrgJsoupParserHtmlTreeBuilder_TagSearchList, &OrgJsoupParserHtmlTreeBuilder_TagSearchButton, &OrgJsoupParserHtmlTreeBuilder_TagSearchTableScope, &OrgJsoupParserHtmlTreeBuilder_TagSearchSelectScope, &OrgJsoupParserHtmlTreeBuilder_TagSearchEndTags, &OrgJsoupParserHtmlTreeBuilder_TagSearchSpecial, "Ljava/util/ArrayList<Lorg/jsoup/nodes/Element;>;", "Ljava/util/List<Ljava/lang/String;>;" };
  static const J2ObjcClassInfo _OrgJsoupParserHtmlTreeBuilder = { "HtmlTreeBuilder", "org.jsoup.parser", ptrTable, methods, fields, 7, 0x1, 77, 21, -1, -1, -1, -1, -1 };
  return &_OrgJsoupParserHtmlTreeBuilder;
}

+ (void)initialize {
  if (self == [OrgJsoupParserHtmlTreeBuilder class]) {
    JreStrongAssignAndConsume(&OrgJsoupParserHtmlTreeBuilder_TagsScriptStyle, [IOSObjectArray newArrayWithObjects:(id[]){ @"script", @"style" } count:2 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgJsoupParserHtmlTreeBuilder_TagsSearchInScope, [IOSObjectArray newArrayWithObjects:(id[]){ @"applet", @"caption", @"html", @"table", @"td", @"th", @"marquee", @"object" } count:8 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgJsoupParserHtmlTreeBuilder_TagSearchList, [IOSObjectArray newArrayWithObjects:(id[]){ @"ol", @"ul" } count:2 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgJsoupParserHtmlTreeBuilder_TagSearchButton, [IOSObjectArray newArrayWithObjects:(id[]){ @"button" } count:1 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgJsoupParserHtmlTreeBuilder_TagSearchTableScope, [IOSObjectArray newArrayWithObjects:(id[]){ @"html", @"table" } count:2 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgJsoupParserHtmlTreeBuilder_TagSearchSelectScope, [IOSObjectArray newArrayWithObjects:(id[]){ @"optgroup", @"option" } count:2 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgJsoupParserHtmlTreeBuilder_TagSearchEndTags, [IOSObjectArray newArrayWithObjects:(id[]){ @"dd", @"dt", @"li", @"option", @"optgroup", @"p", @"rp", @"rt" } count:8 type:NSString_class_()]);
    JreStrongAssignAndConsume(&OrgJsoupParserHtmlTreeBuilder_TagSearchSpecial, [IOSObjectArray newArrayWithObjects:(id[]){ @"address", @"applet", @"area", @"article", @"aside", @"base", @"basefont", @"bgsound", @"blockquote", @"body", @"br", @"button", @"caption", @"center", @"col", @"colgroup", @"command", @"dd", @"details", @"dir", @"div", @"dl", @"dt", @"embed", @"fieldset", @"figcaption", @"figure", @"footer", @"form", @"frame", @"frameset", @"h1", @"h2", @"h3", @"h4", @"h5", @"h6", @"head", @"header", @"hgroup", @"hr", @"html", @"iframe", @"img", @"input", @"isindex", @"li", @"link", @"listing", @"marquee", @"menu", @"meta", @"nav", @"noembed", @"noframes", @"noscript", @"object", @"ol", @"p", @"param", @"plaintext", @"pre", @"script", @"section", @"select", @"style", @"summary", @"table", @"tbody", @"td", @"textarea", @"tfoot", @"th", @"thead", @"title", @"tr", @"ul", @"wbr", @"xmp" } count:79 type:NSString_class_()]);
    J2OBJC_SET_INITIALIZED(OrgJsoupParserHtmlTreeBuilder)
  }
}

@end

void OrgJsoupParserHtmlTreeBuilder_init(OrgJsoupParserHtmlTreeBuilder *self) {
  OrgJsoupParserTreeBuilder_init(self);
  self->baseUriSetFromDoc_ = false;
  JreStrongAssignAndConsume(&self->formattingElements_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->pendingTableCharacters_, new_JavaUtilArrayList_init());
  JreStrongAssignAndConsume(&self->emptyEnd_, new_OrgJsoupParserToken_EndTag_init());
  self->framesetOk_ = true;
  self->fosterInserts_ = false;
  self->fragmentParsing_ = false;
  JreStrongAssignAndConsume(&self->specificScopeTarget_, [IOSObjectArray newArrayWithObjects:(id[]){ nil } count:1 type:NSString_class_()]);
}

OrgJsoupParserHtmlTreeBuilder *new_OrgJsoupParserHtmlTreeBuilder_init() {
  J2OBJC_NEW_IMPL(OrgJsoupParserHtmlTreeBuilder, init)
}

OrgJsoupParserHtmlTreeBuilder *create_OrgJsoupParserHtmlTreeBuilder_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupParserHtmlTreeBuilder, init)
}

void OrgJsoupParserHtmlTreeBuilder_insertNodeWithOrgJsoupNodesNode_(OrgJsoupParserHtmlTreeBuilder *self, OrgJsoupNodesNode *node) {
  if ([((JavaUtilArrayList *) nil_chk(self->stack_)) size] == 0) [((OrgJsoupNodesDocument *) nil_chk(self->doc_)) appendChildWithOrgJsoupNodesNode:node];
  else if ([self isFosterInserts]) [self insertInFosterParentWithOrgJsoupNodesNode:node];
  else [((OrgJsoupNodesElement *) nil_chk([self currentElement])) appendChildWithOrgJsoupNodesNode:node];
  if ([node isKindOfClass:[OrgJsoupNodesElement class]] && [((OrgJsoupParserTag *) nil_chk([((OrgJsoupNodesElement *) nil_chk(((OrgJsoupNodesElement *) cast_chk(node, [OrgJsoupNodesElement class])))) tag])) isFormListed]) {
    if (self->formElement_ != nil) [self->formElement_ addElementWithOrgJsoupNodesElement:(OrgJsoupNodesElement *) cast_chk(node, [OrgJsoupNodesElement class])];
  }
}

jboolean OrgJsoupParserHtmlTreeBuilder_isElementInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_(OrgJsoupParserHtmlTreeBuilder *self, JavaUtilArrayList *queue, OrgJsoupNodesElement *element) {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(queue)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [queue getWithInt:pos];
    if (next == element) {
      return true;
    }
  }
  return false;
}

void OrgJsoupParserHtmlTreeBuilder_clearStackToContextWithNSStringArray_(OrgJsoupParserHtmlTreeBuilder *self, IOSObjectArray *nodeNames) {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(self->stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *next = [((JavaUtilArrayList *) nil_chk(self->stack_)) getWithInt:pos];
    if (OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_([((OrgJsoupNodesElement *) nil_chk(next)) nodeName], nodeNames) || [((NSString *) nil_chk([next nodeName])) isEqual:@"html"]) break;
    else [((JavaUtilArrayList *) nil_chk(self->stack_)) removeWithInt:pos];
  }
}

void OrgJsoupParserHtmlTreeBuilder_replaceInQueueWithJavaUtilArrayList_withOrgJsoupNodesElement_withOrgJsoupNodesElement_(OrgJsoupParserHtmlTreeBuilder *self, JavaUtilArrayList *queue, OrgJsoupNodesElement *outArg, OrgJsoupNodesElement *inArg) {
  jint i = [((JavaUtilArrayList *) nil_chk(queue)) lastIndexOfWithId:outArg];
  OrgJsoupHelperValidate_isTrueWithBoolean_(i != -1);
  [queue setWithInt:i withId:inArg];
}

jboolean OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSString_withNSStringArray_withNSStringArray_(OrgJsoupParserHtmlTreeBuilder *self, NSString *targetName, IOSObjectArray *baseTypes, IOSObjectArray *extraTypes) {
  IOSObjectArray_Set(nil_chk(self->specificScopeTarget_), 0, targetName);
  return OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSStringArray_withNSStringArray_withNSStringArray_(self, self->specificScopeTarget_, baseTypes, extraTypes);
}

jboolean OrgJsoupParserHtmlTreeBuilder_inSpecificScopeWithNSStringArray_withNSStringArray_withNSStringArray_(OrgJsoupParserHtmlTreeBuilder *self, IOSObjectArray *targetNames, IOSObjectArray *baseTypes, IOSObjectArray *extraTypes) {
  for (jint pos = [((JavaUtilArrayList *) nil_chk(self->stack_)) size] - 1; pos >= 0; pos--) {
    OrgJsoupNodesElement *el = [((JavaUtilArrayList *) nil_chk(self->stack_)) getWithInt:pos];
    NSString *elName = [((OrgJsoupNodesElement *) nil_chk(el)) nodeName];
    if (OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(elName, targetNames)) return true;
    if (OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(elName, baseTypes)) return false;
    if (extraTypes != nil && OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(elName, extraTypes)) return false;
  }
  OrgJsoupHelperValidate_failWithNSString_(@"Should not be reachable");
  return false;
}

jboolean OrgJsoupParserHtmlTreeBuilder_isSameFormattingElementWithOrgJsoupNodesElement_withOrgJsoupNodesElement_(OrgJsoupParserHtmlTreeBuilder *self, OrgJsoupNodesElement *a, OrgJsoupNodesElement *b) {
  return [((NSString *) nil_chk([((OrgJsoupNodesElement *) nil_chk(a)) nodeName])) isEqual:[((OrgJsoupNodesElement *) nil_chk(b)) nodeName]] && [((OrgJsoupNodesAttributes *) nil_chk([a attributes])) isEqual:[b attributes]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserHtmlTreeBuilder)
