//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/examples/HtmlToPlainText.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "org/jsoup/Connection.h"
#include "org/jsoup/Jsoup.h"
#include "org/jsoup/examples/HtmlToPlainText.h"
#include "org/jsoup/helper/StringUtil.h"
#include "org/jsoup/helper/Validate.h"
#include "org/jsoup/nodes/Document.h"
#include "org/jsoup/nodes/Element.h"
#include "org/jsoup/nodes/Node.h"
#include "org/jsoup/nodes/TextNode.h"
#include "org/jsoup/select/Elements.h"
#include "org/jsoup/select/NodeTraversor.h"
#include "org/jsoup/select/NodeVisitor.h"

inline NSString *OrgJsoupExamplesHtmlToPlainText_get_userAgent();
static NSString *OrgJsoupExamplesHtmlToPlainText_userAgent = @"Mozilla/5.0 (jsoup)";
J2OBJC_STATIC_FIELD_OBJ_FINAL(OrgJsoupExamplesHtmlToPlainText, userAgent, NSString *)

inline jint OrgJsoupExamplesHtmlToPlainText_get_timeout();
#define OrgJsoupExamplesHtmlToPlainText_timeout 5000
J2OBJC_STATIC_FIELD_CONSTANT(OrgJsoupExamplesHtmlToPlainText, timeout, jint)

@interface OrgJsoupExamplesHtmlToPlainText_FormattingVisitor : NSObject < OrgJsoupSelectNodeVisitor > {
 @public
  jint width_;
  JavaLangStringBuilder *accum_;
}

- (instancetype)initWithOrgJsoupExamplesHtmlToPlainText:(OrgJsoupExamplesHtmlToPlainText *)outer$;

- (void)headWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)node
                          withInt:(jint)depth;

- (void)tailWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)node
                          withInt:(jint)depth;

- (void)appendWithNSString:(NSString *)text;

- (NSString *)description;

@end

J2OBJC_EMPTY_STATIC_INIT(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor)

J2OBJC_FIELD_SETTER(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor, accum_, JavaLangStringBuilder *)

inline jint OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_get_maxWidth();
#define OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_maxWidth 80
J2OBJC_STATIC_FIELD_CONSTANT(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor, maxWidth, jint)

__attribute__((unused)) static void OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_initWithOrgJsoupExamplesHtmlToPlainText_(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *self, OrgJsoupExamplesHtmlToPlainText *outer$);

__attribute__((unused)) static OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *new_OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_initWithOrgJsoupExamplesHtmlToPlainText_(OrgJsoupExamplesHtmlToPlainText *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *create_OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_initWithOrgJsoupExamplesHtmlToPlainText_(OrgJsoupExamplesHtmlToPlainText *outer$);

__attribute__((unused)) static void OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *self, NSString *text);

J2OBJC_TYPE_LITERAL_HEADER(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor)

@implementation OrgJsoupExamplesHtmlToPlainText

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupExamplesHtmlToPlainText_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)mainWithNSStringArray:(IOSObjectArray *)args {
  OrgJsoupExamplesHtmlToPlainText_mainWithNSStringArray_(args);
}

- (NSString *)getPlainTextWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)element {
  OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *formatter = new_OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_initWithOrgJsoupExamplesHtmlToPlainText_(self);
  OrgJsoupSelectNodeTraversor *traversor = new_OrgJsoupSelectNodeTraversor_initWithOrgJsoupSelectNodeVisitor_(formatter);
  [traversor traverseWithOrgJsoupNodesNode:element];
  return [formatter description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x89, 0, 1, 2, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(mainWithNSStringArray:);
  methods[2].selector = @selector(getPlainTextWithOrgJsoupNodesElement:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "userAgent", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 5, -1, -1 },
    { "timeout", "I", .constantValue.asInt = OrgJsoupExamplesHtmlToPlainText_timeout, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "main", "[LNSString;", "LJavaIoIOException;", "getPlainText", "LOrgJsoupNodesElement;", &OrgJsoupExamplesHtmlToPlainText_userAgent, "LOrgJsoupExamplesHtmlToPlainText_FormattingVisitor;" };
  static const J2ObjcClassInfo _OrgJsoupExamplesHtmlToPlainText = { "HtmlToPlainText", "org.jsoup.examples", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, 6, -1, -1, -1 };
  return &_OrgJsoupExamplesHtmlToPlainText;
}

@end

void OrgJsoupExamplesHtmlToPlainText_init(OrgJsoupExamplesHtmlToPlainText *self) {
  NSObject_init(self);
}

OrgJsoupExamplesHtmlToPlainText *new_OrgJsoupExamplesHtmlToPlainText_init() {
  J2OBJC_NEW_IMPL(OrgJsoupExamplesHtmlToPlainText, init)
}

OrgJsoupExamplesHtmlToPlainText *create_OrgJsoupExamplesHtmlToPlainText_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupExamplesHtmlToPlainText, init)
}

void OrgJsoupExamplesHtmlToPlainText_mainWithNSStringArray_(IOSObjectArray *args) {
  OrgJsoupExamplesHtmlToPlainText_initialize();
  OrgJsoupHelperValidate_isTrueWithBoolean_withNSString_(((IOSObjectArray *) nil_chk(args))->size_ == 1 || args->size_ == 2, @"usage: java -cp jsoup.jar org.jsoup.examples.HtmlToPlainText url [selector]");
  NSString *url = IOSObjectArray_Get(args, 0);
  NSString *selector = args->size_ == 2 ? IOSObjectArray_Get(args, 1) : nil;
  OrgJsoupNodesDocument *doc = [((id<OrgJsoupConnection>) nil_chk([((id<OrgJsoupConnection>) nil_chk([((id<OrgJsoupConnection>) nil_chk(OrgJsoupJsoup_connectWithNSString_(url))) userAgentWithNSString:OrgJsoupExamplesHtmlToPlainText_userAgent])) timeoutWithInt:OrgJsoupExamplesHtmlToPlainText_timeout])) get];
  OrgJsoupExamplesHtmlToPlainText *formatter = new_OrgJsoupExamplesHtmlToPlainText_init();
  if (selector != nil) {
    OrgJsoupSelectElements *elements = [((OrgJsoupNodesDocument *) nil_chk(doc)) selectWithNSString:selector];
    for (OrgJsoupNodesElement * __strong element in nil_chk(elements)) {
      NSString *plainText = [formatter getPlainTextWithOrgJsoupNodesElement:element];
      [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:plainText];
    }
  }
  else {
    NSString *plainText = [formatter getPlainTextWithOrgJsoupNodesElement:doc];
    [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, out))) printlnWithNSString:plainText];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupExamplesHtmlToPlainText)

@implementation OrgJsoupExamplesHtmlToPlainText_FormattingVisitor

- (instancetype)initWithOrgJsoupExamplesHtmlToPlainText:(OrgJsoupExamplesHtmlToPlainText *)outer$ {
  OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_initWithOrgJsoupExamplesHtmlToPlainText_(self, outer$);
  return self;
}

- (void)headWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)node
                          withInt:(jint)depth {
  NSString *name = [((OrgJsoupNodesNode *) nil_chk(node)) nodeName];
  if ([node isKindOfClass:[OrgJsoupNodesTextNode class]]) OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(self, [((OrgJsoupNodesTextNode *) cast_chk(node, [OrgJsoupNodesTextNode class])) text]);
  else if ([((NSString *) nil_chk(name)) isEqual:@"li"]) OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(self, @"\n * ");
  else if ([name isEqual:@"dt"]) OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(self, @"  ");
  else if (OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(name, [IOSObjectArray newArrayWithObjects:(id[]){ @"p", @"h1", @"h2", @"h3", @"h4", @"h5", @"tr" } count:7 type:NSString_class_()])) OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(self, @"\n");
}

- (void)tailWithOrgJsoupNodesNode:(OrgJsoupNodesNode *)node
                          withInt:(jint)depth {
  NSString *name = [((OrgJsoupNodesNode *) nil_chk(node)) nodeName];
  if (OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_(name, [IOSObjectArray newArrayWithObjects:(id[]){ @"br", @"dd", @"dt", @"p", @"h1", @"h2", @"h3", @"h4", @"h5" } count:9 type:NSString_class_()])) OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(self, @"\n");
  else if ([((NSString *) nil_chk(name)) isEqual:@"a"]) OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(self, NSString_java_formatWithNSString_withNSObjectArray_(@" <%s>", [IOSObjectArray newArrayWithObjects:(id[]){ [node absUrlWithNSString:@"href"] } count:1 type:NSObject_class_()]));
}

- (void)appendWithNSString:(NSString *)text {
  OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(self, text);
}

- (NSString *)description {
  return [((JavaLangStringBuilder *) nil_chk(accum_)) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJsoupExamplesHtmlToPlainText:);
  methods[1].selector = @selector(headWithOrgJsoupNodesNode:withInt:);
  methods[2].selector = @selector(tailWithOrgJsoupNodesNode:withInt:);
  methods[3].selector = @selector(appendWithNSString:);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "maxWidth", "I", .constantValue.asInt = OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_maxWidth, 0x1a, -1, -1, -1, -1 },
    { "width_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "accum_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "head", "LOrgJsoupNodesNode;I", "tail", "append", "LNSString;", "toString", "LOrgJsoupExamplesHtmlToPlainText;" };
  static const J2ObjcClassInfo _OrgJsoupExamplesHtmlToPlainText_FormattingVisitor = { "FormattingVisitor", "org.jsoup.examples", ptrTable, methods, fields, 7, 0x2, 5, 3, 6, -1, -1, -1, -1 };
  return &_OrgJsoupExamplesHtmlToPlainText_FormattingVisitor;
}

@end

void OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_initWithOrgJsoupExamplesHtmlToPlainText_(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *self, OrgJsoupExamplesHtmlToPlainText *outer$) {
  NSObject_init(self);
  self->width_ = 0;
  self->accum_ = new_JavaLangStringBuilder_init();
}

OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *new_OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_initWithOrgJsoupExamplesHtmlToPlainText_(OrgJsoupExamplesHtmlToPlainText *outer$) {
  J2OBJC_NEW_IMPL(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor, initWithOrgJsoupExamplesHtmlToPlainText_, outer$)
}

OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *create_OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_initWithOrgJsoupExamplesHtmlToPlainText_(OrgJsoupExamplesHtmlToPlainText *outer$) {
  J2OBJC_CREATE_IMPL(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor, initWithOrgJsoupExamplesHtmlToPlainText_, outer$)
}

void OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_appendWithNSString_(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor *self, NSString *text) {
  if ([((NSString *) nil_chk(text)) java_hasPrefix:@"\n"]) self->width_ = 0;
  if ([text isEqual:@" "] && ([((JavaLangStringBuilder *) nil_chk(self->accum_)) java_length] == 0 || OrgJsoupHelperStringUtil_inWithNSString_withNSStringArray_([((JavaLangStringBuilder *) nil_chk(self->accum_)) substringWithInt:[self->accum_ java_length] - 1], [IOSObjectArray newArrayWithObjects:(id[]){ @" ", @"\n" } count:2 type:NSString_class_()]))) return;
  if ([text java_length] + self->width_ > OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_maxWidth) {
    IOSObjectArray *words = [text java_split:@"\\s+"];
    for (jint i = 0; i < ((IOSObjectArray *) nil_chk(words))->size_; i++) {
      NSString *word = IOSObjectArray_Get(words, i);
      jboolean last = i == words->size_ - 1;
      if (!last) word = JreStrcat("$C", word, ' ');
      if ([((NSString *) nil_chk(word)) java_length] + self->width_ > OrgJsoupExamplesHtmlToPlainText_FormattingVisitor_maxWidth) {
        (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(self->accum_)) appendWithNSString:@"\n"])) appendWithNSString:word];
        self->width_ = [word java_length];
      }
      else {
        (void) [((JavaLangStringBuilder *) nil_chk(self->accum_)) appendWithNSString:word];
        self->width_ += [word java_length];
      }
    }
  }
  else {
    (void) [((JavaLangStringBuilder *) nil_chk(self->accum_)) appendWithNSString:text];
    self->width_ += [text java_length];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupExamplesHtmlToPlainText_FormattingVisitor)
