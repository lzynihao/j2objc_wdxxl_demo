//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/parser/Token.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "org/jsoup/helper/Validate.h"
#include "org/jsoup/nodes/Attribute.h"
#include "org/jsoup/nodes/Attributes.h"
#include "org/jsoup/nodes/BooleanAttribute.h"
#include "org/jsoup/parser/Token.h"

@interface OrgJsoupParserToken ()

- (instancetype)init;

@end

__attribute__((unused)) static void OrgJsoupParserToken_init(OrgJsoupParserToken *self);

@interface OrgJsoupParserToken_Tag () {
 @public
  NSString *pendingAttributeName_;
  JavaLangStringBuilder *pendingAttributeValue_;
  jboolean hasEmptyAttributeValue_;
  jboolean hasPendingAttributeValue_;
}

- (void)ensureAttributeValue;

@end

J2OBJC_FIELD_SETTER(OrgJsoupParserToken_Tag, pendingAttributeName_, NSString *)
J2OBJC_FIELD_SETTER(OrgJsoupParserToken_Tag, pendingAttributeValue_, JavaLangStringBuilder *)

__attribute__((unused)) static OrgJsoupParserToken_Tag *OrgJsoupParserToken_Tag_reset(OrgJsoupParserToken_Tag *self);

__attribute__((unused)) static void OrgJsoupParserToken_Tag_newAttribute(OrgJsoupParserToken_Tag *self);

__attribute__((unused)) static NSString *OrgJsoupParserToken_Tag_name(OrgJsoupParserToken_Tag *self);

__attribute__((unused)) static void OrgJsoupParserToken_Tag_appendTagNameWithNSString_(OrgJsoupParserToken_Tag *self, NSString *append);

__attribute__((unused)) static void OrgJsoupParserToken_Tag_appendAttributeNameWithNSString_(OrgJsoupParserToken_Tag *self, NSString *append);

__attribute__((unused)) static void OrgJsoupParserToken_Tag_ensureAttributeValue(OrgJsoupParserToken_Tag *self);

@interface OrgJsoupParserToken_Character () {
 @public
  NSString *data_;
}

@end

J2OBJC_FIELD_SETTER(OrgJsoupParserToken_Character, data_, NSString *)

__attribute__((unused)) static void OrgJsoupParserToken_TokenType_initWithNSString_withInt_(OrgJsoupParserToken_TokenType *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgJsoupParserToken_TokenType *new_OrgJsoupParserToken_TokenType_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgJsoupParserToken

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserToken_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)tokenType {
  return [[self java_getClass] getSimpleName];
}

- (OrgJsoupParserToken *)reset {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (void)resetWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  OrgJsoupParserToken_resetWithJavaLangStringBuilder_(sb);
}

- (jboolean)isDoctype {
  return type_ == JreLoadEnum(OrgJsoupParserToken_TokenType, Doctype);
}

- (OrgJsoupParserToken_Doctype *)asDoctype {
  return (OrgJsoupParserToken_Doctype *) cast_chk(self, [OrgJsoupParserToken_Doctype class]);
}

- (jboolean)isStartTag {
  return type_ == JreLoadEnum(OrgJsoupParserToken_TokenType, StartTag);
}

- (OrgJsoupParserToken_StartTag *)asStartTag {
  return (OrgJsoupParserToken_StartTag *) cast_chk(self, [OrgJsoupParserToken_StartTag class]);
}

- (jboolean)isEndTag {
  return type_ == JreLoadEnum(OrgJsoupParserToken_TokenType, EndTag);
}

- (OrgJsoupParserToken_EndTag *)asEndTag {
  return (OrgJsoupParserToken_EndTag *) cast_chk(self, [OrgJsoupParserToken_EndTag class]);
}

- (jboolean)isComment {
  return type_ == JreLoadEnum(OrgJsoupParserToken_TokenType, Comment);
}

- (OrgJsoupParserToken_Comment *)asComment {
  return (OrgJsoupParserToken_Comment *) cast_chk(self, [OrgJsoupParserToken_Comment class]);
}

- (jboolean)isCharacter {
  return type_ == JreLoadEnum(OrgJsoupParserToken_TokenType, Character);
}

- (OrgJsoupParserToken_Character *)asCharacter {
  return (OrgJsoupParserToken_Character *) cast_chk(self, [OrgJsoupParserToken_Character class]);
}

- (jboolean)isEOF {
  return type_ == JreLoadEnum(OrgJsoupParserToken_TokenType, EOF);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken;", 0x400, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x8, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_Doctype;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_StartTag;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_EndTag;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_Comment;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_Character;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(tokenType);
  methods[2].selector = @selector(reset);
  methods[3].selector = @selector(resetWithJavaLangStringBuilder:);
  methods[4].selector = @selector(isDoctype);
  methods[5].selector = @selector(asDoctype);
  methods[6].selector = @selector(isStartTag);
  methods[7].selector = @selector(asStartTag);
  methods[8].selector = @selector(isEndTag);
  methods[9].selector = @selector(asEndTag);
  methods[10].selector = @selector(isComment);
  methods[11].selector = @selector(asComment);
  methods[12].selector = @selector(isCharacter);
  methods[13].selector = @selector(asCharacter);
  methods[14].selector = @selector(isEOF);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "type_", "LOrgJsoupParserToken_TokenType;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "reset", "LJavaLangStringBuilder;", "LOrgJsoupParserToken_Doctype;LOrgJsoupParserToken_Tag;LOrgJsoupParserToken_StartTag;LOrgJsoupParserToken_EndTag;LOrgJsoupParserToken_Comment;LOrgJsoupParserToken_Character;LOrgJsoupParserToken_EOF;LOrgJsoupParserToken_TokenType;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken = { "Token", "org.jsoup.parser", ptrTable, methods, fields, 7, 0x400, 15, 1, -1, 2, -1, -1, -1 };
  return &_OrgJsoupParserToken;
}

@end

void OrgJsoupParserToken_init(OrgJsoupParserToken *self) {
  NSObject_init(self);
}

void OrgJsoupParserToken_resetWithJavaLangStringBuilder_(JavaLangStringBuilder *sb) {
  OrgJsoupParserToken_initialize();
  if (sb != nil) {
    (void) [sb delete__WithInt:0 withInt:[sb java_length]];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken)

@implementation OrgJsoupParserToken_Doctype

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserToken_Doctype_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJsoupParserToken *)reset {
  OrgJsoupParserToken_resetWithJavaLangStringBuilder_(name_);
  OrgJsoupParserToken_resetWithJavaLangStringBuilder_(publicIdentifier_);
  OrgJsoupParserToken_resetWithJavaLangStringBuilder_(systemIdentifier_);
  forceQuirks_ = false;
  return self;
}

- (NSString *)getName {
  return [((JavaLangStringBuilder *) nil_chk(name_)) description];
}

- (NSString *)getPublicIdentifier {
  return [((JavaLangStringBuilder *) nil_chk(publicIdentifier_)) description];
}

- (NSString *)getSystemIdentifier {
  return [((JavaLangStringBuilder *) nil_chk(systemIdentifier_)) description];
}

- (jboolean)isForceQuirks {
  return forceQuirks_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(getName);
  methods[3].selector = @selector(getPublicIdentifier);
  methods[4].selector = @selector(getSystemIdentifier);
  methods[5].selector = @selector(isForceQuirks);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "name_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "publicIdentifier_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "systemIdentifier_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "forceQuirks_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJsoupParserToken;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken_Doctype = { "Doctype", "org.jsoup.parser", ptrTable, methods, fields, 7, 0x18, 6, 4, 0, -1, -1, -1, -1 };
  return &_OrgJsoupParserToken_Doctype;
}

@end

void OrgJsoupParserToken_Doctype_init(OrgJsoupParserToken_Doctype *self) {
  OrgJsoupParserToken_init(self);
  self->name_ = new_JavaLangStringBuilder_init();
  self->publicIdentifier_ = new_JavaLangStringBuilder_init();
  self->systemIdentifier_ = new_JavaLangStringBuilder_init();
  self->forceQuirks_ = false;
  self->type_ = JreLoadEnum(OrgJsoupParserToken_TokenType, Doctype);
}

OrgJsoupParserToken_Doctype *new_OrgJsoupParserToken_Doctype_init() {
  J2OBJC_NEW_IMPL(OrgJsoupParserToken_Doctype, init)
}

OrgJsoupParserToken_Doctype *create_OrgJsoupParserToken_Doctype_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupParserToken_Doctype, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken_Doctype)

@implementation OrgJsoupParserToken_Tag

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserToken_Tag_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJsoupParserToken_Tag *)reset {
  return OrgJsoupParserToken_Tag_reset(self);
}

- (void)newAttribute {
  OrgJsoupParserToken_Tag_newAttribute(self);
}

- (void)finaliseTag {
  if (pendingAttributeName_ != nil) {
    OrgJsoupParserToken_Tag_newAttribute(self);
  }
}

- (NSString *)name {
  return OrgJsoupParserToken_Tag_name(self);
}

- (OrgJsoupParserToken_Tag *)nameWithNSString:(NSString *)name {
  tagName_ = name;
  return self;
}

- (jboolean)isSelfClosing {
  return selfClosing_;
}

- (OrgJsoupNodesAttributes *)getAttributes {
  return attributes_;
}

- (void)appendTagNameWithNSString:(NSString *)append {
  OrgJsoupParserToken_Tag_appendTagNameWithNSString_(self, append);
}

- (void)appendTagNameWithChar:(jchar)append {
  OrgJsoupParserToken_Tag_appendTagNameWithNSString_(self, NSString_java_valueOfChar_(append));
}

- (void)appendAttributeNameWithNSString:(NSString *)append {
  OrgJsoupParserToken_Tag_appendAttributeNameWithNSString_(self, append);
}

- (void)appendAttributeNameWithChar:(jchar)append {
  OrgJsoupParserToken_Tag_appendAttributeNameWithNSString_(self, NSString_java_valueOfChar_(append));
}

- (void)appendAttributeValueWithNSString:(NSString *)append {
  OrgJsoupParserToken_Tag_ensureAttributeValue(self);
  (void) [((JavaLangStringBuilder *) nil_chk(pendingAttributeValue_)) appendWithNSString:append];
}

- (void)appendAttributeValueWithChar:(jchar)append {
  OrgJsoupParserToken_Tag_ensureAttributeValue(self);
  (void) [((JavaLangStringBuilder *) nil_chk(pendingAttributeValue_)) appendWithChar:append];
}

- (void)appendAttributeValueWithCharArray:(IOSCharArray *)append {
  OrgJsoupParserToken_Tag_ensureAttributeValue(self);
  (void) [((JavaLangStringBuilder *) nil_chk(pendingAttributeValue_)) appendWithCharArray:append];
}

- (void)setEmptyAttributeValue {
  hasEmptyAttributeValue_ = true;
}

- (void)ensureAttributeValue {
  OrgJsoupParserToken_Tag_ensureAttributeValue(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_Tag;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_Tag;", 0x10, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesAttributes;", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 2, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 4, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 4, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 5, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 5, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x10, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x10, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(newAttribute);
  methods[3].selector = @selector(finaliseTag);
  methods[4].selector = @selector(name);
  methods[5].selector = @selector(nameWithNSString:);
  methods[6].selector = @selector(isSelfClosing);
  methods[7].selector = @selector(getAttributes);
  methods[8].selector = @selector(appendTagNameWithNSString:);
  methods[9].selector = @selector(appendTagNameWithChar:);
  methods[10].selector = @selector(appendAttributeNameWithNSString:);
  methods[11].selector = @selector(appendAttributeNameWithChar:);
  methods[12].selector = @selector(appendAttributeValueWithNSString:);
  methods[13].selector = @selector(appendAttributeValueWithChar:);
  methods[14].selector = @selector(appendAttributeValueWithCharArray:);
  methods[15].selector = @selector(setEmptyAttributeValue);
  methods[16].selector = @selector(ensureAttributeValue);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "tagName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "pendingAttributeName_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "pendingAttributeValue_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hasEmptyAttributeValue_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "hasPendingAttributeValue_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "selfClosing_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
    { "attributes_", "LOrgJsoupNodesAttributes;", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "name", "LNSString;", "appendTagName", "C", "appendAttributeName", "appendAttributeValue", "[C", "LOrgJsoupParserToken;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken_Tag = { "Tag", "org.jsoup.parser", ptrTable, methods, fields, 7, 0x408, 17, 7, 7, -1, -1, -1, -1 };
  return &_OrgJsoupParserToken_Tag;
}

@end

void OrgJsoupParserToken_Tag_init(OrgJsoupParserToken_Tag *self) {
  OrgJsoupParserToken_init(self);
  self->pendingAttributeValue_ = new_JavaLangStringBuilder_init();
  self->hasEmptyAttributeValue_ = false;
  self->hasPendingAttributeValue_ = false;
  self->selfClosing_ = false;
}

OrgJsoupParserToken_Tag *OrgJsoupParserToken_Tag_reset(OrgJsoupParserToken_Tag *self) {
  self->tagName_ = nil;
  self->pendingAttributeName_ = nil;
  OrgJsoupParserToken_resetWithJavaLangStringBuilder_(self->pendingAttributeValue_);
  self->hasEmptyAttributeValue_ = false;
  self->hasPendingAttributeValue_ = false;
  self->selfClosing_ = false;
  self->attributes_ = nil;
  return self;
}

void OrgJsoupParserToken_Tag_newAttribute(OrgJsoupParserToken_Tag *self) {
  if (self->attributes_ == nil) self->attributes_ = new_OrgJsoupNodesAttributes_init();
  if (self->pendingAttributeName_ != nil) {
    OrgJsoupNodesAttribute *attribute;
    if (self->hasPendingAttributeValue_) attribute = new_OrgJsoupNodesAttribute_initWithNSString_withNSString_(self->pendingAttributeName_, [((JavaLangStringBuilder *) nil_chk(self->pendingAttributeValue_)) description]);
    else if (self->hasEmptyAttributeValue_) attribute = new_OrgJsoupNodesAttribute_initWithNSString_withNSString_(self->pendingAttributeName_, @"");
    else attribute = new_OrgJsoupNodesBooleanAttribute_initWithNSString_(self->pendingAttributeName_);
    [((OrgJsoupNodesAttributes *) nil_chk(self->attributes_)) putWithOrgJsoupNodesAttribute:attribute];
  }
  self->pendingAttributeName_ = nil;
  self->hasEmptyAttributeValue_ = false;
  self->hasPendingAttributeValue_ = false;
  OrgJsoupParserToken_resetWithJavaLangStringBuilder_(self->pendingAttributeValue_);
}

NSString *OrgJsoupParserToken_Tag_name(OrgJsoupParserToken_Tag *self) {
  OrgJsoupHelperValidate_isFalseWithBoolean_(self->tagName_ == nil || [self->tagName_ java_length] == 0);
  return self->tagName_;
}

void OrgJsoupParserToken_Tag_appendTagNameWithNSString_(OrgJsoupParserToken_Tag *self, NSString *append) {
  self->tagName_ = self->tagName_ == nil ? append : [self->tagName_ java_concat:append];
}

void OrgJsoupParserToken_Tag_appendAttributeNameWithNSString_(OrgJsoupParserToken_Tag *self, NSString *append) {
  self->pendingAttributeName_ = self->pendingAttributeName_ == nil ? append : [self->pendingAttributeName_ java_concat:append];
}

void OrgJsoupParserToken_Tag_ensureAttributeValue(OrgJsoupParserToken_Tag *self) {
  self->hasPendingAttributeValue_ = true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken_Tag)

@implementation OrgJsoupParserToken_StartTag

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserToken_StartTag_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJsoupParserToken_Tag *)reset {
  (void) OrgJsoupParserToken_Tag_reset(self);
  attributes_ = new_OrgJsoupNodesAttributes_init();
  return self;
}

- (OrgJsoupParserToken_StartTag *)nameAttrWithNSString:(NSString *)name
                           withOrgJsoupNodesAttributes:(OrgJsoupNodesAttributes *)attributes {
  self->tagName_ = name;
  self->attributes_ = attributes;
  return self;
}

- (NSString *)description {
  if (attributes_ != nil && [attributes_ size] > 0) return JreStrcat("C$C$C", '<', OrgJsoupParserToken_Tag_name(self), ' ', [((OrgJsoupNodesAttributes *) nil_chk(attributes_)) description], '>');
  else return JreStrcat("C$C", '<', OrgJsoupParserToken_Tag_name(self), '>');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_Tag;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_StartTag;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(nameAttrWithNSString:withOrgJsoupNodesAttributes:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "nameAttr", "LNSString;LOrgJsoupNodesAttributes;", "toString", "LOrgJsoupParserToken;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken_StartTag = { "StartTag", "org.jsoup.parser", ptrTable, methods, NULL, 7, 0x18, 4, 0, 3, -1, -1, -1, -1 };
  return &_OrgJsoupParserToken_StartTag;
}

@end

void OrgJsoupParserToken_StartTag_init(OrgJsoupParserToken_StartTag *self) {
  OrgJsoupParserToken_Tag_init(self);
  self->attributes_ = new_OrgJsoupNodesAttributes_init();
  self->type_ = JreLoadEnum(OrgJsoupParserToken_TokenType, StartTag);
}

OrgJsoupParserToken_StartTag *new_OrgJsoupParserToken_StartTag_init() {
  J2OBJC_NEW_IMPL(OrgJsoupParserToken_StartTag, init)
}

OrgJsoupParserToken_StartTag *create_OrgJsoupParserToken_StartTag_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupParserToken_StartTag, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken_StartTag)

@implementation OrgJsoupParserToken_EndTag

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserToken_EndTag_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)description {
  return JreStrcat("$$C", @"</", OrgJsoupParserToken_Tag_name(self), '>');
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(description);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "toString", "LOrgJsoupParserToken;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken_EndTag = { "EndTag", "org.jsoup.parser", ptrTable, methods, NULL, 7, 0x18, 2, 0, 1, -1, -1, -1, -1 };
  return &_OrgJsoupParserToken_EndTag;
}

@end

void OrgJsoupParserToken_EndTag_init(OrgJsoupParserToken_EndTag *self) {
  OrgJsoupParserToken_Tag_init(self);
  self->type_ = JreLoadEnum(OrgJsoupParserToken_TokenType, EndTag);
}

OrgJsoupParserToken_EndTag *new_OrgJsoupParserToken_EndTag_init() {
  J2OBJC_NEW_IMPL(OrgJsoupParserToken_EndTag, init)
}

OrgJsoupParserToken_EndTag *create_OrgJsoupParserToken_EndTag_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupParserToken_EndTag, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken_EndTag)

@implementation OrgJsoupParserToken_Comment

- (OrgJsoupParserToken *)reset {
  OrgJsoupParserToken_resetWithJavaLangStringBuilder_(data_);
  bogus_ = false;
  return self;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserToken_Comment_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)getData {
  return [((JavaLangStringBuilder *) nil_chk(data_)) description];
}

- (NSString *)description {
  return JreStrcat("$$$", @"<!--", [self getData], @"-->");
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LOrgJsoupParserToken;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(reset);
  methods[1].selector = @selector(init);
  methods[2].selector = @selector(getData);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "data_", "LJavaLangStringBuilder;", .constantValue.asLong = 0, 0x10, -1, -1, -1, -1 },
    { "bogus_", "Z", .constantValue.asLong = 0, 0x0, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "toString", "LOrgJsoupParserToken;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken_Comment = { "Comment", "org.jsoup.parser", ptrTable, methods, fields, 7, 0x18, 4, 2, 1, -1, -1, -1, -1 };
  return &_OrgJsoupParserToken_Comment;
}

@end

void OrgJsoupParserToken_Comment_init(OrgJsoupParserToken_Comment *self) {
  OrgJsoupParserToken_init(self);
  self->data_ = new_JavaLangStringBuilder_init();
  self->bogus_ = false;
  self->type_ = JreLoadEnum(OrgJsoupParserToken_TokenType, Comment);
}

OrgJsoupParserToken_Comment *new_OrgJsoupParserToken_Comment_init() {
  J2OBJC_NEW_IMPL(OrgJsoupParserToken_Comment, init)
}

OrgJsoupParserToken_Comment *create_OrgJsoupParserToken_Comment_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupParserToken_Comment, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken_Comment)

@implementation OrgJsoupParserToken_Character

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserToken_Character_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJsoupParserToken *)reset {
  data_ = nil;
  return self;
}

- (OrgJsoupParserToken_Character *)dataWithNSString:(NSString *)data {
  self->data_ = data;
  return self;
}

- (NSString *)getData {
  return data_;
}

- (NSString *)description {
  return [self getData];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_Character;", 0x0, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 2, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  methods[2].selector = @selector(dataWithNSString:);
  methods[3].selector = @selector(getData);
  methods[4].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "data_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "data", "LNSString;", "toString", "LOrgJsoupParserToken;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken_Character = { "Character", "org.jsoup.parser", ptrTable, methods, fields, 7, 0x18, 5, 1, 3, -1, -1, -1, -1 };
  return &_OrgJsoupParserToken_Character;
}

@end

void OrgJsoupParserToken_Character_init(OrgJsoupParserToken_Character *self) {
  OrgJsoupParserToken_init(self);
  self->type_ = JreLoadEnum(OrgJsoupParserToken_TokenType, Character);
}

OrgJsoupParserToken_Character *new_OrgJsoupParserToken_Character_init() {
  J2OBJC_NEW_IMPL(OrgJsoupParserToken_Character, init)
}

OrgJsoupParserToken_Character *create_OrgJsoupParserToken_Character_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupParserToken_Character, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken_Character)

@implementation OrgJsoupParserToken_EOF

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupParserToken_EOF_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJsoupParserToken *)reset {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(reset);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LOrgJsoupParserToken;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken_EOF = { "EOF", "org.jsoup.parser", ptrTable, methods, NULL, 7, 0x18, 2, 0, 0, -1, -1, -1, -1 };
  return &_OrgJsoupParserToken_EOF;
}

@end

void OrgJsoupParserToken_EOF_init(OrgJsoupParserToken_EOF *self) {
  OrgJsoupParserToken_init(self);
  self->type_ = JreLoadEnum(OrgJsoupParserToken_TokenType, EOF);
}

OrgJsoupParserToken_EOF *new_OrgJsoupParserToken_EOF_init() {
  J2OBJC_NEW_IMPL(OrgJsoupParserToken_EOF, init)
}

OrgJsoupParserToken_EOF *create_OrgJsoupParserToken_EOF_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupParserToken_EOF, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken_EOF)

J2OBJC_INITIALIZED_DEFN(OrgJsoupParserToken_TokenType)

OrgJsoupParserToken_TokenType *OrgJsoupParserToken_TokenType_values_[6];

@implementation OrgJsoupParserToken_TokenType

+ (IOSObjectArray *)values {
  return OrgJsoupParserToken_TokenType_values();
}

+ (OrgJsoupParserToken_TokenType *)valueOfWithNSString:(NSString *)name {
  return OrgJsoupParserToken_TokenType_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJsoupParserToken_TokenType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupParserToken_TokenType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "Doctype", "LOrgJsoupParserToken_TokenType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "StartTag", "LOrgJsoupParserToken_TokenType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "EndTag", "LOrgJsoupParserToken_TokenType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "Comment", "LOrgJsoupParserToken_TokenType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "Character", "LOrgJsoupParserToken_TokenType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "EOF", "LOrgJsoupParserToken_TokenType;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJsoupParserToken_TokenType, Doctype), &JreEnum(OrgJsoupParserToken_TokenType, StartTag), &JreEnum(OrgJsoupParserToken_TokenType, EndTag), &JreEnum(OrgJsoupParserToken_TokenType, Comment), &JreEnum(OrgJsoupParserToken_TokenType, Character), &JreEnum(OrgJsoupParserToken_TokenType, EOF), "LOrgJsoupParserToken;", "Ljava/lang/Enum<Lorg/jsoup/parser/Token$TokenType;>;" };
  static const J2ObjcClassInfo _OrgJsoupParserToken_TokenType = { "TokenType", "org.jsoup.parser", ptrTable, methods, fields, 7, 0x4018, 2, 6, 8, -1, -1, 9, -1 };
  return &_OrgJsoupParserToken_TokenType;
}

+ (void)initialize {
  if (self == [OrgJsoupParserToken_TokenType class]) {
    JreEnum(OrgJsoupParserToken_TokenType, Doctype) = new_OrgJsoupParserToken_TokenType_initWithNSString_withInt_(@"", 0);
    JreEnum(OrgJsoupParserToken_TokenType, StartTag) = new_OrgJsoupParserToken_TokenType_initWithNSString_withInt_(@"", 1);
    JreEnum(OrgJsoupParserToken_TokenType, EndTag) = new_OrgJsoupParserToken_TokenType_initWithNSString_withInt_(@"", 2);
    JreEnum(OrgJsoupParserToken_TokenType, Comment) = new_OrgJsoupParserToken_TokenType_initWithNSString_withInt_(@"", 3);
    JreEnum(OrgJsoupParserToken_TokenType, Character) = new_OrgJsoupParserToken_TokenType_initWithNSString_withInt_(@"", 4);
    JreEnum(OrgJsoupParserToken_TokenType, EOF) = new_OrgJsoupParserToken_TokenType_initWithNSString_withInt_(@"", 5);
    J2OBJC_SET_INITIALIZED(OrgJsoupParserToken_TokenType)
  }
}

@end

void OrgJsoupParserToken_TokenType_initWithNSString_withInt_(OrgJsoupParserToken_TokenType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgJsoupParserToken_TokenType *new_OrgJsoupParserToken_TokenType_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgJsoupParserToken_TokenType, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *OrgJsoupParserToken_TokenType_values() {
  OrgJsoupParserToken_TokenType_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJsoupParserToken_TokenType_values_ count:6 type:OrgJsoupParserToken_TokenType_class_()];
}

OrgJsoupParserToken_TokenType *OrgJsoupParserToken_TokenType_valueOfWithNSString_(NSString *name) {
  OrgJsoupParserToken_TokenType_initialize();
  for (int i = 0; i < 6; i++) {
    OrgJsoupParserToken_TokenType *e = OrgJsoupParserToken_TokenType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJsoupParserToken_TokenType *OrgJsoupParserToken_TokenType_fromOrdinal(NSUInteger ordinal) {
  OrgJsoupParserToken_TokenType_initialize();
  if (ordinal >= 6) {
    return nil;
  }
  return OrgJsoupParserToken_TokenType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupParserToken_TokenType)
