//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/select/Selector.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Iterable.h"
#include "java/util/Collection.h"
#include "java/util/LinkedHashSet.h"
#include "org/jsoup/helper/Validate.h"
#include "org/jsoup/nodes/Element.h"
#include "org/jsoup/select/Collector.h"
#include "org/jsoup/select/Elements.h"
#include "org/jsoup/select/Evaluator.h"
#include "org/jsoup/select/QueryParser.h"
#include "org/jsoup/select/Selector.h"

@interface OrgJsoupSelectSelector () {
 @public
  OrgJsoupSelectEvaluator *evaluator_;
  OrgJsoupNodesElement *root_;
}

- (instancetype)initWithNSString:(NSString *)query
        withOrgJsoupNodesElement:(OrgJsoupNodesElement *)root;

- (instancetype)initWithOrgJsoupSelectEvaluator:(OrgJsoupSelectEvaluator *)evaluator
                       withOrgJsoupNodesElement:(OrgJsoupNodesElement *)root;

- (OrgJsoupSelectElements *)select;

@end

J2OBJC_FIELD_SETTER(OrgJsoupSelectSelector, evaluator_, OrgJsoupSelectEvaluator *)
J2OBJC_FIELD_SETTER(OrgJsoupSelectSelector, root_, OrgJsoupNodesElement *)

__attribute__((unused)) static void OrgJsoupSelectSelector_initWithNSString_withOrgJsoupNodesElement_(OrgJsoupSelectSelector *self, NSString *query, OrgJsoupNodesElement *root);

__attribute__((unused)) static OrgJsoupSelectSelector *new_OrgJsoupSelectSelector_initWithNSString_withOrgJsoupNodesElement_(NSString *query, OrgJsoupNodesElement *root) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJsoupSelectSelector *create_OrgJsoupSelectSelector_initWithNSString_withOrgJsoupNodesElement_(NSString *query, OrgJsoupNodesElement *root);

__attribute__((unused)) static void OrgJsoupSelectSelector_initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(OrgJsoupSelectSelector *self, OrgJsoupSelectEvaluator *evaluator, OrgJsoupNodesElement *root);

__attribute__((unused)) static OrgJsoupSelectSelector *new_OrgJsoupSelectSelector_initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(OrgJsoupSelectEvaluator *evaluator, OrgJsoupNodesElement *root) NS_RETURNS_RETAINED;

__attribute__((unused)) static OrgJsoupSelectSelector *create_OrgJsoupSelectSelector_initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(OrgJsoupSelectEvaluator *evaluator, OrgJsoupNodesElement *root);

__attribute__((unused)) static OrgJsoupSelectElements *OrgJsoupSelectSelector_select(OrgJsoupSelectSelector *self);

@implementation OrgJsoupSelectSelector

- (instancetype)initWithNSString:(NSString *)query
        withOrgJsoupNodesElement:(OrgJsoupNodesElement *)root {
  OrgJsoupSelectSelector_initWithNSString_withOrgJsoupNodesElement_(self, query, root);
  return self;
}

- (instancetype)initWithOrgJsoupSelectEvaluator:(OrgJsoupSelectEvaluator *)evaluator
                       withOrgJsoupNodesElement:(OrgJsoupNodesElement *)root {
  OrgJsoupSelectSelector_initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(self, evaluator, root);
  return self;
}

+ (OrgJsoupSelectElements *)selectWithNSString:(NSString *)query
                      withOrgJsoupNodesElement:(OrgJsoupNodesElement *)root {
  return OrgJsoupSelectSelector_selectWithNSString_withOrgJsoupNodesElement_(query, root);
}

+ (OrgJsoupSelectElements *)selectWithOrgJsoupSelectEvaluator:(OrgJsoupSelectEvaluator *)evaluator
                                     withOrgJsoupNodesElement:(OrgJsoupNodesElement *)root {
  return OrgJsoupSelectSelector_selectWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(evaluator, root);
}

+ (OrgJsoupSelectElements *)selectWithNSString:(NSString *)query
                          withJavaLangIterable:(id<JavaLangIterable>)roots {
  return OrgJsoupSelectSelector_selectWithNSString_withJavaLangIterable_(query, roots);
}

- (OrgJsoupSelectElements *)select {
  return OrgJsoupSelectSelector_select(self);
}

+ (OrgJsoupSelectElements *)filterOutWithJavaUtilCollection:(id<JavaUtilCollection>)elements
                                     withJavaUtilCollection:(id<JavaUtilCollection>)outs {
  return OrgJsoupSelectSelector_filterOutWithJavaUtilCollection_withJavaUtilCollection_(elements, outs);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x2, -1, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupSelectElements;", 0x9, 2, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupSelectElements;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupSelectElements;", 0x9, 2, 3, -1, 4, -1, -1 },
    { NULL, "LOrgJsoupSelectElements;", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupSelectElements;", 0x8, 5, 6, -1, 7, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withOrgJsoupNodesElement:);
  methods[1].selector = @selector(initWithOrgJsoupSelectEvaluator:withOrgJsoupNodesElement:);
  methods[2].selector = @selector(selectWithNSString:withOrgJsoupNodesElement:);
  methods[3].selector = @selector(selectWithOrgJsoupSelectEvaluator:withOrgJsoupNodesElement:);
  methods[4].selector = @selector(selectWithNSString:withJavaLangIterable:);
  methods[5].selector = @selector(select);
  methods[6].selector = @selector(filterOutWithJavaUtilCollection:withJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "evaluator_", "LOrgJsoupSelectEvaluator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "root_", "LOrgJsoupNodesElement;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LOrgJsoupNodesElement;", "LOrgJsoupSelectEvaluator;LOrgJsoupNodesElement;", "select", "LNSString;LJavaLangIterable;", "(Ljava/lang/String;Ljava/lang/Iterable<Lorg/jsoup/nodes/Element;>;)Lorg/jsoup/select/Elements;", "filterOut", "LJavaUtilCollection;LJavaUtilCollection;", "(Ljava/util/Collection<Lorg/jsoup/nodes/Element;>;Ljava/util/Collection<Lorg/jsoup/nodes/Element;>;)Lorg/jsoup/select/Elements;", "LOrgJsoupSelectSelector_SelectorParseException;" };
  static const J2ObjcClassInfo _OrgJsoupSelectSelector = { "Selector", "org.jsoup.select", ptrTable, methods, fields, 7, 0x1, 7, 2, -1, 8, -1, -1, -1 };
  return &_OrgJsoupSelectSelector;
}

@end

void OrgJsoupSelectSelector_initWithNSString_withOrgJsoupNodesElement_(OrgJsoupSelectSelector *self, NSString *query, OrgJsoupNodesElement *root) {
  NSObject_init(self);
  OrgJsoupHelperValidate_notNullWithId_(query);
  query = [((NSString *) nil_chk(query)) java_trim];
  OrgJsoupHelperValidate_notEmptyWithNSString_(query);
  OrgJsoupHelperValidate_notNullWithId_(root);
  self->evaluator_ = OrgJsoupSelectQueryParser_parseWithNSString_(query);
  self->root_ = root;
}

OrgJsoupSelectSelector *new_OrgJsoupSelectSelector_initWithNSString_withOrgJsoupNodesElement_(NSString *query, OrgJsoupNodesElement *root) {
  J2OBJC_NEW_IMPL(OrgJsoupSelectSelector, initWithNSString_withOrgJsoupNodesElement_, query, root)
}

OrgJsoupSelectSelector *create_OrgJsoupSelectSelector_initWithNSString_withOrgJsoupNodesElement_(NSString *query, OrgJsoupNodesElement *root) {
  J2OBJC_CREATE_IMPL(OrgJsoupSelectSelector, initWithNSString_withOrgJsoupNodesElement_, query, root)
}

void OrgJsoupSelectSelector_initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(OrgJsoupSelectSelector *self, OrgJsoupSelectEvaluator *evaluator, OrgJsoupNodesElement *root) {
  NSObject_init(self);
  OrgJsoupHelperValidate_notNullWithId_(evaluator);
  OrgJsoupHelperValidate_notNullWithId_(root);
  self->evaluator_ = evaluator;
  self->root_ = root;
}

OrgJsoupSelectSelector *new_OrgJsoupSelectSelector_initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(OrgJsoupSelectEvaluator *evaluator, OrgJsoupNodesElement *root) {
  J2OBJC_NEW_IMPL(OrgJsoupSelectSelector, initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_, evaluator, root)
}

OrgJsoupSelectSelector *create_OrgJsoupSelectSelector_initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(OrgJsoupSelectEvaluator *evaluator, OrgJsoupNodesElement *root) {
  J2OBJC_CREATE_IMPL(OrgJsoupSelectSelector, initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_, evaluator, root)
}

OrgJsoupSelectElements *OrgJsoupSelectSelector_selectWithNSString_withOrgJsoupNodesElement_(NSString *query, OrgJsoupNodesElement *root) {
  OrgJsoupSelectSelector_initialize();
  return OrgJsoupSelectSelector_select(new_OrgJsoupSelectSelector_initWithNSString_withOrgJsoupNodesElement_(query, root));
}

OrgJsoupSelectElements *OrgJsoupSelectSelector_selectWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(OrgJsoupSelectEvaluator *evaluator, OrgJsoupNodesElement *root) {
  OrgJsoupSelectSelector_initialize();
  return OrgJsoupSelectSelector_select(new_OrgJsoupSelectSelector_initWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(evaluator, root));
}

OrgJsoupSelectElements *OrgJsoupSelectSelector_selectWithNSString_withJavaLangIterable_(NSString *query, id<JavaLangIterable> roots) {
  OrgJsoupSelectSelector_initialize();
  OrgJsoupHelperValidate_notEmptyWithNSString_(query);
  OrgJsoupHelperValidate_notNullWithId_(roots);
  OrgJsoupSelectEvaluator *evaluator = OrgJsoupSelectQueryParser_parseWithNSString_(query);
  JavaUtilLinkedHashSet *elements = new_JavaUtilLinkedHashSet_init();
  for (OrgJsoupNodesElement * __strong root in nil_chk(roots)) {
    [elements addAllWithJavaUtilCollection:OrgJsoupSelectSelector_selectWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(evaluator, root)];
  }
  return new_OrgJsoupSelectElements_initWithJavaUtilCollection_(elements);
}

OrgJsoupSelectElements *OrgJsoupSelectSelector_select(OrgJsoupSelectSelector *self) {
  return OrgJsoupSelectCollector_collectWithOrgJsoupSelectEvaluator_withOrgJsoupNodesElement_(self->evaluator_, self->root_);
}

OrgJsoupSelectElements *OrgJsoupSelectSelector_filterOutWithJavaUtilCollection_withJavaUtilCollection_(id<JavaUtilCollection> elements, id<JavaUtilCollection> outs) {
  OrgJsoupSelectSelector_initialize();
  OrgJsoupSelectElements *output = new_OrgJsoupSelectElements_init();
  for (OrgJsoupNodesElement * __strong el in nil_chk(elements)) {
    jboolean found = false;
    for (OrgJsoupNodesElement * __strong out in nil_chk(outs)) {
      if ([((OrgJsoupNodesElement *) nil_chk(el)) isEqual:out]) {
        found = true;
        break;
      }
    }
    if (!found) [output addWithId:el];
  }
  return output;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupSelectSelector)

@implementation OrgJsoupSelectSelector_SelectorParseException

- (instancetype)initWithNSString:(NSString *)msg
               withNSObjectArray:(IOSObjectArray *)params {
  OrgJsoupSelectSelector_SelectorParseException_initWithNSString_withNSObjectArray_(self, msg, params);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x81, -1, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:withNSObjectArray:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LNSString;[LNSObject;", "LOrgJsoupSelectSelector;" };
  static const J2ObjcClassInfo _OrgJsoupSelectSelector_SelectorParseException = { "SelectorParseException", "org.jsoup.select", ptrTable, methods, NULL, 7, 0x9, 1, 0, 1, -1, -1, -1, -1 };
  return &_OrgJsoupSelectSelector_SelectorParseException;
}

@end

void OrgJsoupSelectSelector_SelectorParseException_initWithNSString_withNSObjectArray_(OrgJsoupSelectSelector_SelectorParseException *self, NSString *msg, IOSObjectArray *params) {
  JavaLangIllegalStateException_initWithNSString_(self, NSString_java_formatWithNSString_withNSObjectArray_(msg, params));
}

OrgJsoupSelectSelector_SelectorParseException *new_OrgJsoupSelectSelector_SelectorParseException_initWithNSString_withNSObjectArray_(NSString *msg, IOSObjectArray *params) {
  J2OBJC_NEW_IMPL(OrgJsoupSelectSelector_SelectorParseException, initWithNSString_withNSObjectArray_, msg, params)
}

OrgJsoupSelectSelector_SelectorParseException *create_OrgJsoupSelectSelector_SelectorParseException_initWithNSString_withNSObjectArray_(NSString *msg, IOSObjectArray *params) {
  J2OBJC_CREATE_IMPL(OrgJsoupSelectSelector_SelectorParseException, initWithNSString_withNSObjectArray_, msg, params)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupSelectSelector_SelectorParseException)
