//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/builder/StandardToStringStyle.java
//

#include "J2ObjC_source.h"
#include "org/apache/commons/lang3/builder/StandardToStringStyle.h"
#include "org/apache/commons/lang3/builder/ToStringStyle.h"

inline jlong OrgApacheCommonsLang3BuilderStandardToStringStyle_get_serialVersionUID(void);
#define OrgApacheCommonsLang3BuilderStandardToStringStyle_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3BuilderStandardToStringStyle, serialVersionUID, jlong)

@implementation OrgApacheCommonsLang3BuilderStandardToStringStyle

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3BuilderStandardToStringStyle_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isUseClassName {
  return [super isUseClassName];
}

- (void)setUseClassNameWithBoolean:(jboolean)useClassName {
  [super setUseClassNameWithBoolean:useClassName];
}

- (jboolean)isUseShortClassName {
  return [super isUseShortClassName];
}

- (void)setUseShortClassNameWithBoolean:(jboolean)useShortClassName {
  [super setUseShortClassNameWithBoolean:useShortClassName];
}

- (jboolean)isUseIdentityHashCode {
  return [super isUseIdentityHashCode];
}

- (void)setUseIdentityHashCodeWithBoolean:(jboolean)useIdentityHashCode {
  [super setUseIdentityHashCodeWithBoolean:useIdentityHashCode];
}

- (jboolean)isUseFieldNames {
  return [super isUseFieldNames];
}

- (void)setUseFieldNamesWithBoolean:(jboolean)useFieldNames {
  [super setUseFieldNamesWithBoolean:useFieldNames];
}

- (jboolean)isDefaultFullDetail {
  return [super isDefaultFullDetail];
}

- (void)setDefaultFullDetailWithBoolean:(jboolean)defaultFullDetail {
  [super setDefaultFullDetailWithBoolean:defaultFullDetail];
}

- (jboolean)isArrayContentDetail {
  return [super isArrayContentDetail];
}

- (void)setArrayContentDetailWithBoolean:(jboolean)arrayContentDetail {
  [super setArrayContentDetailWithBoolean:arrayContentDetail];
}

- (NSString *)getArrayStart {
  return [super getArrayStart];
}

- (void)setArrayStartWithNSString:(NSString *)arrayStart {
  [super setArrayStartWithNSString:arrayStart];
}

- (NSString *)getArrayEnd {
  return [super getArrayEnd];
}

- (void)setArrayEndWithNSString:(NSString *)arrayEnd {
  [super setArrayEndWithNSString:arrayEnd];
}

- (NSString *)getArraySeparator {
  return [super getArraySeparator];
}

- (void)setArraySeparatorWithNSString:(NSString *)arraySeparator {
  [super setArraySeparatorWithNSString:arraySeparator];
}

- (NSString *)getContentStart {
  return [super getContentStart];
}

- (void)setContentStartWithNSString:(NSString *)contentStart {
  [super setContentStartWithNSString:contentStart];
}

- (NSString *)getContentEnd {
  return [super getContentEnd];
}

- (void)setContentEndWithNSString:(NSString *)contentEnd {
  [super setContentEndWithNSString:contentEnd];
}

- (NSString *)getFieldNameValueSeparator {
  return [super getFieldNameValueSeparator];
}

- (void)setFieldNameValueSeparatorWithNSString:(NSString *)fieldNameValueSeparator {
  [super setFieldNameValueSeparatorWithNSString:fieldNameValueSeparator];
}

- (NSString *)getFieldSeparator {
  return [super getFieldSeparator];
}

- (void)setFieldSeparatorWithNSString:(NSString *)fieldSeparator {
  [super setFieldSeparatorWithNSString:fieldSeparator];
}

- (jboolean)isFieldSeparatorAtStart {
  return [super isFieldSeparatorAtStart];
}

- (void)setFieldSeparatorAtStartWithBoolean:(jboolean)fieldSeparatorAtStart {
  [super setFieldSeparatorAtStartWithBoolean:fieldSeparatorAtStart];
}

- (jboolean)isFieldSeparatorAtEnd {
  return [super isFieldSeparatorAtEnd];
}

- (void)setFieldSeparatorAtEndWithBoolean:(jboolean)fieldSeparatorAtEnd {
  [super setFieldSeparatorAtEndWithBoolean:fieldSeparatorAtEnd];
}

- (NSString *)getNullText {
  return [super getNullText];
}

- (void)setNullTextWithNSString:(NSString *)nullText {
  [super setNullTextWithNSString:nullText];
}

- (NSString *)getSizeStartText {
  return [super getSizeStartText];
}

- (void)setSizeStartTextWithNSString:(NSString *)sizeStartText {
  [super setSizeStartTextWithNSString:sizeStartText];
}

- (NSString *)getSizeEndText {
  return [super getSizeEndText];
}

- (void)setSizeEndTextWithNSString:(NSString *)sizeEndText {
  [super setSizeEndTextWithNSString:sizeEndText];
}

- (NSString *)getSummaryObjectStartText {
  return [super getSummaryObjectStartText];
}

- (void)setSummaryObjectStartTextWithNSString:(NSString *)summaryObjectStartText {
  [super setSummaryObjectStartTextWithNSString:summaryObjectStartText];
}

- (NSString *)getSummaryObjectEndText {
  return [super getSummaryObjectEndText];
}

- (void)setSummaryObjectEndTextWithNSString:(NSString *)summaryObjectEndText {
  [super setSummaryObjectEndTextWithNSString:summaryObjectEndText];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 10, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 16, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 17, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 18, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 20, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 21, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isUseClassName);
  methods[2].selector = @selector(setUseClassNameWithBoolean:);
  methods[3].selector = @selector(isUseShortClassName);
  methods[4].selector = @selector(setUseShortClassNameWithBoolean:);
  methods[5].selector = @selector(isUseIdentityHashCode);
  methods[6].selector = @selector(setUseIdentityHashCodeWithBoolean:);
  methods[7].selector = @selector(isUseFieldNames);
  methods[8].selector = @selector(setUseFieldNamesWithBoolean:);
  methods[9].selector = @selector(isDefaultFullDetail);
  methods[10].selector = @selector(setDefaultFullDetailWithBoolean:);
  methods[11].selector = @selector(isArrayContentDetail);
  methods[12].selector = @selector(setArrayContentDetailWithBoolean:);
  methods[13].selector = @selector(getArrayStart);
  methods[14].selector = @selector(setArrayStartWithNSString:);
  methods[15].selector = @selector(getArrayEnd);
  methods[16].selector = @selector(setArrayEndWithNSString:);
  methods[17].selector = @selector(getArraySeparator);
  methods[18].selector = @selector(setArraySeparatorWithNSString:);
  methods[19].selector = @selector(getContentStart);
  methods[20].selector = @selector(setContentStartWithNSString:);
  methods[21].selector = @selector(getContentEnd);
  methods[22].selector = @selector(setContentEndWithNSString:);
  methods[23].selector = @selector(getFieldNameValueSeparator);
  methods[24].selector = @selector(setFieldNameValueSeparatorWithNSString:);
  methods[25].selector = @selector(getFieldSeparator);
  methods[26].selector = @selector(setFieldSeparatorWithNSString:);
  methods[27].selector = @selector(isFieldSeparatorAtStart);
  methods[28].selector = @selector(setFieldSeparatorAtStartWithBoolean:);
  methods[29].selector = @selector(isFieldSeparatorAtEnd);
  methods[30].selector = @selector(setFieldSeparatorAtEndWithBoolean:);
  methods[31].selector = @selector(getNullText);
  methods[32].selector = @selector(setNullTextWithNSString:);
  methods[33].selector = @selector(getSizeStartText);
  methods[34].selector = @selector(setSizeStartTextWithNSString:);
  methods[35].selector = @selector(getSizeEndText);
  methods[36].selector = @selector(setSizeEndTextWithNSString:);
  methods[37].selector = @selector(getSummaryObjectStartText);
  methods[38].selector = @selector(setSummaryObjectStartTextWithNSString:);
  methods[39].selector = @selector(getSummaryObjectEndText);
  methods[40].selector = @selector(setSummaryObjectEndTextWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3BuilderStandardToStringStyle_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "setUseClassName", "Z", "setUseShortClassName", "setUseIdentityHashCode", "setUseFieldNames", "setDefaultFullDetail", "setArrayContentDetail", "setArrayStart", "LNSString;", "setArrayEnd", "setArraySeparator", "setContentStart", "setContentEnd", "setFieldNameValueSeparator", "setFieldSeparator", "setFieldSeparatorAtStart", "setFieldSeparatorAtEnd", "setNullText", "setSizeStartText", "setSizeEndText", "setSummaryObjectStartText", "setSummaryObjectEndText" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderStandardToStringStyle = { "StandardToStringStyle", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1, 41, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderStandardToStringStyle;
}

@end

void OrgApacheCommonsLang3BuilderStandardToStringStyle_init(OrgApacheCommonsLang3BuilderStandardToStringStyle *self) {
  OrgApacheCommonsLang3BuilderToStringStyle_init(self);
}

OrgApacheCommonsLang3BuilderStandardToStringStyle *new_OrgApacheCommonsLang3BuilderStandardToStringStyle_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderStandardToStringStyle, init)
}

OrgApacheCommonsLang3BuilderStandardToStringStyle *create_OrgApacheCommonsLang3BuilderStandardToStringStyle_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderStandardToStringStyle, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderStandardToStringStyle)
