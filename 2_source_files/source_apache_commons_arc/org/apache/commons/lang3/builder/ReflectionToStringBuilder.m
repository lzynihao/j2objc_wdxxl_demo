//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-sources.jar!org/apache/commons/lang3/builder/ReflectionToStringBuilder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/InternalError.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/reflect/AccessibleObject.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/List.h"
#include "org/apache/commons/lang3/ArrayUtils.h"
#include "org/apache/commons/lang3/ClassUtils.h"
#include "org/apache/commons/lang3/builder/ReflectionToStringBuilder.h"
#include "org/apache/commons/lang3/builder/ToStringBuilder.h"
#include "org/apache/commons/lang3/builder/ToStringStyle.h"

@interface OrgApacheCommonsLang3BuilderReflectionToStringBuilder () {
 @public
  jboolean appendStatics_;
  jboolean appendTransients_;
  IOSClass *upToClass_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, upToClass_, IOSClass *)

@implementation OrgApacheCommonsLang3BuilderReflectionToStringBuilder

+ (NSString *)toStringWithId:(id)object {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_(object);
}

+ (NSString *)toStringWithId:(id)object
withOrgApacheCommonsLang3BuilderToStringStyle:(OrgApacheCommonsLang3BuilderToStringStyle *)style {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(object, style);
}

+ (NSString *)toStringWithId:(id)object
withOrgApacheCommonsLang3BuilderToStringStyle:(OrgApacheCommonsLang3BuilderToStringStyle *)style
                 withBoolean:(jboolean)outputTransients {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_(object, style, outputTransients);
}

+ (NSString *)toStringWithId:(id)object
withOrgApacheCommonsLang3BuilderToStringStyle:(OrgApacheCommonsLang3BuilderToStringStyle *)style
                 withBoolean:(jboolean)outputTransients
                 withBoolean:(jboolean)outputStatics {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_withBoolean_(object, style, outputTransients, outputStatics);
}

+ (NSString *)toStringWithId:(id)object
withOrgApacheCommonsLang3BuilderToStringStyle:(OrgApacheCommonsLang3BuilderToStringStyle *)style
                 withBoolean:(jboolean)outputTransients
                 withBoolean:(jboolean)outputStatics
                withIOSClass:(IOSClass *)reflectUpToClass {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_withBoolean_withIOSClass_(object, style, outputTransients, outputStatics, reflectUpToClass);
}

+ (NSString *)toStringExcludeWithId:(id)object
             withJavaUtilCollection:(id<JavaUtilCollection>)excludeFieldNames {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringExcludeWithId_withJavaUtilCollection_(object, excludeFieldNames);
}

+ (IOSObjectArray *)toNoNullStringArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toNoNullStringArrayWithJavaUtilCollection_(collection);
}

+ (IOSObjectArray *)toNoNullStringArrayWithNSObjectArray:(IOSObjectArray *)array {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toNoNullStringArrayWithNSObjectArray_(array);
}

+ (NSString *)toStringExcludeWithId:(id)object
                  withNSStringArray:(IOSObjectArray *)excludeFieldNames {
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringExcludeWithId_withNSStringArray_(object, excludeFieldNames);
}

- (instancetype)initWithId:(id)object {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_(self, object);
  return self;
}

- (instancetype)initWithId:(id)object
withOrgApacheCommonsLang3BuilderToStringStyle:(OrgApacheCommonsLang3BuilderToStringStyle *)style {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(self, object, style);
  return self;
}

- (instancetype)initWithId:(id)object
withOrgApacheCommonsLang3BuilderToStringStyle:(OrgApacheCommonsLang3BuilderToStringStyle *)style
  withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_(self, object, style, buffer);
  return self;
}

- (instancetype)initWithId:(id)object
withOrgApacheCommonsLang3BuilderToStringStyle:(OrgApacheCommonsLang3BuilderToStringStyle *)style
  withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
              withIOSClass:(IOSClass *)reflectUpToClass
               withBoolean:(jboolean)outputTransients
               withBoolean:(jboolean)outputStatics {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_withIOSClass_withBoolean_withBoolean_(self, object, style, buffer, reflectUpToClass, outputTransients, outputStatics);
  return self;
}

- (jboolean)acceptWithJavaLangReflectField:(JavaLangReflectField *)field {
  if ([((NSString *) nil_chk([((JavaLangReflectField *) nil_chk(field)) getName])) java_indexOf:OrgApacheCommonsLang3ClassUtils_INNER_CLASS_SEPARATOR_CHAR] != -1) {
    return false;
  }
  if (JavaLangReflectModifier_isTransientWithInt_([field getModifiers]) && ![self isAppendTransients]) {
    return false;
  }
  if (JavaLangReflectModifier_isStaticWithInt_([field getModifiers]) && ![self isAppendStatics]) {
    return false;
  }
  if (self->excludeFieldNames_ != nil && JavaUtilArrays_binarySearchWithNSObjectArray_withId_(self->excludeFieldNames_, [field getName]) >= 0) {
    return false;
  }
  return true;
}

- (void)appendFieldsInWithIOSClass:(IOSClass *)clazz {
  if ([((IOSClass *) nil_chk(clazz)) isArray]) {
    (void) [self reflectionAppendArrayWithId:[self getObject]];
    return;
  }
  IOSObjectArray *fields = [clazz getDeclaredFields];
  JavaLangReflectAccessibleObject_setAccessibleWithJavaLangReflectAccessibleObjectArray_withBoolean_(fields, true);
  {
    IOSObjectArray *a__ = fields;
    JavaLangReflectField * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectField * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectField *field = *b__++;
      NSString *fieldName = [((JavaLangReflectField *) nil_chk(field)) getName];
      if ([self acceptWithJavaLangReflectField:field]) {
        @try {
          id fieldValue = [self getValueWithJavaLangReflectField:field];
          (void) [self appendWithNSString:fieldName withId:fieldValue];
        }
        @catch (JavaLangIllegalAccessException *ex) {
          @throw new_JavaLangInternalError_initWithNSString_(JreStrcat("$$", @"Unexpected IllegalAccessException: ", [ex getMessage]));
        }
      }
    }
  }
}

- (IOSObjectArray *)getExcludeFieldNames {
  return [((IOSObjectArray *) nil_chk(self->excludeFieldNames_)) java_clone];
}

- (IOSClass *)getUpToClass {
  return self->upToClass_;
}

- (id)getValueWithJavaLangReflectField:(JavaLangReflectField *)field {
  return [((JavaLangReflectField *) nil_chk(field)) getWithId:[self getObject]];
}

- (jboolean)isAppendStatics {
  return self->appendStatics_;
}

- (jboolean)isAppendTransients {
  return self->appendTransients_;
}

- (OrgApacheCommonsLang3BuilderReflectionToStringBuilder *)reflectionAppendArrayWithId:(id)array {
  [((OrgApacheCommonsLang3BuilderToStringStyle *) nil_chk([self getStyle])) reflectionAppendArrayDetailWithJavaLangStringBuffer:[self getStringBuffer] withNSString:nil withId:array];
  return self;
}

- (void)setAppendStaticsWithBoolean:(jboolean)appendStatics {
  self->appendStatics_ = appendStatics;
}

- (void)setAppendTransientsWithBoolean:(jboolean)appendTransients {
  self->appendTransients_ = appendTransients;
}

- (OrgApacheCommonsLang3BuilderReflectionToStringBuilder *)setExcludeFieldNamesWithNSStringArray:(IOSObjectArray *)excludeFieldNamesParam {
  if (excludeFieldNamesParam == nil) {
    self->excludeFieldNames_ = nil;
  }
  else {
    self->excludeFieldNames_ = OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toNoNullStringArrayWithNSObjectArray_(excludeFieldNamesParam);
    JavaUtilArrays_sortWithNSObjectArray_(self->excludeFieldNames_);
  }
  return self;
}

- (void)setUpToClassWithIOSClass:(IOSClass *)clazz {
  if (clazz != nil) {
    id object = [self getObject];
    if (object != nil && [clazz isInstance:object] == false) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Specified class is not a superclass of the object");
    }
  }
  self->upToClass_ = clazz;
}

- (NSString *)description {
  if ([self getObject] == nil) {
    return [((OrgApacheCommonsLang3BuilderToStringStyle *) nil_chk([self getStyle])) getNullText];
  }
  IOSClass *clazz = [nil_chk([self getObject]) java_getClass];
  [self appendFieldsInWithIOSClass:clazz];
  while ([((IOSClass *) nil_chk(clazz)) getSuperclass] != nil && clazz != [self getUpToClass]) {
    clazz = [clazz getSuperclass];
    [self appendFieldsInWithIOSClass:clazz];
  }
  return [super description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 5, -1, 6, -1, -1 },
    { NULL, "LNSString;", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "[LNSString;", 0x8, 10, 11, -1, 12, -1, -1 },
    { NULL, "[LNSString;", 0x8, 10, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x89, 7, 14, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 15, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 16, -1, 17, -1, -1 },
    { NULL, "Z", 0x4, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 20, 21, -1, 22, -1, -1 },
    { NULL, "[LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 23, -1, -1 },
    { NULL, "LNSObject;", 0x4, 24, 19, 25, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3BuilderReflectionToStringBuilder;", 0x1, 26, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 28, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3BuilderReflectionToStringBuilder;", 0x81, 30, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 21, -1, 22, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(toStringWithId:);
  methods[1].selector = @selector(toStringWithId:withOrgApacheCommonsLang3BuilderToStringStyle:);
  methods[2].selector = @selector(toStringWithId:withOrgApacheCommonsLang3BuilderToStringStyle:withBoolean:);
  methods[3].selector = @selector(toStringWithId:withOrgApacheCommonsLang3BuilderToStringStyle:withBoolean:withBoolean:);
  methods[4].selector = @selector(toStringWithId:withOrgApacheCommonsLang3BuilderToStringStyle:withBoolean:withBoolean:withIOSClass:);
  methods[5].selector = @selector(toStringExcludeWithId:withJavaUtilCollection:);
  methods[6].selector = @selector(toNoNullStringArrayWithJavaUtilCollection:);
  methods[7].selector = @selector(toNoNullStringArrayWithNSObjectArray:);
  methods[8].selector = @selector(toStringExcludeWithId:withNSStringArray:);
  methods[9].selector = @selector(initWithId:);
  methods[10].selector = @selector(initWithId:withOrgApacheCommonsLang3BuilderToStringStyle:);
  methods[11].selector = @selector(initWithId:withOrgApacheCommonsLang3BuilderToStringStyle:withJavaLangStringBuffer:);
  methods[12].selector = @selector(initWithId:withOrgApacheCommonsLang3BuilderToStringStyle:withJavaLangStringBuffer:withIOSClass:withBoolean:withBoolean:);
  methods[13].selector = @selector(acceptWithJavaLangReflectField:);
  methods[14].selector = @selector(appendFieldsInWithIOSClass:);
  methods[15].selector = @selector(getExcludeFieldNames);
  methods[16].selector = @selector(getUpToClass);
  methods[17].selector = @selector(getValueWithJavaLangReflectField:);
  methods[18].selector = @selector(isAppendStatics);
  methods[19].selector = @selector(isAppendTransients);
  methods[20].selector = @selector(reflectionAppendArrayWithId:);
  methods[21].selector = @selector(setAppendStaticsWithBoolean:);
  methods[22].selector = @selector(setAppendTransientsWithBoolean:);
  methods[23].selector = @selector(setExcludeFieldNamesWithNSStringArray:);
  methods[24].selector = @selector(setUpToClassWithIOSClass:);
  methods[25].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "appendStatics_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "appendTransients_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "excludeFieldNames_", "[LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "upToClass_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, 33, -1 },
  };
  static const void *ptrTable[] = { "toString", "LNSObject;", "LNSObject;LOrgApacheCommonsLang3BuilderToStringStyle;", "LNSObject;LOrgApacheCommonsLang3BuilderToStringStyle;Z", "LNSObject;LOrgApacheCommonsLang3BuilderToStringStyle;ZZ", "LNSObject;LOrgApacheCommonsLang3BuilderToStringStyle;ZZLIOSClass;", "<T:Ljava/lang/Object;>(TT;Lorg/apache/commons/lang3/builder/ToStringStyle;ZZLjava/lang/Class<-TT;>;)Ljava/lang/String;", "toStringExclude", "LNSObject;LJavaUtilCollection;", "(Ljava/lang/Object;Ljava/util/Collection<Ljava/lang/String;>;)Ljava/lang/String;", "toNoNullStringArray", "LJavaUtilCollection;", "(Ljava/util/Collection<Ljava/lang/String;>;)[Ljava/lang/String;", "[LNSObject;", "LNSObject;[LNSString;", "LNSObject;LOrgApacheCommonsLang3BuilderToStringStyle;LJavaLangStringBuffer;", "LNSObject;LOrgApacheCommonsLang3BuilderToStringStyle;LJavaLangStringBuffer;LIOSClass;ZZ", "<T:Ljava/lang/Object;>(TT;Lorg/apache/commons/lang3/builder/ToStringStyle;Ljava/lang/StringBuffer;Ljava/lang/Class<-TT;>;ZZ)V", "accept", "LJavaLangReflectField;", "appendFieldsIn", "LIOSClass;", "(Ljava/lang/Class<*>;)V", "()Ljava/lang/Class<*>;", "getValue", "LJavaLangIllegalArgumentException;LJavaLangIllegalAccessException;", "reflectionAppendArray", "setAppendStatics", "Z", "setAppendTransients", "setExcludeFieldNames", "[LNSString;", "setUpToClass", "Ljava/lang/Class<*>;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3BuilderReflectionToStringBuilder = { "ReflectionToStringBuilder", "org.apache.commons.lang3.builder", ptrTable, methods, fields, 7, 0x1, 26, 4, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3BuilderReflectionToStringBuilder;
}

@end

NSString *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_(id object) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_withBoolean_withIOSClass_(object, nil, false, false, nil);
}

NSString *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_withBoolean_withIOSClass_(object, style, false, false, nil);
}

NSString *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style, jboolean outputTransients) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_withBoolean_withIOSClass_(object, style, outputTransients, false, nil);
}

NSString *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_withBoolean_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style, jboolean outputTransients, jboolean outputStatics) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_withBoolean_withIOSClass_(object, style, outputTransients, outputStatics, nil);
}

NSString *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withBoolean_withBoolean_withIOSClass_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style, jboolean outputTransients, jboolean outputStatics, IOSClass *reflectUpToClass) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  return [new_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_withIOSClass_withBoolean_withBoolean_(object, style, nil, reflectUpToClass, outputTransients, outputStatics) description];
}

NSString *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringExcludeWithId_withJavaUtilCollection_(id object, id<JavaUtilCollection> excludeFieldNames) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringExcludeWithId_withNSStringArray_(object, OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toNoNullStringArrayWithJavaUtilCollection_(excludeFieldNames));
}

IOSObjectArray *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toNoNullStringArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  if (collection == nil) {
    return JreLoadStatic(OrgApacheCommonsLang3ArrayUtils, EMPTY_STRING_ARRAY);
  }
  return OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toNoNullStringArrayWithNSObjectArray_([collection toArray]);
}

IOSObjectArray *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toNoNullStringArrayWithNSObjectArray_(IOSObjectArray *array) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  id<JavaUtilList> list = new_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(array))->size_);
  {
    IOSObjectArray *a__ = array;
    id const *b__ = a__->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id e = *b__++;
      if (e != nil) {
        [list addWithId:[e description]];
      }
    }
  }
  return [list toArrayWithNSObjectArray:JreLoadStatic(OrgApacheCommonsLang3ArrayUtils, EMPTY_STRING_ARRAY)];
}

NSString *OrgApacheCommonsLang3BuilderReflectionToStringBuilder_toStringExcludeWithId_withNSStringArray_(id object, IOSObjectArray *excludeFieldNames) {
  OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initialize();
  return [((OrgApacheCommonsLang3BuilderReflectionToStringBuilder *) nil_chk([new_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_(object) setExcludeFieldNamesWithNSStringArray:excludeFieldNames])) description];
}

void OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_(OrgApacheCommonsLang3BuilderReflectionToStringBuilder *self, id object) {
  OrgApacheCommonsLang3BuilderToStringBuilder_initWithId_(self, object);
  self->appendStatics_ = false;
  self->appendTransients_ = false;
  self->upToClass_ = nil;
}

OrgApacheCommonsLang3BuilderReflectionToStringBuilder *new_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_(id object) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, initWithId_, object)
}

OrgApacheCommonsLang3BuilderReflectionToStringBuilder *create_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_(id object) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, initWithId_, object)
}

void OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(OrgApacheCommonsLang3BuilderReflectionToStringBuilder *self, id object, OrgApacheCommonsLang3BuilderToStringStyle *style) {
  OrgApacheCommonsLang3BuilderToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(self, object, style);
  self->appendStatics_ = false;
  self->appendTransients_ = false;
  self->upToClass_ = nil;
}

OrgApacheCommonsLang3BuilderReflectionToStringBuilder *new_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_, object, style)
}

OrgApacheCommonsLang3BuilderReflectionToStringBuilder *create_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_, object, style)
}

void OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_(OrgApacheCommonsLang3BuilderReflectionToStringBuilder *self, id object, OrgApacheCommonsLang3BuilderToStringStyle *style, JavaLangStringBuffer *buffer) {
  OrgApacheCommonsLang3BuilderToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_(self, object, style, buffer);
  self->appendStatics_ = false;
  self->appendTransients_ = false;
  self->upToClass_ = nil;
}

OrgApacheCommonsLang3BuilderReflectionToStringBuilder *new_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style, JavaLangStringBuffer *buffer) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_, object, style, buffer)
}

OrgApacheCommonsLang3BuilderReflectionToStringBuilder *create_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style, JavaLangStringBuffer *buffer) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_, object, style, buffer)
}

void OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_withIOSClass_withBoolean_withBoolean_(OrgApacheCommonsLang3BuilderReflectionToStringBuilder *self, id object, OrgApacheCommonsLang3BuilderToStringStyle *style, JavaLangStringBuffer *buffer, IOSClass *reflectUpToClass, jboolean outputTransients, jboolean outputStatics) {
  OrgApacheCommonsLang3BuilderToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_(self, object, style, buffer);
  self->appendStatics_ = false;
  self->appendTransients_ = false;
  self->upToClass_ = nil;
  [self setUpToClassWithIOSClass:reflectUpToClass];
  [self setAppendTransientsWithBoolean:outputTransients];
  [self setAppendStaticsWithBoolean:outputStatics];
}

OrgApacheCommonsLang3BuilderReflectionToStringBuilder *new_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_withIOSClass_withBoolean_withBoolean_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style, JavaLangStringBuffer *buffer, IOSClass *reflectUpToClass, jboolean outputTransients, jboolean outputStatics) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_withIOSClass_withBoolean_withBoolean_, object, style, buffer, reflectUpToClass, outputTransients, outputStatics)
}

OrgApacheCommonsLang3BuilderReflectionToStringBuilder *create_OrgApacheCommonsLang3BuilderReflectionToStringBuilder_initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_withIOSClass_withBoolean_withBoolean_(id object, OrgApacheCommonsLang3BuilderToStringStyle *style, JavaLangStringBuffer *buffer, IOSClass *reflectUpToClass, jboolean outputTransients, jboolean outputStatics) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3BuilderReflectionToStringBuilder, initWithId_withOrgApacheCommonsLang3BuilderToStringStyle_withJavaLangStringBuffer_withIOSClass_withBoolean_withBoolean_, object, style, buffer, reflectUpToClass, outputTransients, outputStatics)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3BuilderReflectionToStringBuilder)
