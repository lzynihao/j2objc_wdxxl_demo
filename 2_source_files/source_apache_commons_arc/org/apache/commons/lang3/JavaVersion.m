//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/JavaVersion.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Enum.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/System.h"
#include "org/apache/commons/lang3/JavaVersion.h"

@interface OrgApacheCommonsLang3JavaVersion () {
 @public
  jfloat value_;
  NSString *name_JavaVersion_;
}

+ (jfloat)maxVersion;

+ (jfloat)toFloatVersionWithNSString:(NSString *)value;

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3JavaVersion, name_JavaVersion_, NSString *)

__attribute__((unused)) static void OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(OrgApacheCommonsLang3JavaVersion *self, jfloat value, NSString *name, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgApacheCommonsLang3JavaVersion *new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(jfloat value, NSString *name, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static jfloat OrgApacheCommonsLang3JavaVersion_maxVersion(void);

__attribute__((unused)) static jfloat OrgApacheCommonsLang3JavaVersion_toFloatVersionWithNSString_(NSString *value);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsLang3JavaVersion)

OrgApacheCommonsLang3JavaVersion *OrgApacheCommonsLang3JavaVersion_values_[11];

@implementation OrgApacheCommonsLang3JavaVersion

- (jboolean)atLeastWithOrgApacheCommonsLang3JavaVersion:(OrgApacheCommonsLang3JavaVersion *)requiredVersion {
  return self->value_ >= ((OrgApacheCommonsLang3JavaVersion *) nil_chk(requiredVersion))->value_;
}

+ (OrgApacheCommonsLang3JavaVersion *)getJavaVersionWithNSString:(NSString *)nom {
  return OrgApacheCommonsLang3JavaVersion_getJavaVersionWithNSString_(nom);
}

+ (OrgApacheCommonsLang3JavaVersion *)getWithNSString:(NSString *)nom {
  return OrgApacheCommonsLang3JavaVersion_getWithNSString_(nom);
}

- (NSString *)description {
  return name_JavaVersion_;
}

+ (jfloat)maxVersion {
  return OrgApacheCommonsLang3JavaVersion_maxVersion();
}

+ (jfloat)toFloatVersionWithNSString:(NSString *)value {
  return OrgApacheCommonsLang3JavaVersion_toFloatVersionWithNSString_(value);
}

+ (IOSObjectArray *)values {
  return OrgApacheCommonsLang3JavaVersion_values();
}

+ (OrgApacheCommonsLang3JavaVersion *)valueOfWithNSString:(NSString *)name {
  return OrgApacheCommonsLang3JavaVersion_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3JavaVersion;", 0x8, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3JavaVersion;", 0x8, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
    { NULL, "F", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "F", 0xa, 6, 3, -1, -1, -1, -1 },
    { NULL, "[LOrgApacheCommonsLang3JavaVersion;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3JavaVersion;", 0x9, 7, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(atLeastWithOrgApacheCommonsLang3JavaVersion:);
  methods[1].selector = @selector(getJavaVersionWithNSString:);
  methods[2].selector = @selector(getWithNSString:);
  methods[3].selector = @selector(description);
  methods[4].selector = @selector(maxVersion);
  methods[5].selector = @selector(toFloatVersionWithNSString:);
  methods[6].selector = @selector(values);
  methods[7].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "JAVA_0_9", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "JAVA_1_1", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "JAVA_1_2", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "JAVA_1_3", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "JAVA_1_4", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "JAVA_1_5", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "JAVA_1_6", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "JAVA_1_7", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
    { "JAVA_1_8", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 16, -1, -1 },
    { "JAVA_1_9", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 17, -1, -1 },
    { "JAVA_RECENT", "LOrgApacheCommonsLang3JavaVersion;", .constantValue.asLong = 0, 0x4019, -1, 18, -1, -1 },
    { "value_", "F", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "name_JavaVersion_", "LNSString;", .constantValue.asLong = 0, 0x12, 19, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "atLeast", "LOrgApacheCommonsLang3JavaVersion;", "getJavaVersion", "LNSString;", "get", "toString", "toFloatVersion", "valueOf", &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_0_9), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_1), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_2), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_3), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_4), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_5), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_6), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_7), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_8), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_9), &JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_RECENT), "name", "Ljava/lang/Enum<Lorg/apache/commons/lang3/JavaVersion;>;" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3JavaVersion = { "JavaVersion", "org.apache.commons.lang3", ptrTable, methods, fields, 7, 0x4011, 8, 13, -1, -1, -1, 20, -1 };
  return &_OrgApacheCommonsLang3JavaVersion;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsLang3JavaVersion class]) {
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_0_9) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.5f, @"0.9", @"", 0);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_1) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.1f, @"1.1", @"", 1);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_2) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.2f, @"1.2", @"", 2);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_3) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.3f, @"1.3", @"", 3);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_4) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.4f, @"1.4", @"", 4);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_5) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.5f, @"1.5", @"", 5);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_6) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.6f, @"1.6", @"", 6);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_7) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.7f, @"1.7", @"", 7);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_8) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.8f, @"1.8", @"", 8);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_9) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(1.9f, @"1.9", @"", 9);
    JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_RECENT) = new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(OrgApacheCommonsLang3JavaVersion_maxVersion(), JavaLangFloat_toStringWithFloat_(OrgApacheCommonsLang3JavaVersion_maxVersion()), @"", 10);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsLang3JavaVersion)
  }
}

@end

void OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(OrgApacheCommonsLang3JavaVersion *self, jfloat value, NSString *name, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->value_ = value;
  self->name_JavaVersion_ = name;
}

OrgApacheCommonsLang3JavaVersion *new_OrgApacheCommonsLang3JavaVersion_initWithFloat_withNSString_withNSString_withInt_(jfloat value, NSString *name, NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3JavaVersion, initWithFloat_withNSString_withNSString_withInt_, value, name, __name, __ordinal)
}

OrgApacheCommonsLang3JavaVersion *OrgApacheCommonsLang3JavaVersion_getJavaVersionWithNSString_(NSString *nom) {
  OrgApacheCommonsLang3JavaVersion_initialize();
  return OrgApacheCommonsLang3JavaVersion_getWithNSString_(nom);
}

OrgApacheCommonsLang3JavaVersion *OrgApacheCommonsLang3JavaVersion_getWithNSString_(NSString *nom) {
  OrgApacheCommonsLang3JavaVersion_initialize();
  if ([@"0.9" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_0_9);
  }
  else if ([@"1.1" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_1);
  }
  else if ([@"1.2" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_2);
  }
  else if ([@"1.3" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_3);
  }
  else if ([@"1.4" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_4);
  }
  else if ([@"1.5" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_5);
  }
  else if ([@"1.6" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_6);
  }
  else if ([@"1.7" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_7);
  }
  else if ([@"1.8" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_8);
  }
  else if ([@"1.9" isEqual:nom]) {
    return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_1_9);
  }
  if (nom == nil) {
    return nil;
  }
  jfloat v = OrgApacheCommonsLang3JavaVersion_toFloatVersionWithNSString_(nom);
  if ((v - 1.) < 1.) {
    jint firstComma = JavaLangMath_maxWithInt_withInt_([nom java_indexOf:'.'], [nom java_indexOf:',']);
    jint end = JavaLangMath_maxWithInt_withInt_([nom java_length], [nom java_indexOf:',' fromIndex:firstComma]);
    if (JavaLangFloat_parseFloatWithNSString_([nom java_substring:firstComma + 1 endIndex:end]) > .9f) {
      return JreEnum(OrgApacheCommonsLang3JavaVersion, JAVA_RECENT);
    }
  }
  return nil;
}

jfloat OrgApacheCommonsLang3JavaVersion_maxVersion() {
  OrgApacheCommonsLang3JavaVersion_initialize();
  jfloat v = OrgApacheCommonsLang3JavaVersion_toFloatVersionWithNSString_(JavaLangSystem_getPropertyWithNSString_withNSString_(@"java.version", @"2.0"));
  if (v > 0) {
    return v;
  }
  return 2.0f;
}

jfloat OrgApacheCommonsLang3JavaVersion_toFloatVersionWithNSString_(NSString *value) {
  OrgApacheCommonsLang3JavaVersion_initialize();
  IOSObjectArray *toParse = [((NSString *) nil_chk(value)) java_split:@"\\."];
  if (((IOSObjectArray *) nil_chk(toParse))->size_ >= 2) {
    @try {
      return JavaLangFloat_parseFloatWithNSString_(JreStrcat("$C$", IOSObjectArray_Get(toParse, 0), '.', IOSObjectArray_Get(toParse, 1)));
    }
    @catch (JavaLangNumberFormatException *nfe) {
    }
  }
  return -1;
}

IOSObjectArray *OrgApacheCommonsLang3JavaVersion_values() {
  OrgApacheCommonsLang3JavaVersion_initialize();
  return [IOSObjectArray arrayWithObjects:OrgApacheCommonsLang3JavaVersion_values_ count:11 type:OrgApacheCommonsLang3JavaVersion_class_()];
}

OrgApacheCommonsLang3JavaVersion *OrgApacheCommonsLang3JavaVersion_valueOfWithNSString_(NSString *name) {
  OrgApacheCommonsLang3JavaVersion_initialize();
  for (int i = 0; i < 11; i++) {
    OrgApacheCommonsLang3JavaVersion *e = OrgApacheCommonsLang3JavaVersion_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgApacheCommonsLang3JavaVersion *OrgApacheCommonsLang3JavaVersion_fromOrdinal(NSUInteger ordinal) {
  OrgApacheCommonsLang3JavaVersion_initialize();
  if (ordinal >= 11) {
    return nil;
  }
  return OrgApacheCommonsLang3JavaVersion_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3JavaVersion)
