//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-sources.jar!org/apache/commons/lang3/exception/ContextedRuntimeException.java
//

#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "org/apache/commons/lang3/exception/ContextedRuntimeException.h"
#include "org/apache/commons/lang3/exception/DefaultExceptionContext.h"
#include "org/apache/commons/lang3/exception/ExceptionContext.h"

@interface OrgApacheCommonsLang3ExceptionContextedRuntimeException () {
 @public
  id<OrgApacheCommonsLang3ExceptionExceptionContext> exceptionContext_;
}

@end

J2OBJC_FIELD_SETTER(OrgApacheCommonsLang3ExceptionContextedRuntimeException, exceptionContext_, id<OrgApacheCommonsLang3ExceptionExceptionContext>)

inline jlong OrgApacheCommonsLang3ExceptionContextedRuntimeException_get_serialVersionUID();
#define OrgApacheCommonsLang3ExceptionContextedRuntimeException_serialVersionUID 20110706LL
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsLang3ExceptionContextedRuntimeException, serialVersionUID, jlong)

@implementation OrgApacheCommonsLang3ExceptionContextedRuntimeException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3ExceptionContextedRuntimeException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message {
  OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSException_(self, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause {
  OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_withNSException_(self, message, cause);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause
withOrgApacheCommonsLang3ExceptionExceptionContext:(id<OrgApacheCommonsLang3ExceptionExceptionContext>)context {
  OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_withNSException_withOrgApacheCommonsLang3ExceptionExceptionContext_(self, message, cause, context);
  return self;
}

- (OrgApacheCommonsLang3ExceptionContextedRuntimeException *)addContextValueWithNSString:(NSString *)label
                                                                                  withId:(id)value {
  (void) [((id<OrgApacheCommonsLang3ExceptionExceptionContext>) nil_chk(exceptionContext_)) addContextValueWithNSString:label withId:value];
  return self;
}

- (OrgApacheCommonsLang3ExceptionContextedRuntimeException *)setContextValueWithNSString:(NSString *)label
                                                                                  withId:(id)value {
  (void) [((id<OrgApacheCommonsLang3ExceptionExceptionContext>) nil_chk(exceptionContext_)) setContextValueWithNSString:label withId:value];
  return self;
}

- (id<JavaUtilList>)getContextValuesWithNSString:(NSString *)label {
  return [((id<OrgApacheCommonsLang3ExceptionExceptionContext>) nil_chk(self->exceptionContext_)) getContextValuesWithNSString:label];
}

- (id)getFirstContextValueWithNSString:(NSString *)label {
  return [((id<OrgApacheCommonsLang3ExceptionExceptionContext>) nil_chk(self->exceptionContext_)) getFirstContextValueWithNSString:label];
}

- (id<JavaUtilList>)getContextEntries {
  return [((id<OrgApacheCommonsLang3ExceptionExceptionContext>) nil_chk(self->exceptionContext_)) getContextEntries];
}

- (id<JavaUtilSet>)getContextLabels {
  return [((id<OrgApacheCommonsLang3ExceptionExceptionContext>) nil_chk(exceptionContext_)) getContextLabels];
}

- (NSString *)getMessage {
  return [self getFormattedExceptionMessageWithNSString:[super getMessage]];
}

- (NSString *)getRawMessage {
  return [super getMessage];
}

- (NSString *)getFormattedExceptionMessageWithNSString:(NSString *)baseMessage {
  return [((id<OrgApacheCommonsLang3ExceptionExceptionContext>) nil_chk(exceptionContext_)) getFormattedExceptionMessageWithNSString:baseMessage];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3ExceptionContextedRuntimeException;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LOrgApacheCommonsLang3ExceptionContextedRuntimeException;", 0x1, 6, 5, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 7, 0, -1, 8, -1, -1 },
    { NULL, "LNSObject;", 0x1, 9, 0, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 10, -1, -1 },
    { NULL, "LJavaUtilSet;", 0x1, -1, -1, -1, 11, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, 0, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithNSString:);
  methods[2].selector = @selector(initWithNSException:);
  methods[3].selector = @selector(initWithNSString:withNSException:);
  methods[4].selector = @selector(initWithNSString:withNSException:withOrgApacheCommonsLang3ExceptionExceptionContext:);
  methods[5].selector = @selector(addContextValueWithNSString:withId:);
  methods[6].selector = @selector(setContextValueWithNSString:withId:);
  methods[7].selector = @selector(getContextValuesWithNSString:);
  methods[8].selector = @selector(getFirstContextValueWithNSString:);
  methods[9].selector = @selector(getContextEntries);
  methods[10].selector = @selector(getContextLabels);
  methods[11].selector = @selector(getMessage);
  methods[12].selector = @selector(getRawMessage);
  methods[13].selector = @selector(getFormattedExceptionMessageWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = OrgApacheCommonsLang3ExceptionContextedRuntimeException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "exceptionContext_", "LOrgApacheCommonsLang3ExceptionExceptionContext;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSException;", "LNSString;LNSException;", "LNSString;LNSException;LOrgApacheCommonsLang3ExceptionExceptionContext;", "addContextValue", "LNSString;LNSObject;", "setContextValue", "getContextValues", "(Ljava/lang/String;)Ljava/util/List<Ljava/lang/Object;>;", "getFirstContextValue", "()Ljava/util/List<Lorg/apache/commons/lang3/tuple/Pair<Ljava/lang/String;Ljava/lang/Object;>;>;", "()Ljava/util/Set<Ljava/lang/String;>;", "getFormattedExceptionMessage" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3ExceptionContextedRuntimeException = { "ContextedRuntimeException", "org.apache.commons.lang3.exception", ptrTable, methods, fields, 7, 0x1, 14, 2, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3ExceptionContextedRuntimeException;
}

@end

void OrgApacheCommonsLang3ExceptionContextedRuntimeException_init(OrgApacheCommonsLang3ExceptionContextedRuntimeException *self) {
  JavaLangRuntimeException_init(self);
  self->exceptionContext_ = new_OrgApacheCommonsLang3ExceptionDefaultExceptionContext_init();
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *new_OrgApacheCommonsLang3ExceptionContextedRuntimeException_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, init)
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *create_OrgApacheCommonsLang3ExceptionContextedRuntimeException_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, init)
}

void OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_(OrgApacheCommonsLang3ExceptionContextedRuntimeException *self, NSString *message) {
  JavaLangRuntimeException_initWithNSString_(self, message);
  self->exceptionContext_ = new_OrgApacheCommonsLang3ExceptionDefaultExceptionContext_init();
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *new_OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_(NSString *message) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, initWithNSString_, message)
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *create_OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_(NSString *message) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, initWithNSString_, message)
}

void OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSException_(OrgApacheCommonsLang3ExceptionContextedRuntimeException *self, NSException *cause) {
  JavaLangRuntimeException_initWithNSException_(self, cause);
  self->exceptionContext_ = new_OrgApacheCommonsLang3ExceptionDefaultExceptionContext_init();
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *new_OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSException_(NSException *cause) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, initWithNSException_, cause)
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *create_OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSException_(NSException *cause) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, initWithNSException_, cause)
}

void OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_withNSException_(OrgApacheCommonsLang3ExceptionContextedRuntimeException *self, NSString *message, NSException *cause) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, message, cause);
  self->exceptionContext_ = new_OrgApacheCommonsLang3ExceptionDefaultExceptionContext_init();
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *new_OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, initWithNSString_withNSException_, message, cause)
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *create_OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, initWithNSString_withNSException_, message, cause)
}

void OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_withNSException_withOrgApacheCommonsLang3ExceptionExceptionContext_(OrgApacheCommonsLang3ExceptionContextedRuntimeException *self, NSString *message, NSException *cause, id<OrgApacheCommonsLang3ExceptionExceptionContext> context) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, message, cause);
  if (context == nil) {
    context = new_OrgApacheCommonsLang3ExceptionDefaultExceptionContext_init();
  }
  self->exceptionContext_ = context;
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *new_OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_withNSException_withOrgApacheCommonsLang3ExceptionExceptionContext_(NSString *message, NSException *cause, id<OrgApacheCommonsLang3ExceptionExceptionContext> context) {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, initWithNSString_withNSException_withOrgApacheCommonsLang3ExceptionExceptionContext_, message, cause, context)
}

OrgApacheCommonsLang3ExceptionContextedRuntimeException *create_OrgApacheCommonsLang3ExceptionContextedRuntimeException_initWithNSString_withNSException_withOrgApacheCommonsLang3ExceptionExceptionContext_(NSString *message, NSException *cause, id<OrgApacheCommonsLang3ExceptionExceptionContext> context) {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ExceptionContextedRuntimeException, initWithNSString_withNSException_withOrgApacheCommonsLang3ExceptionExceptionContext_, message, cause, context)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3ExceptionContextedRuntimeException)
