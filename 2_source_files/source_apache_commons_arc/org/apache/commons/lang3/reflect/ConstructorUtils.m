//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-sources.jar!org/apache/commons/lang3/reflect/ConstructorUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Modifier.h"
#include "org/apache/commons/lang3/ArrayUtils.h"
#include "org/apache/commons/lang3/ClassUtils.h"
#include "org/apache/commons/lang3/Validate.h"
#include "org/apache/commons/lang3/reflect/ConstructorUtils.h"
#include "org/apache/commons/lang3/reflect/MemberUtils.h"

@interface OrgApacheCommonsLang3ReflectConstructorUtils ()

+ (jboolean)isAccessibleWithIOSClass:(IOSClass *)type;

@end

__attribute__((unused)) static jboolean OrgApacheCommonsLang3ReflectConstructorUtils_isAccessibleWithIOSClass_(IOSClass *type);

@implementation OrgApacheCommonsLang3ReflectConstructorUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3ReflectConstructorUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id)invokeConstructorWithIOSClass:(IOSClass *)cls
                  withNSObjectArray:(IOSObjectArray *)args {
  return OrgApacheCommonsLang3ReflectConstructorUtils_invokeConstructorWithIOSClass_withNSObjectArray_(cls, args);
}

+ (id)invokeConstructorWithIOSClass:(IOSClass *)cls
                  withNSObjectArray:(IOSObjectArray *)args
                  withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgApacheCommonsLang3ReflectConstructorUtils_invokeConstructorWithIOSClass_withNSObjectArray_withIOSClassArray_(cls, args, parameterTypes);
}

+ (id)invokeExactConstructorWithIOSClass:(IOSClass *)cls
                       withNSObjectArray:(IOSObjectArray *)args {
  return OrgApacheCommonsLang3ReflectConstructorUtils_invokeExactConstructorWithIOSClass_withNSObjectArray_(cls, args);
}

+ (id)invokeExactConstructorWithIOSClass:(IOSClass *)cls
                       withNSObjectArray:(IOSObjectArray *)args
                       withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgApacheCommonsLang3ReflectConstructorUtils_invokeExactConstructorWithIOSClass_withNSObjectArray_withIOSClassArray_(cls, args, parameterTypes);
}

+ (JavaLangReflectConstructor *)getAccessibleConstructorWithIOSClass:(IOSClass *)cls
                                                   withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgApacheCommonsLang3ReflectConstructorUtils_getAccessibleConstructorWithIOSClass_withIOSClassArray_(cls, parameterTypes);
}

+ (JavaLangReflectConstructor *)getAccessibleConstructorWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)ctor {
  return OrgApacheCommonsLang3ReflectConstructorUtils_getAccessibleConstructorWithJavaLangReflectConstructor_(ctor);
}

+ (JavaLangReflectConstructor *)getMatchingAccessibleConstructorWithIOSClass:(IOSClass *)cls
                                                           withIOSClassArray:(IOSObjectArray *)parameterTypes {
  return OrgApacheCommonsLang3ReflectConstructorUtils_getMatchingAccessibleConstructorWithIOSClass_withIOSClassArray_(cls, parameterTypes);
}

+ (jboolean)isAccessibleWithIOSClass:(IOSClass *)type {
  return OrgApacheCommonsLang3ReflectConstructorUtils_isAccessibleWithIOSClass_(type);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x89, 0, 1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x9, 0, 4, 2, 5, -1, -1 },
    { NULL, "LNSObject;", 0x89, 6, 1, 2, 3, -1, -1 },
    { NULL, "LNSObject;", 0x9, 6, 4, 2, 5, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0x89, 7, 8, -1, 9, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0x9, 7, 10, -1, 11, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0x89, 12, 8, -1, 9, -1, -1 },
    { NULL, "Z", 0xa, 13, 14, -1, 15, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(invokeConstructorWithIOSClass:withNSObjectArray:);
  methods[2].selector = @selector(invokeConstructorWithIOSClass:withNSObjectArray:withIOSClassArray:);
  methods[3].selector = @selector(invokeExactConstructorWithIOSClass:withNSObjectArray:);
  methods[4].selector = @selector(invokeExactConstructorWithIOSClass:withNSObjectArray:withIOSClassArray:);
  methods[5].selector = @selector(getAccessibleConstructorWithIOSClass:withIOSClassArray:);
  methods[6].selector = @selector(getAccessibleConstructorWithJavaLangReflectConstructor:);
  methods[7].selector = @selector(getMatchingAccessibleConstructorWithIOSClass:withIOSClassArray:);
  methods[8].selector = @selector(isAccessibleWithIOSClass:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "invokeConstructor", "LIOSClass;[LNSObject;", "LJavaLangNoSuchMethodException;LJavaLangIllegalAccessException;LJavaLangReflectInvocationTargetException;LJavaLangInstantiationException;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;[Ljava/lang/Object;)TT;", "LIOSClass;[LNSObject;[LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;[Ljava/lang/Object;[Ljava/lang/Class<*>;)TT;", "invokeExactConstructor", "getAccessibleConstructor", "LIOSClass;[LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;[Ljava/lang/Class<*>;)Ljava/lang/reflect/Constructor<TT;>;", "LJavaLangReflectConstructor;", "<T:Ljava/lang/Object;>(Ljava/lang/reflect/Constructor<TT;>;)Ljava/lang/reflect/Constructor<TT;>;", "getMatchingAccessibleConstructor", "isAccessible", "LIOSClass;", "(Ljava/lang/Class<*>;)Z" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3ReflectConstructorUtils = { "ConstructorUtils", "org.apache.commons.lang3.reflect", ptrTable, methods, NULL, 7, 0x1, 9, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3ReflectConstructorUtils;
}

@end

void OrgApacheCommonsLang3ReflectConstructorUtils_init(OrgApacheCommonsLang3ReflectConstructorUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3ReflectConstructorUtils *new_OrgApacheCommonsLang3ReflectConstructorUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ReflectConstructorUtils, init)
}

OrgApacheCommonsLang3ReflectConstructorUtils *create_OrgApacheCommonsLang3ReflectConstructorUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ReflectConstructorUtils, init)
}

id OrgApacheCommonsLang3ReflectConstructorUtils_invokeConstructorWithIOSClass_withNSObjectArray_(IOSClass *cls, IOSObjectArray *args) {
  OrgApacheCommonsLang3ReflectConstructorUtils_initialize();
  args = OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_(args);
  IOSObjectArray *parameterTypes = OrgApacheCommonsLang3ClassUtils_toClassWithNSObjectArray_(args);
  return OrgApacheCommonsLang3ReflectConstructorUtils_invokeConstructorWithIOSClass_withNSObjectArray_withIOSClassArray_(cls, args, parameterTypes);
}

id OrgApacheCommonsLang3ReflectConstructorUtils_invokeConstructorWithIOSClass_withNSObjectArray_withIOSClassArray_(IOSClass *cls, IOSObjectArray *args, IOSObjectArray *parameterTypes) {
  OrgApacheCommonsLang3ReflectConstructorUtils_initialize();
  args = OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_(args);
  parameterTypes = OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithIOSClassArray_(parameterTypes);
  JavaLangReflectConstructor *ctor = OrgApacheCommonsLang3ReflectConstructorUtils_getMatchingAccessibleConstructorWithIOSClass_withIOSClassArray_(cls, parameterTypes);
  if (ctor == nil) {
    @throw new_JavaLangNoSuchMethodException_initWithNSString_(JreStrcat("$$", @"No such accessible constructor on object: ", [((IOSClass *) nil_chk(cls)) getName]));
  }
  return [ctor newInstanceWithNSObjectArray:args];
}

id OrgApacheCommonsLang3ReflectConstructorUtils_invokeExactConstructorWithIOSClass_withNSObjectArray_(IOSClass *cls, IOSObjectArray *args) {
  OrgApacheCommonsLang3ReflectConstructorUtils_initialize();
  args = OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_(args);
  IOSObjectArray *parameterTypes = OrgApacheCommonsLang3ClassUtils_toClassWithNSObjectArray_(args);
  return OrgApacheCommonsLang3ReflectConstructorUtils_invokeExactConstructorWithIOSClass_withNSObjectArray_withIOSClassArray_(cls, args, parameterTypes);
}

id OrgApacheCommonsLang3ReflectConstructorUtils_invokeExactConstructorWithIOSClass_withNSObjectArray_withIOSClassArray_(IOSClass *cls, IOSObjectArray *args, IOSObjectArray *parameterTypes) {
  OrgApacheCommonsLang3ReflectConstructorUtils_initialize();
  args = OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithNSObjectArray_(args);
  parameterTypes = OrgApacheCommonsLang3ArrayUtils_nullToEmptyWithIOSClassArray_(parameterTypes);
  JavaLangReflectConstructor *ctor = OrgApacheCommonsLang3ReflectConstructorUtils_getAccessibleConstructorWithIOSClass_withIOSClassArray_(cls, parameterTypes);
  if (ctor == nil) {
    @throw new_JavaLangNoSuchMethodException_initWithNSString_(JreStrcat("$$", @"No such accessible constructor on object: ", [((IOSClass *) nil_chk(cls)) getName]));
  }
  return [ctor newInstanceWithNSObjectArray:args];
}

JavaLangReflectConstructor *OrgApacheCommonsLang3ReflectConstructorUtils_getAccessibleConstructorWithIOSClass_withIOSClassArray_(IOSClass *cls, IOSObjectArray *parameterTypes) {
  OrgApacheCommonsLang3ReflectConstructorUtils_initialize();
  (void) OrgApacheCommonsLang3Validate_notNullWithId_withNSString_withNSObjectArray_(cls, @"class cannot be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  @try {
    return OrgApacheCommonsLang3ReflectConstructorUtils_getAccessibleConstructorWithJavaLangReflectConstructor_([((IOSClass *) nil_chk(cls)) getConstructor:parameterTypes]);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    return nil;
  }
}

JavaLangReflectConstructor *OrgApacheCommonsLang3ReflectConstructorUtils_getAccessibleConstructorWithJavaLangReflectConstructor_(JavaLangReflectConstructor *ctor) {
  OrgApacheCommonsLang3ReflectConstructorUtils_initialize();
  (void) OrgApacheCommonsLang3Validate_notNullWithId_withNSString_withNSObjectArray_(ctor, @"constructor cannot be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  return OrgApacheCommonsLang3ReflectMemberUtils_isAccessibleWithJavaLangReflectMember_(ctor) && OrgApacheCommonsLang3ReflectConstructorUtils_isAccessibleWithIOSClass_([((JavaLangReflectConstructor *) nil_chk(ctor)) getDeclaringClass]) ? ctor : nil;
}

JavaLangReflectConstructor *OrgApacheCommonsLang3ReflectConstructorUtils_getMatchingAccessibleConstructorWithIOSClass_withIOSClassArray_(IOSClass *cls, IOSObjectArray *parameterTypes) {
  OrgApacheCommonsLang3ReflectConstructorUtils_initialize();
  (void) OrgApacheCommonsLang3Validate_notNullWithId_withNSString_withNSObjectArray_(cls, @"class cannot be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  @try {
    JavaLangReflectConstructor *ctor = [((IOSClass *) nil_chk(cls)) getConstructor:parameterTypes];
    OrgApacheCommonsLang3ReflectMemberUtils_setAccessibleWorkaroundWithJavaLangReflectAccessibleObject_(ctor);
    return ctor;
  }
  @catch (JavaLangNoSuchMethodException *e) {
  }
  JavaLangReflectConstructor *result = nil;
  IOSObjectArray *ctors = [cls getConstructors];
  {
    IOSObjectArray *a__ = ctors;
    JavaLangReflectConstructor * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectConstructor * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectConstructor *ctor = *b__++;
      if (OrgApacheCommonsLang3ClassUtils_isAssignableWithIOSClassArray_withIOSClassArray_withBoolean_(parameterTypes, [((JavaLangReflectConstructor *) nil_chk(ctor)) getParameterTypes], true)) {
        ctor = OrgApacheCommonsLang3ReflectConstructorUtils_getAccessibleConstructorWithJavaLangReflectConstructor_(ctor);
        if (ctor != nil) {
          OrgApacheCommonsLang3ReflectMemberUtils_setAccessibleWorkaroundWithJavaLangReflectAccessibleObject_(ctor);
          if (result == nil || OrgApacheCommonsLang3ReflectMemberUtils_compareParameterTypesWithIOSClassArray_withIOSClassArray_withIOSClassArray_([ctor getParameterTypes], [result getParameterTypes], parameterTypes) < 0) {
            JavaLangReflectConstructor *constructor = ctor;
            result = constructor;
          }
        }
      }
    }
  }
  return result;
}

jboolean OrgApacheCommonsLang3ReflectConstructorUtils_isAccessibleWithIOSClass_(IOSClass *type) {
  OrgApacheCommonsLang3ReflectConstructorUtils_initialize();
  IOSClass *cls = type;
  while (cls != nil) {
    if (!JavaLangReflectModifier_isPublicWithInt_([cls getModifiers])) {
      return false;
    }
    cls = [cls getEnclosingClass];
  }
  return true;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3ReflectConstructorUtils)
