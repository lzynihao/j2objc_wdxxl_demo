//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-codec-1.10-sources.jar!org/apache/commons/codec/digest/HmacUtils.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "java/io/InputStream.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/security/InvalidKeyException.h"
#include "java/security/NoSuchAlgorithmException.h"
#include "javax/crypto/Mac.h"
#include "javax/crypto/spec/SecretKeySpec.h"
#include "org/apache/commons/codec/binary/Hex.h"
#include "org/apache/commons/codec/binary/StringUtils.h"
#include "org/apache/commons/codec/digest/HmacAlgorithms.h"
#include "org/apache/commons/codec/digest/HmacUtils.h"

inline jint OrgApacheCommonsCodecDigestHmacUtils_get_STREAM_BUFFER_LENGTH();
#define OrgApacheCommonsCodecDigestHmacUtils_STREAM_BUFFER_LENGTH 1024
J2OBJC_STATIC_FIELD_CONSTANT(OrgApacheCommonsCodecDigestHmacUtils, STREAM_BUFFER_LENGTH, jint)

@implementation OrgApacheCommonsCodecDigestHmacUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsCodecDigestHmacUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaxCryptoMac *)getHmacMd5WithByteArray:(IOSByteArray *)key {
  return OrgApacheCommonsCodecDigestHmacUtils_getHmacMd5WithByteArray_(key);
}

+ (JavaxCryptoMac *)getHmacSha1WithByteArray:(IOSByteArray *)key {
  return OrgApacheCommonsCodecDigestHmacUtils_getHmacSha1WithByteArray_(key);
}

+ (JavaxCryptoMac *)getHmacSha256WithByteArray:(IOSByteArray *)key {
  return OrgApacheCommonsCodecDigestHmacUtils_getHmacSha256WithByteArray_(key);
}

+ (JavaxCryptoMac *)getHmacSha384WithByteArray:(IOSByteArray *)key {
  return OrgApacheCommonsCodecDigestHmacUtils_getHmacSha384WithByteArray_(key);
}

+ (JavaxCryptoMac *)getHmacSha512WithByteArray:(IOSByteArray *)key {
  return OrgApacheCommonsCodecDigestHmacUtils_getHmacSha512WithByteArray_(key);
}

+ (JavaxCryptoMac *)getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms:(OrgApacheCommonsCodecDigestHmacAlgorithms *)algorithm
                                                                     withByteArray:(IOSByteArray *)key {
  return OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms_withByteArray_(algorithm, key);
}

+ (JavaxCryptoMac *)getInitializedMacWithNSString:(NSString *)algorithm
                                    withByteArray:(IOSByteArray *)key {
  return OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithNSString_withByteArray_(algorithm, key);
}

+ (IOSByteArray *)hmacMd5WithByteArray:(IOSByteArray *)key
                         withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithByteArray_withByteArray_(key, valueToDigest);
}

+ (IOSByteArray *)hmacMd5WithByteArray:(IOSByteArray *)key
                 withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (IOSByteArray *)hmacMd5WithNSString:(NSString *)key
                         withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithNSString_withNSString_(key, valueToDigest);
}

+ (NSString *)hmacMd5HexWithByteArray:(IOSByteArray *)key
                        withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacMd5HexWithByteArray_withByteArray_(key, valueToDigest);
}

+ (NSString *)hmacMd5HexWithByteArray:(IOSByteArray *)key
                withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacMd5HexWithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (NSString *)hmacMd5HexWithNSString:(NSString *)key
                        withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacMd5HexWithNSString_withNSString_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha1WithByteArray:(IOSByteArray *)key
                          withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithByteArray_withByteArray_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha1WithByteArray:(IOSByteArray *)key
                  withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha1WithNSString:(NSString *)key
                          withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithNSString_withNSString_(key, valueToDigest);
}

+ (NSString *)hmacSha1HexWithByteArray:(IOSByteArray *)key
                         withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha1HexWithByteArray_withByteArray_(key, valueToDigest);
}

+ (NSString *)hmacSha1HexWithByteArray:(IOSByteArray *)key
                 withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha1HexWithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (NSString *)hmacSha1HexWithNSString:(NSString *)key
                         withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha1HexWithNSString_withNSString_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha256WithByteArray:(IOSByteArray *)key
                            withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithByteArray_withByteArray_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha256WithByteArray:(IOSByteArray *)key
                    withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha256WithNSString:(NSString *)key
                            withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithNSString_withNSString_(key, valueToDigest);
}

+ (NSString *)hmacSha256HexWithByteArray:(IOSByteArray *)key
                           withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha256HexWithByteArray_withByteArray_(key, valueToDigest);
}

+ (NSString *)hmacSha256HexWithByteArray:(IOSByteArray *)key
                   withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha256HexWithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (NSString *)hmacSha256HexWithNSString:(NSString *)key
                           withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha256HexWithNSString_withNSString_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha384WithByteArray:(IOSByteArray *)key
                            withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithByteArray_withByteArray_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha384WithByteArray:(IOSByteArray *)key
                    withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha384WithNSString:(NSString *)key
                            withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithNSString_withNSString_(key, valueToDigest);
}

+ (NSString *)hmacSha384HexWithByteArray:(IOSByteArray *)key
                           withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha384HexWithByteArray_withByteArray_(key, valueToDigest);
}

+ (NSString *)hmacSha384HexWithByteArray:(IOSByteArray *)key
                   withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha384HexWithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (NSString *)hmacSha384HexWithNSString:(NSString *)key
                           withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha384HexWithNSString_withNSString_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha512WithByteArray:(IOSByteArray *)key
                            withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithByteArray_withByteArray_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha512WithByteArray:(IOSByteArray *)key
                    withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (IOSByteArray *)hmacSha512WithNSString:(NSString *)key
                            withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithNSString_withNSString_(key, valueToDigest);
}

+ (NSString *)hmacSha512HexWithByteArray:(IOSByteArray *)key
                           withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha512HexWithByteArray_withByteArray_(key, valueToDigest);
}

+ (NSString *)hmacSha512HexWithByteArray:(IOSByteArray *)key
                   withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha512HexWithByteArray_withJavaIoInputStream_(key, valueToDigest);
}

+ (NSString *)hmacSha512HexWithNSString:(NSString *)key
                           withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha512HexWithNSString_withNSString_(key, valueToDigest);
}

+ (JavaxCryptoMac *)updateHmacWithJavaxCryptoMac:(JavaxCryptoMac *)mac
                                   withByteArray:(IOSByteArray *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withByteArray_(mac, valueToDigest);
}

+ (JavaxCryptoMac *)updateHmacWithJavaxCryptoMac:(JavaxCryptoMac *)mac
                           withJavaIoInputStream:(JavaIoInputStream *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withJavaIoInputStream_(mac, valueToDigest);
}

+ (JavaxCryptoMac *)updateHmacWithJavaxCryptoMac:(JavaxCryptoMac *)mac
                                    withNSString:(NSString *)valueToDigest {
  return OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withNSString_(mac, valueToDigest);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 3, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 4, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 5, 1, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 6, 7, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 6, 8, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 9, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 9, 11, 12, -1, -1, -1 },
    { NULL, "[B", 0x9, 9, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 14, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 14, 11, 12, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 14, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 15, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 15, 11, 12, -1, -1, -1 },
    { NULL, "[B", 0x9, 15, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 16, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 16, 11, 12, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 16, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 17, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 17, 11, 12, -1, -1, -1 },
    { NULL, "[B", 0x9, 17, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 18, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 18, 11, 12, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 18, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 19, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 19, 11, 12, -1, -1, -1 },
    { NULL, "[B", 0x9, 19, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 20, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 20, 11, 12, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 20, 13, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 21, 10, -1, -1, -1, -1 },
    { NULL, "[B", 0x9, 21, 11, 12, -1, -1, -1 },
    { NULL, "[B", 0x9, 21, 13, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 22, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 22, 11, 12, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 22, 13, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 23, 24, -1, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 23, 25, 12, -1, -1, -1 },
    { NULL, "LJavaxCryptoMac;", 0x9, 23, 26, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getHmacMd5WithByteArray:);
  methods[2].selector = @selector(getHmacSha1WithByteArray:);
  methods[3].selector = @selector(getHmacSha256WithByteArray:);
  methods[4].selector = @selector(getHmacSha384WithByteArray:);
  methods[5].selector = @selector(getHmacSha512WithByteArray:);
  methods[6].selector = @selector(getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms:withByteArray:);
  methods[7].selector = @selector(getInitializedMacWithNSString:withByteArray:);
  methods[8].selector = @selector(hmacMd5WithByteArray:withByteArray:);
  methods[9].selector = @selector(hmacMd5WithByteArray:withJavaIoInputStream:);
  methods[10].selector = @selector(hmacMd5WithNSString:withNSString:);
  methods[11].selector = @selector(hmacMd5HexWithByteArray:withByteArray:);
  methods[12].selector = @selector(hmacMd5HexWithByteArray:withJavaIoInputStream:);
  methods[13].selector = @selector(hmacMd5HexWithNSString:withNSString:);
  methods[14].selector = @selector(hmacSha1WithByteArray:withByteArray:);
  methods[15].selector = @selector(hmacSha1WithByteArray:withJavaIoInputStream:);
  methods[16].selector = @selector(hmacSha1WithNSString:withNSString:);
  methods[17].selector = @selector(hmacSha1HexWithByteArray:withByteArray:);
  methods[18].selector = @selector(hmacSha1HexWithByteArray:withJavaIoInputStream:);
  methods[19].selector = @selector(hmacSha1HexWithNSString:withNSString:);
  methods[20].selector = @selector(hmacSha256WithByteArray:withByteArray:);
  methods[21].selector = @selector(hmacSha256WithByteArray:withJavaIoInputStream:);
  methods[22].selector = @selector(hmacSha256WithNSString:withNSString:);
  methods[23].selector = @selector(hmacSha256HexWithByteArray:withByteArray:);
  methods[24].selector = @selector(hmacSha256HexWithByteArray:withJavaIoInputStream:);
  methods[25].selector = @selector(hmacSha256HexWithNSString:withNSString:);
  methods[26].selector = @selector(hmacSha384WithByteArray:withByteArray:);
  methods[27].selector = @selector(hmacSha384WithByteArray:withJavaIoInputStream:);
  methods[28].selector = @selector(hmacSha384WithNSString:withNSString:);
  methods[29].selector = @selector(hmacSha384HexWithByteArray:withByteArray:);
  methods[30].selector = @selector(hmacSha384HexWithByteArray:withJavaIoInputStream:);
  methods[31].selector = @selector(hmacSha384HexWithNSString:withNSString:);
  methods[32].selector = @selector(hmacSha512WithByteArray:withByteArray:);
  methods[33].selector = @selector(hmacSha512WithByteArray:withJavaIoInputStream:);
  methods[34].selector = @selector(hmacSha512WithNSString:withNSString:);
  methods[35].selector = @selector(hmacSha512HexWithByteArray:withByteArray:);
  methods[36].selector = @selector(hmacSha512HexWithByteArray:withJavaIoInputStream:);
  methods[37].selector = @selector(hmacSha512HexWithNSString:withNSString:);
  methods[38].selector = @selector(updateHmacWithJavaxCryptoMac:withByteArray:);
  methods[39].selector = @selector(updateHmacWithJavaxCryptoMac:withJavaIoInputStream:);
  methods[40].selector = @selector(updateHmacWithJavaxCryptoMac:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "STREAM_BUFFER_LENGTH", "I", .constantValue.asInt = OrgApacheCommonsCodecDigestHmacUtils_STREAM_BUFFER_LENGTH, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "getHmacMd5", "[B", "getHmacSha1", "getHmacSha256", "getHmacSha384", "getHmacSha512", "getInitializedMac", "LOrgApacheCommonsCodecDigestHmacAlgorithms;[B", "LNSString;[B", "hmacMd5", "[B[B", "[BLJavaIoInputStream;", "LJavaIoIOException;", "LNSString;LNSString;", "hmacMd5Hex", "hmacSha1", "hmacSha1Hex", "hmacSha256", "hmacSha256Hex", "hmacSha384", "hmacSha384Hex", "hmacSha512", "hmacSha512Hex", "updateHmac", "LJavaxCryptoMac;[B", "LJavaxCryptoMac;LJavaIoInputStream;", "LJavaxCryptoMac;LNSString;" };
  static const J2ObjcClassInfo _OrgApacheCommonsCodecDigestHmacUtils = { "HmacUtils", "org.apache.commons.codec.digest", ptrTable, methods, fields, 7, 0x11, 41, 1, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsCodecDigestHmacUtils;
}

@end

void OrgApacheCommonsCodecDigestHmacUtils_init(OrgApacheCommonsCodecDigestHmacUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsCodecDigestHmacUtils *new_OrgApacheCommonsCodecDigestHmacUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsCodecDigestHmacUtils, init)
}

OrgApacheCommonsCodecDigestHmacUtils *create_OrgApacheCommonsCodecDigestHmacUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsCodecDigestHmacUtils, init)
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_getHmacMd5WithByteArray_(IOSByteArray *key) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms_withByteArray_(JreLoadEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_MD5), key);
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_getHmacSha1WithByteArray_(IOSByteArray *key) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms_withByteArray_(JreLoadEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_1), key);
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_getHmacSha256WithByteArray_(IOSByteArray *key) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms_withByteArray_(JreLoadEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_256), key);
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_getHmacSha384WithByteArray_(IOSByteArray *key) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms_withByteArray_(JreLoadEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_384), key);
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_getHmacSha512WithByteArray_(IOSByteArray *key) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms_withByteArray_(JreLoadEnum(OrgApacheCommonsCodecDigestHmacAlgorithms, HMAC_SHA_512), key);
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithOrgApacheCommonsCodecDigestHmacAlgorithms_withByteArray_(OrgApacheCommonsCodecDigestHmacAlgorithms *algorithm, IOSByteArray *key) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithNSString_withByteArray_([((OrgApacheCommonsCodecDigestHmacAlgorithms *) nil_chk(algorithm)) description], key);
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_getInitializedMacWithNSString_withByteArray_(NSString *algorithm, IOSByteArray *key) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  if (key == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Null key");
  }
  @try {
    JavaxCryptoSpecSecretKeySpec *keySpec = new_JavaxCryptoSpecSecretKeySpec_initWithByteArray_withNSString_(key, algorithm);
    JavaxCryptoMac *mac = JavaxCryptoMac_getInstanceWithNSString_(algorithm);
    [((JavaxCryptoMac *) nil_chk(mac)) init__WithJavaSecurityKey:keySpec];
    return mac;
  }
  @catch (JavaSecurityNoSuchAlgorithmException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(e);
  }
  @catch (JavaSecurityInvalidKeyException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(e);
  }
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  @try {
    return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_getHmacMd5WithByteArray_(key))) doFinalWithByteArray:valueToDigest];
  }
  @catch (JavaLangIllegalStateException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(e);
  }
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withJavaIoInputStream_(OrgApacheCommonsCodecDigestHmacUtils_getHmacMd5WithByteArray_(key), valueToDigest))) doFinal];
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithByteArray_withByteArray_(OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(key), OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacMd5HexWithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithByteArray_withByteArray_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacMd5HexWithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithByteArray_withJavaIoInputStream_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacMd5HexWithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacMd5WithNSString_withNSString_(key, valueToDigest));
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  @try {
    return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_getHmacSha1WithByteArray_(key))) doFinalWithByteArray:valueToDigest];
  }
  @catch (JavaLangIllegalStateException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(e);
  }
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withJavaIoInputStream_(OrgApacheCommonsCodecDigestHmacUtils_getHmacSha1WithByteArray_(key), valueToDigest))) doFinal];
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithByteArray_withByteArray_(OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(key), OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha1HexWithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithByteArray_withByteArray_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha1HexWithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithByteArray_withJavaIoInputStream_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha1HexWithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha1WithNSString_withNSString_(key, valueToDigest));
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  @try {
    return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_getHmacSha256WithByteArray_(key))) doFinalWithByteArray:valueToDigest];
  }
  @catch (JavaLangIllegalStateException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(e);
  }
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withJavaIoInputStream_(OrgApacheCommonsCodecDigestHmacUtils_getHmacSha256WithByteArray_(key), valueToDigest))) doFinal];
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithByteArray_withByteArray_(OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(key), OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha256HexWithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithByteArray_withByteArray_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha256HexWithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithByteArray_withJavaIoInputStream_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha256HexWithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha256WithNSString_withNSString_(key, valueToDigest));
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  @try {
    return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_getHmacSha384WithByteArray_(key))) doFinalWithByteArray:valueToDigest];
  }
  @catch (JavaLangIllegalStateException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(e);
  }
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withJavaIoInputStream_(OrgApacheCommonsCodecDigestHmacUtils_getHmacSha384WithByteArray_(key), valueToDigest))) doFinal];
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithByteArray_withByteArray_(OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(key), OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha384HexWithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithByteArray_withByteArray_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha384HexWithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithByteArray_withJavaIoInputStream_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha384HexWithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha384WithNSString_withNSString_(key, valueToDigest));
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  @try {
    return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_getHmacSha512WithByteArray_(key))) doFinalWithByteArray:valueToDigest];
  }
  @catch (JavaLangIllegalStateException *e) {
    @throw new_JavaLangIllegalArgumentException_initWithNSException_(e);
  }
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return [((JavaxCryptoMac *) nil_chk(OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withJavaIoInputStream_(OrgApacheCommonsCodecDigestHmacUtils_getHmacSha512WithByteArray_(key), valueToDigest))) doFinal];
}

IOSByteArray *OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithByteArray_withByteArray_(OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(key), OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha512HexWithByteArray_withByteArray_(IOSByteArray *key, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithByteArray_withByteArray_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha512HexWithByteArray_withJavaIoInputStream_(IOSByteArray *key, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithByteArray_withJavaIoInputStream_(key, valueToDigest));
}

NSString *OrgApacheCommonsCodecDigestHmacUtils_hmacSha512HexWithNSString_withNSString_(NSString *key, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  return OrgApacheCommonsCodecBinaryHex_encodeHexStringWithByteArray_(OrgApacheCommonsCodecDigestHmacUtils_hmacSha512WithNSString_withNSString_(key, valueToDigest));
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withByteArray_(JavaxCryptoMac *mac, IOSByteArray *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  [((JavaxCryptoMac *) nil_chk(mac)) reset];
  [mac updateWithByteArray:valueToDigest];
  return mac;
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withJavaIoInputStream_(JavaxCryptoMac *mac, JavaIoInputStream *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  [((JavaxCryptoMac *) nil_chk(mac)) reset];
  IOSByteArray *buffer = [IOSByteArray newArrayWithLength:OrgApacheCommonsCodecDigestHmacUtils_STREAM_BUFFER_LENGTH];
  jint read = [((JavaIoInputStream *) nil_chk(valueToDigest)) readWithByteArray:buffer withInt:0 withInt:OrgApacheCommonsCodecDigestHmacUtils_STREAM_BUFFER_LENGTH];
  while (read > -1) {
    [mac updateWithByteArray:buffer withInt:0 withInt:read];
    read = [valueToDigest readWithByteArray:buffer withInt:0 withInt:OrgApacheCommonsCodecDigestHmacUtils_STREAM_BUFFER_LENGTH];
  }
  return mac;
}

JavaxCryptoMac *OrgApacheCommonsCodecDigestHmacUtils_updateHmacWithJavaxCryptoMac_withNSString_(JavaxCryptoMac *mac, NSString *valueToDigest) {
  OrgApacheCommonsCodecDigestHmacUtils_initialize();
  [((JavaxCryptoMac *) nil_chk(mac)) reset];
  [mac updateWithByteArray:OrgApacheCommonsCodecBinaryStringUtils_getBytesUtf8WithNSString_(valueToDigest)];
  return mac;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCodecDigestHmacUtils)
