//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/nodes/FormElement.java
//

#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/jsoup/Connection.h"
#include "org/jsoup/Jsoup.h"
#include "org/jsoup/helper/HttpConnection.h"
#include "org/jsoup/helper/Validate.h"
#include "org/jsoup/nodes/Attributes.h"
#include "org/jsoup/nodes/Element.h"
#include "org/jsoup/nodes/FormElement.h"
#include "org/jsoup/parser/Tag.h"
#include "org/jsoup/select/Elements.h"

@interface OrgJsoupNodesFormElement () {
 @public
  OrgJsoupSelectElements *elements_;
}

@end

J2OBJC_FIELD_SETTER(OrgJsoupNodesFormElement, elements_, OrgJsoupSelectElements *)

@implementation OrgJsoupNodesFormElement

- (instancetype)initWithOrgJsoupParserTag:(OrgJsoupParserTag *)tag
                             withNSString:(NSString *)baseUri
              withOrgJsoupNodesAttributes:(OrgJsoupNodesAttributes *)attributes {
  OrgJsoupNodesFormElement_initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_(self, tag, baseUri, attributes);
  return self;
}

- (OrgJsoupSelectElements *)elements {
  return elements_;
}

- (OrgJsoupNodesFormElement *)addElementWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)element {
  [((OrgJsoupSelectElements *) nil_chk(elements_)) addWithId:element];
  return self;
}

- (id<OrgJsoupConnection>)submit {
  NSString *action = [self hasAttrWithNSString:@"action"] ? [self absUrlWithNSString:@"action"] : [self baseUri];
  OrgJsoupHelperValidate_notEmptyWithNSString_withNSString_(action, @"Could not determine a form action URL for submit. Ensure you set a base URI when parsing.");
  OrgJsoupConnection_Method *method = [((NSString *) nil_chk([((NSString *) nil_chk([self attrWithNSString:@"method"])) uppercaseString])) isEqual:@"POST"] ? JreLoadEnum(OrgJsoupConnection_Method, POST) : JreLoadEnum(OrgJsoupConnection_Method, GET);
  return [((id<OrgJsoupConnection>) nil_chk([((id<OrgJsoupConnection>) nil_chk(OrgJsoupJsoup_connectWithNSString_(action))) dataWithJavaUtilCollection:[self formData]])) methodWithOrgJsoupConnection_Method:method];
}

- (id<JavaUtilList>)formData {
  JavaUtilArrayList *data = new_JavaUtilArrayList_init();
  for (OrgJsoupNodesElement * __strong el in nil_chk(elements_)) {
    if (![((OrgJsoupParserTag *) nil_chk([((OrgJsoupNodesElement *) nil_chk(el)) tag])) isFormSubmittable]) continue;
    if ([el hasAttrWithNSString:@"disabled"]) continue;
    NSString *name = [el attrWithNSString:@"name"];
    if ([((NSString *) nil_chk(name)) java_length] == 0) continue;
    NSString *type = [el attrWithNSString:@"type"];
    if ([@"select" isEqual:[el tagName]]) {
      OrgJsoupSelectElements *options = [el selectWithNSString:@"option[selected]"];
      jboolean set = false;
      for (OrgJsoupNodesElement * __strong option in nil_chk(options)) {
        [data addWithId:OrgJsoupHelperHttpConnection_KeyVal_createWithNSString_withNSString_(name, [((OrgJsoupNodesElement *) nil_chk(option)) val])];
        set = true;
      }
      if (!set) {
        OrgJsoupNodesElement *option = [((OrgJsoupSelectElements *) nil_chk([el selectWithNSString:@"option"])) first];
        if (option != nil) [data addWithId:OrgJsoupHelperHttpConnection_KeyVal_createWithNSString_withNSString_(name, [option val])];
      }
    }
    else if ([@"checkbox" java_equalsIgnoreCase:type] || [@"radio" java_equalsIgnoreCase:type]) {
      if ([el hasAttrWithNSString:@"checked"]) {
        NSString *val = [((NSString *) nil_chk([el val])) java_length] > 0 ? [el val] : @"on";
        [data addWithId:OrgJsoupHelperHttpConnection_KeyVal_createWithNSString_withNSString_(name, val)];
      }
    }
    else {
      [data addWithId:OrgJsoupHelperHttpConnection_KeyVal_createWithNSString_withNSString_(name, [el val])];
    }
  }
  return data;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupSelectElements;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesFormElement;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupConnection;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithOrgJsoupParserTag:withNSString:withOrgJsoupNodesAttributes:);
  methods[1].selector = @selector(elements);
  methods[2].selector = @selector(addElementWithOrgJsoupNodesElement:);
  methods[3].selector = @selector(submit);
  methods[4].selector = @selector(formData);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "elements_", "LOrgJsoupSelectElements;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LOrgJsoupParserTag;LNSString;LOrgJsoupNodesAttributes;", "addElement", "LOrgJsoupNodesElement;", "()Ljava/util/List<Lorg/jsoup/Connection$KeyVal;>;" };
  static const J2ObjcClassInfo _OrgJsoupNodesFormElement = { "FormElement", "org.jsoup.nodes", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, -1 };
  return &_OrgJsoupNodesFormElement;
}

@end

void OrgJsoupNodesFormElement_initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_(OrgJsoupNodesFormElement *self, OrgJsoupParserTag *tag, NSString *baseUri, OrgJsoupNodesAttributes *attributes) {
  OrgJsoupNodesElement_initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_(self, tag, baseUri, attributes);
  self->elements_ = new_OrgJsoupSelectElements_init();
}

OrgJsoupNodesFormElement *new_OrgJsoupNodesFormElement_initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_(OrgJsoupParserTag *tag, NSString *baseUri, OrgJsoupNodesAttributes *attributes) {
  J2OBJC_NEW_IMPL(OrgJsoupNodesFormElement, initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_, tag, baseUri, attributes)
}

OrgJsoupNodesFormElement *create_OrgJsoupNodesFormElement_initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_(OrgJsoupParserTag *tag, NSString *baseUri, OrgJsoupNodesAttributes *attributes) {
  J2OBJC_CREATE_IMPL(OrgJsoupNodesFormElement, initWithOrgJsoupParserTag_withNSString_withOrgJsoupNodesAttributes_, tag, baseUri, attributes)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupNodesFormElement)
