//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-codec-1.10-sources.jar!org/apache/commons/codec/Charsets.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"
#include "java/nio/charset/Charset.h"
#include "org/apache/commons/codec/CharEncoding.h"
#include "org/apache/commons/codec/Charsets.h"

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$4(void);

__attribute__((unused)) static IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$5(void);

J2OBJC_INITIALIZED_DEFN(OrgApacheCommonsCodecCharsets)

JavaNioCharsetCharset *OrgApacheCommonsCodecCharsets_ISO_8859_1;
JavaNioCharsetCharset *OrgApacheCommonsCodecCharsets_US_ASCII;
JavaNioCharsetCharset *OrgApacheCommonsCodecCharsets_UTF_16;
JavaNioCharsetCharset *OrgApacheCommonsCodecCharsets_UTF_16BE;
JavaNioCharsetCharset *OrgApacheCommonsCodecCharsets_UTF_16LE;
JavaNioCharsetCharset *OrgApacheCommonsCodecCharsets_UTF_8;

@implementation OrgApacheCommonsCodecCharsets

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsCodecCharsets_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaNioCharsetCharset *)toCharsetWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  return OrgApacheCommonsCodecCharsets_toCharsetWithJavaNioCharsetCharset_(charset);
}

+ (JavaNioCharsetCharset *)toCharsetWithNSString:(NSString *)charset {
  return OrgApacheCommonsCodecCharsets_toCharsetWithNSString_(charset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaNioCharsetCharset;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaNioCharsetCharset;", 0x9, 0, 2, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(toCharsetWithJavaNioCharsetCharset:);
  methods[2].selector = @selector(toCharsetWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ISO_8859_1", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x19, -1, 3, -1, 4 },
    { "US_ASCII", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x19, -1, 5, -1, 6 },
    { "UTF_16", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x19, -1, 7, -1, 8 },
    { "UTF_16BE", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x19, -1, 9, -1, 10 },
    { "UTF_16LE", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x19, -1, 11, -1, 12 },
    { "UTF_8", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x19, -1, 13, -1, 14 },
  };
  static const void *ptrTable[] = { "toCharset", "LJavaNioCharsetCharset;", "LNSString;", &OrgApacheCommonsCodecCharsets_ISO_8859_1, (void *)&OrgApacheCommonsCodecCharsets__Annotations$0, &OrgApacheCommonsCodecCharsets_US_ASCII, (void *)&OrgApacheCommonsCodecCharsets__Annotations$1, &OrgApacheCommonsCodecCharsets_UTF_16, (void *)&OrgApacheCommonsCodecCharsets__Annotations$2, &OrgApacheCommonsCodecCharsets_UTF_16BE, (void *)&OrgApacheCommonsCodecCharsets__Annotations$3, &OrgApacheCommonsCodecCharsets_UTF_16LE, (void *)&OrgApacheCommonsCodecCharsets__Annotations$4, &OrgApacheCommonsCodecCharsets_UTF_8, (void *)&OrgApacheCommonsCodecCharsets__Annotations$5 };
  static const J2ObjcClassInfo _OrgApacheCommonsCodecCharsets = { "Charsets", "org.apache.commons.codec", ptrTable, methods, fields, 7, 0x1, 3, 6, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsCodecCharsets;
}

+ (void)initialize {
  if (self == [OrgApacheCommonsCodecCharsets class]) {
    OrgApacheCommonsCodecCharsets_ISO_8859_1 = JavaNioCharsetCharset_forNameWithNSString_(OrgApacheCommonsCodecCharEncoding_ISO_8859_1);
    OrgApacheCommonsCodecCharsets_US_ASCII = JavaNioCharsetCharset_forNameWithNSString_(OrgApacheCommonsCodecCharEncoding_US_ASCII);
    OrgApacheCommonsCodecCharsets_UTF_16 = JavaNioCharsetCharset_forNameWithNSString_(OrgApacheCommonsCodecCharEncoding_UTF_16);
    OrgApacheCommonsCodecCharsets_UTF_16BE = JavaNioCharsetCharset_forNameWithNSString_(OrgApacheCommonsCodecCharEncoding_UTF_16BE);
    OrgApacheCommonsCodecCharsets_UTF_16LE = JavaNioCharsetCharset_forNameWithNSString_(OrgApacheCommonsCodecCharEncoding_UTF_16LE);
    OrgApacheCommonsCodecCharsets_UTF_8 = JavaNioCharsetCharset_forNameWithNSString_(OrgApacheCommonsCodecCharEncoding_UTF_8);
    J2OBJC_SET_INITIALIZED(OrgApacheCommonsCodecCharsets)
  }
}

@end

void OrgApacheCommonsCodecCharsets_init(OrgApacheCommonsCodecCharsets *self) {
  NSObject_init(self);
}

OrgApacheCommonsCodecCharsets *new_OrgApacheCommonsCodecCharsets_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsCodecCharsets, init)
}

OrgApacheCommonsCodecCharsets *create_OrgApacheCommonsCodecCharsets_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsCodecCharsets, init)
}

JavaNioCharsetCharset *OrgApacheCommonsCodecCharsets_toCharsetWithJavaNioCharsetCharset_(JavaNioCharsetCharset *charset) {
  OrgApacheCommonsCodecCharsets_initialize();
  return charset == nil ? JavaNioCharsetCharset_defaultCharset() : charset;
}

JavaNioCharsetCharset *OrgApacheCommonsCodecCharsets_toCharsetWithNSString_(NSString *charset) {
  OrgApacheCommonsCodecCharsets_initialize();
  return charset == nil ? JavaNioCharsetCharset_defaultCharset() : JavaNioCharsetCharset_forNameWithNSString_(charset);
}

IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$1() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$2() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$3() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$4() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *OrgApacheCommonsCodecCharsets__Annotations$5() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsCodecCharsets)
