//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:commons-lang3-3.4-fis-sources.jar!org/apache/commons/lang3/reflect/FieldUtils.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Modifier.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/apache/commons/lang3/ClassUtils.h"
#include "org/apache/commons/lang3/StringUtils.h"
#include "org/apache/commons/lang3/Validate.h"
#include "org/apache/commons/lang3/reflect/FieldUtils.h"
#include "org/apache/commons/lang3/reflect/MemberUtils.h"

@implementation OrgApacheCommonsLang3ReflectFieldUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgApacheCommonsLang3ReflectFieldUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaLangReflectField *)getFieldWithIOSClass:(IOSClass *)cls
                                  withNSString:(NSString *)fieldName {
  return OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_(cls, fieldName);
}

+ (JavaLangReflectField *)getFieldWithIOSClass:(IOSClass *)cls
                                  withNSString:(NSString *)fieldName
                                   withBoolean:(jboolean)forceAccess {
  return OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
}

+ (JavaLangReflectField *)getDeclaredFieldWithIOSClass:(IOSClass *)cls
                                          withNSString:(NSString *)fieldName {
  return OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_(cls, fieldName);
}

+ (JavaLangReflectField *)getDeclaredFieldWithIOSClass:(IOSClass *)cls
                                          withNSString:(NSString *)fieldName
                                           withBoolean:(jboolean)forceAccess {
  return OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
}

+ (IOSObjectArray *)getAllFieldsWithIOSClass:(IOSClass *)cls {
  return OrgApacheCommonsLang3ReflectFieldUtils_getAllFieldsWithIOSClass_(cls);
}

+ (id<JavaUtilList>)getAllFieldsListWithIOSClass:(IOSClass *)cls {
  return OrgApacheCommonsLang3ReflectFieldUtils_getAllFieldsListWithIOSClass_(cls);
}

+ (IOSObjectArray *)getFieldsWithAnnotationWithIOSClass:(IOSClass *)cls
                                           withIOSClass:(IOSClass *)annotationCls {
  return OrgApacheCommonsLang3ReflectFieldUtils_getFieldsWithAnnotationWithIOSClass_withIOSClass_(cls, annotationCls);
}

+ (id<JavaUtilList>)getFieldsListWithAnnotationWithIOSClass:(IOSClass *)cls
                                               withIOSClass:(IOSClass *)annotationCls {
  return OrgApacheCommonsLang3ReflectFieldUtils_getFieldsListWithAnnotationWithIOSClass_withIOSClass_(cls, annotationCls);
}

+ (id)readStaticFieldWithJavaLangReflectField:(JavaLangReflectField *)field {
  return OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_(field);
}

+ (id)readStaticFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                  withBoolean:(jboolean)forceAccess {
  return OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_withBoolean_(field, forceAccess);
}

+ (id)readStaticFieldWithIOSClass:(IOSClass *)cls
                     withNSString:(NSString *)fieldName {
  return OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithIOSClass_withNSString_(cls, fieldName);
}

+ (id)readStaticFieldWithIOSClass:(IOSClass *)cls
                     withNSString:(NSString *)fieldName
                      withBoolean:(jboolean)forceAccess {
  return OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
}

+ (id)readDeclaredStaticFieldWithIOSClass:(IOSClass *)cls
                             withNSString:(NSString *)fieldName {
  return OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredStaticFieldWithIOSClass_withNSString_(cls, fieldName);
}

+ (id)readDeclaredStaticFieldWithIOSClass:(IOSClass *)cls
                             withNSString:(NSString *)fieldName
                              withBoolean:(jboolean)forceAccess {
  return OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredStaticFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
}

+ (id)readFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                 withId:(id)target {
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_(field, target);
}

+ (id)readFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                 withId:(id)target
                            withBoolean:(jboolean)forceAccess {
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_withBoolean_(field, target, forceAccess);
}

+ (id)readFieldWithId:(id)target
         withNSString:(NSString *)fieldName {
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithId_withNSString_(target, fieldName);
}

+ (id)readFieldWithId:(id)target
         withNSString:(NSString *)fieldName
          withBoolean:(jboolean)forceAccess {
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithId_withNSString_withBoolean_(target, fieldName, forceAccess);
}

+ (id)readDeclaredFieldWithId:(id)target
                 withNSString:(NSString *)fieldName {
  return OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredFieldWithId_withNSString_(target, fieldName);
}

+ (id)readDeclaredFieldWithId:(id)target
                 withNSString:(NSString *)fieldName
                  withBoolean:(jboolean)forceAccess {
  return OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredFieldWithId_withNSString_withBoolean_(target, fieldName, forceAccess);
}

+ (void)writeStaticFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                          withId:(id)value {
  OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithJavaLangReflectField_withId_(field, value);
}

+ (void)writeStaticFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                          withId:(id)value
                                     withBoolean:(jboolean)forceAccess {
  OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithJavaLangReflectField_withId_withBoolean_(field, value, forceAccess);
}

+ (void)writeStaticFieldWithIOSClass:(IOSClass *)cls
                        withNSString:(NSString *)fieldName
                              withId:(id)value {
  OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithIOSClass_withNSString_withId_(cls, fieldName, value);
}

+ (void)writeStaticFieldWithIOSClass:(IOSClass *)cls
                        withNSString:(NSString *)fieldName
                              withId:(id)value
                         withBoolean:(jboolean)forceAccess {
  OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithIOSClass_withNSString_withId_withBoolean_(cls, fieldName, value, forceAccess);
}

+ (void)writeDeclaredStaticFieldWithIOSClass:(IOSClass *)cls
                                withNSString:(NSString *)fieldName
                                      withId:(id)value {
  OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredStaticFieldWithIOSClass_withNSString_withId_(cls, fieldName, value);
}

+ (void)writeDeclaredStaticFieldWithIOSClass:(IOSClass *)cls
                                withNSString:(NSString *)fieldName
                                      withId:(id)value
                                 withBoolean:(jboolean)forceAccess {
  OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredStaticFieldWithIOSClass_withNSString_withId_withBoolean_(cls, fieldName, value, forceAccess);
}

+ (void)writeFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                    withId:(id)target
                                    withId:(id)value {
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_(field, target, value);
}

+ (void)writeFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                    withId:(id)target
                                    withId:(id)value
                               withBoolean:(jboolean)forceAccess {
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_withBoolean_(field, target, value, forceAccess);
}

+ (void)removeFinalModifierWithJavaLangReflectField:(JavaLangReflectField *)field {
  OrgApacheCommonsLang3ReflectFieldUtils_removeFinalModifierWithJavaLangReflectField_(field);
}

+ (void)removeFinalModifierWithJavaLangReflectField:(JavaLangReflectField *)field
                                        withBoolean:(jboolean)forceAccess {
  OrgApacheCommonsLang3ReflectFieldUtils_removeFinalModifierWithJavaLangReflectField_withBoolean_(field, forceAccess);
}

+ (void)writeFieldWithId:(id)target
            withNSString:(NSString *)fieldName
                  withId:(id)value {
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithId_withNSString_withId_(target, fieldName, value);
}

+ (void)writeFieldWithId:(id)target
            withNSString:(NSString *)fieldName
                  withId:(id)value
             withBoolean:(jboolean)forceAccess {
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithId_withNSString_withId_withBoolean_(target, fieldName, value, forceAccess);
}

+ (void)writeDeclaredFieldWithId:(id)target
                    withNSString:(NSString *)fieldName
                          withId:(id)value {
  OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredFieldWithId_withNSString_withId_(target, fieldName, value);
}

+ (void)writeDeclaredFieldWithId:(id)target
                    withNSString:(NSString *)fieldName
                          withId:(id)value
                     withBoolean:(jboolean)forceAccess {
  OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredFieldWithId_withNSString_withId_withBoolean_(target, fieldName, value, forceAccess);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectField;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LJavaLangReflectField;", 0x9, 0, 3, -1, 4, -1, -1 },
    { NULL, "LJavaLangReflectField;", 0x9, 5, 1, -1, 2, -1, -1 },
    { NULL, "LJavaLangReflectField;", 0x9, 5, 3, -1, 4, -1, -1 },
    { NULL, "[LJavaLangReflectField;", 0x9, 6, 7, -1, 8, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 9, 7, -1, 10, -1, -1 },
    { NULL, "[LJavaLangReflectField;", 0x9, 11, 12, -1, 13, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 14, 12, -1, 15, -1, -1 },
    { NULL, "LNSObject;", 0x9, 16, 17, 18, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 16, 19, 18, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 16, 1, 18, 20, -1, -1 },
    { NULL, "LNSObject;", 0x9, 16, 3, 18, 21, -1, -1 },
    { NULL, "LNSObject;", 0x9, 22, 1, 18, 20, -1, -1 },
    { NULL, "LNSObject;", 0x9, 22, 3, 18, 21, -1, -1 },
    { NULL, "LNSObject;", 0x9, 23, 24, 18, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 23, 25, 18, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 23, 26, 18, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 23, 27, 18, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 28, 26, 18, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 28, 27, 18, -1, -1, -1 },
    { NULL, "V", 0x9, 29, 24, 18, -1, -1, -1 },
    { NULL, "V", 0x9, 29, 25, 18, -1, -1, -1 },
    { NULL, "V", 0x9, 29, 30, 18, 31, -1, -1 },
    { NULL, "V", 0x9, 29, 32, 18, 33, -1, -1 },
    { NULL, "V", 0x9, 34, 30, 18, 31, -1, -1 },
    { NULL, "V", 0x9, 34, 32, 18, 33, -1, -1 },
    { NULL, "V", 0x9, 35, 36, 18, -1, -1, -1 },
    { NULL, "V", 0x9, 35, 37, 18, -1, -1, -1 },
    { NULL, "V", 0x9, 38, 17, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 38, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 35, 39, 18, -1, -1, -1 },
    { NULL, "V", 0x9, 35, 40, 18, -1, -1, -1 },
    { NULL, "V", 0x9, 41, 39, 18, -1, -1, -1 },
    { NULL, "V", 0x9, 41, 40, 18, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getFieldWithIOSClass:withNSString:);
  methods[2].selector = @selector(getFieldWithIOSClass:withNSString:withBoolean:);
  methods[3].selector = @selector(getDeclaredFieldWithIOSClass:withNSString:);
  methods[4].selector = @selector(getDeclaredFieldWithIOSClass:withNSString:withBoolean:);
  methods[5].selector = @selector(getAllFieldsWithIOSClass:);
  methods[6].selector = @selector(getAllFieldsListWithIOSClass:);
  methods[7].selector = @selector(getFieldsWithAnnotationWithIOSClass:withIOSClass:);
  methods[8].selector = @selector(getFieldsListWithAnnotationWithIOSClass:withIOSClass:);
  methods[9].selector = @selector(readStaticFieldWithJavaLangReflectField:);
  methods[10].selector = @selector(readStaticFieldWithJavaLangReflectField:withBoolean:);
  methods[11].selector = @selector(readStaticFieldWithIOSClass:withNSString:);
  methods[12].selector = @selector(readStaticFieldWithIOSClass:withNSString:withBoolean:);
  methods[13].selector = @selector(readDeclaredStaticFieldWithIOSClass:withNSString:);
  methods[14].selector = @selector(readDeclaredStaticFieldWithIOSClass:withNSString:withBoolean:);
  methods[15].selector = @selector(readFieldWithJavaLangReflectField:withId:);
  methods[16].selector = @selector(readFieldWithJavaLangReflectField:withId:withBoolean:);
  methods[17].selector = @selector(readFieldWithId:withNSString:);
  methods[18].selector = @selector(readFieldWithId:withNSString:withBoolean:);
  methods[19].selector = @selector(readDeclaredFieldWithId:withNSString:);
  methods[20].selector = @selector(readDeclaredFieldWithId:withNSString:withBoolean:);
  methods[21].selector = @selector(writeStaticFieldWithJavaLangReflectField:withId:);
  methods[22].selector = @selector(writeStaticFieldWithJavaLangReflectField:withId:withBoolean:);
  methods[23].selector = @selector(writeStaticFieldWithIOSClass:withNSString:withId:);
  methods[24].selector = @selector(writeStaticFieldWithIOSClass:withNSString:withId:withBoolean:);
  methods[25].selector = @selector(writeDeclaredStaticFieldWithIOSClass:withNSString:withId:);
  methods[26].selector = @selector(writeDeclaredStaticFieldWithIOSClass:withNSString:withId:withBoolean:);
  methods[27].selector = @selector(writeFieldWithJavaLangReflectField:withId:withId:);
  methods[28].selector = @selector(writeFieldWithJavaLangReflectField:withId:withId:withBoolean:);
  methods[29].selector = @selector(removeFinalModifierWithJavaLangReflectField:);
  methods[30].selector = @selector(removeFinalModifierWithJavaLangReflectField:withBoolean:);
  methods[31].selector = @selector(writeFieldWithId:withNSString:withId:);
  methods[32].selector = @selector(writeFieldWithId:withNSString:withId:withBoolean:);
  methods[33].selector = @selector(writeDeclaredFieldWithId:withNSString:withId:);
  methods[34].selector = @selector(writeDeclaredFieldWithId:withNSString:withId:withBoolean:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getField", "LIOSClass;LNSString;", "(Ljava/lang/Class<*>;Ljava/lang/String;)Ljava/lang/reflect/Field;", "LIOSClass;LNSString;Z", "(Ljava/lang/Class<*>;Ljava/lang/String;Z)Ljava/lang/reflect/Field;", "getDeclaredField", "getAllFields", "LIOSClass;", "(Ljava/lang/Class<*>;)[Ljava/lang/reflect/Field;", "getAllFieldsList", "(Ljava/lang/Class<*>;)Ljava/util/List<Ljava/lang/reflect/Field;>;", "getFieldsWithAnnotation", "LIOSClass;LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;)[Ljava/lang/reflect/Field;", "getFieldsListWithAnnotation", "(Ljava/lang/Class<*>;Ljava/lang/Class<+Ljava/lang/annotation/Annotation;>;)Ljava/util/List<Ljava/lang/reflect/Field;>;", "readStaticField", "LJavaLangReflectField;", "LJavaLangIllegalAccessException;", "LJavaLangReflectField;Z", "(Ljava/lang/Class<*>;Ljava/lang/String;)Ljava/lang/Object;", "(Ljava/lang/Class<*>;Ljava/lang/String;Z)Ljava/lang/Object;", "readDeclaredStaticField", "readField", "LJavaLangReflectField;LNSObject;", "LJavaLangReflectField;LNSObject;Z", "LNSObject;LNSString;", "LNSObject;LNSString;Z", "readDeclaredField", "writeStaticField", "LIOSClass;LNSString;LNSObject;", "(Ljava/lang/Class<*>;Ljava/lang/String;Ljava/lang/Object;)V", "LIOSClass;LNSString;LNSObject;Z", "(Ljava/lang/Class<*>;Ljava/lang/String;Ljava/lang/Object;Z)V", "writeDeclaredStaticField", "writeField", "LJavaLangReflectField;LNSObject;LNSObject;", "LJavaLangReflectField;LNSObject;LNSObject;Z", "removeFinalModifier", "LNSObject;LNSString;LNSObject;", "LNSObject;LNSString;LNSObject;Z", "writeDeclaredField" };
  static const J2ObjcClassInfo _OrgApacheCommonsLang3ReflectFieldUtils = { "FieldUtils", "org.apache.commons.lang3.reflect", ptrTable, methods, NULL, 7, 0x1, 35, 0, -1, -1, -1, -1, -1 };
  return &_OrgApacheCommonsLang3ReflectFieldUtils;
}

@end

void OrgApacheCommonsLang3ReflectFieldUtils_init(OrgApacheCommonsLang3ReflectFieldUtils *self) {
  NSObject_init(self);
}

OrgApacheCommonsLang3ReflectFieldUtils *new_OrgApacheCommonsLang3ReflectFieldUtils_init() {
  J2OBJC_NEW_IMPL(OrgApacheCommonsLang3ReflectFieldUtils, init)
}

OrgApacheCommonsLang3ReflectFieldUtils *create_OrgApacheCommonsLang3ReflectFieldUtils_init() {
  J2OBJC_CREATE_IMPL(OrgApacheCommonsLang3ReflectFieldUtils, init)
}

JavaLangReflectField *OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_(IOSClass *cls, NSString *fieldName) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, false);
  OrgApacheCommonsLang3ReflectMemberUtils_setAccessibleWorkaroundWithJavaLangReflectAccessibleObject_(field);
  return field;
}

JavaLangReflectField *OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_withBoolean_(IOSClass *cls, NSString *fieldName, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(cls != nil, @"The class must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(OrgApacheCommonsLang3StringUtils_isNotBlankWithJavaLangCharSequence_(fieldName), @"The field name must not be blank/empty", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  for (IOSClass *acls = cls; acls != nil; acls = [acls getSuperclass]) {
    @try {
      JavaLangReflectField *field = [acls getDeclaredField:fieldName];
      if (!JavaLangReflectModifier_isPublicWithInt_([((JavaLangReflectField *) nil_chk(field)) getModifiers])) {
        if (forceAccess) {
          [field setAccessibleWithBoolean:true];
        }
        else {
          continue;
        }
      }
      return field;
    }
    @catch (JavaLangNoSuchFieldException *ex) {
    }
  }
  JavaLangReflectField *match = nil;
  for (IOSClass * __strong class1 in nil_chk(OrgApacheCommonsLang3ClassUtils_getAllInterfacesWithIOSClass_(cls))) {
    @try {
      JavaLangReflectField *test = [((IOSClass *) nil_chk(class1)) getField:fieldName];
      OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(match == nil, @"Reference to field %s is ambiguous relative to %s; a matching field exists on two or more implemented interfaces.", [IOSObjectArray newArrayWithObjects:(id[]){ fieldName, cls } count:2 type:NSObject_class_()]);
      match = test;
    }
    @catch (JavaLangNoSuchFieldException *ex) {
    }
  }
  return match;
}

JavaLangReflectField *OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_(IOSClass *cls, NSString *fieldName) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  return OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, false);
}

JavaLangReflectField *OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_withBoolean_(IOSClass *cls, NSString *fieldName, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(cls != nil, @"The class must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(OrgApacheCommonsLang3StringUtils_isNotBlankWithJavaLangCharSequence_(fieldName), @"The field name must not be blank/empty", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  @try {
    JavaLangReflectField *field = [((IOSClass *) nil_chk(cls)) getDeclaredField:fieldName];
    if (!OrgApacheCommonsLang3ReflectMemberUtils_isAccessibleWithJavaLangReflectMember_(field)) {
      if (forceAccess) {
        [((JavaLangReflectField *) nil_chk(field)) setAccessibleWithBoolean:true];
      }
      else {
        return nil;
      }
    }
    return field;
  }
  @catch (JavaLangNoSuchFieldException *e) {
  }
  return nil;
}

IOSObjectArray *OrgApacheCommonsLang3ReflectFieldUtils_getAllFieldsWithIOSClass_(IOSClass *cls) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  id<JavaUtilList> allFieldsList = OrgApacheCommonsLang3ReflectFieldUtils_getAllFieldsListWithIOSClass_(cls);
  return [((id<JavaUtilList>) nil_chk(allFieldsList)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[allFieldsList size] type:JavaLangReflectField_class_()]];
}

id<JavaUtilList> OrgApacheCommonsLang3ReflectFieldUtils_getAllFieldsListWithIOSClass_(IOSClass *cls) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(cls != nil, @"The class must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  id<JavaUtilList> allFields = new_JavaUtilArrayList_init();
  IOSClass *currentClass = cls;
  while (currentClass != nil) {
    IOSObjectArray *declaredFields = [currentClass getDeclaredFields];
    {
      IOSObjectArray *a__ = declaredFields;
      JavaLangReflectField * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaLangReflectField * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangReflectField *field = *b__++;
        [allFields addWithId:field];
      }
    }
    currentClass = [currentClass getSuperclass];
  }
  return allFields;
}

IOSObjectArray *OrgApacheCommonsLang3ReflectFieldUtils_getFieldsWithAnnotationWithIOSClass_withIOSClass_(IOSClass *cls, IOSClass *annotationCls) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  id<JavaUtilList> annotatedFieldsList = OrgApacheCommonsLang3ReflectFieldUtils_getFieldsListWithAnnotationWithIOSClass_withIOSClass_(cls, annotationCls);
  return [((id<JavaUtilList>) nil_chk(annotatedFieldsList)) toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[annotatedFieldsList size] type:JavaLangReflectField_class_()]];
}

id<JavaUtilList> OrgApacheCommonsLang3ReflectFieldUtils_getFieldsListWithAnnotationWithIOSClass_withIOSClass_(IOSClass *cls, IOSClass *annotationCls) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(annotationCls != nil, @"The annotation class must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  id<JavaUtilList> allFields = OrgApacheCommonsLang3ReflectFieldUtils_getAllFieldsListWithIOSClass_(cls);
  id<JavaUtilList> annotatedFields = new_JavaUtilArrayList_init();
  for (JavaLangReflectField * __strong field in nil_chk(allFields)) {
    if ([((JavaLangReflectField *) nil_chk(field)) getAnnotationWithIOSClass:annotationCls] != nil) {
      [annotatedFields addWithId:field];
    }
  }
  return annotatedFields;
}

id OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_(JavaLangReflectField *field) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  return OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_withBoolean_(field, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_withBoolean_(JavaLangReflectField *field, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"The field must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(JavaLangReflectModifier_isStaticWithInt_([((JavaLangReflectField *) nil_chk(field)) getModifiers]), @"The field '%s' is not static", [IOSObjectArray newArrayWithObjects:(id[]){ [field getName] } count:1 type:NSObject_class_()]);
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_withBoolean_(field, nil, forceAccess);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithIOSClass_withNSString_(IOSClass *cls, NSString *fieldName) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  return OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithIOSClass_withNSString_withBoolean_(IOSClass *cls, NSString *fieldName, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"Cannot locate field '%s' on %s", [IOSObjectArray newArrayWithObjects:(id[]){ fieldName, cls } count:2 type:NSObject_class_()]);
  return OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_withBoolean_(field, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredStaticFieldWithIOSClass_withNSString_(IOSClass *cls, NSString *fieldName) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  return OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredStaticFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredStaticFieldWithIOSClass_withNSString_withBoolean_(IOSClass *cls, NSString *fieldName, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"Cannot locate declared field %s.%s", [IOSObjectArray newArrayWithObjects:(id[]){ [((IOSClass *) nil_chk(cls)) getName], fieldName } count:2 type:NSObject_class_()]);
  return OrgApacheCommonsLang3ReflectFieldUtils_readStaticFieldWithJavaLangReflectField_withBoolean_(field, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_(JavaLangReflectField *field, id target) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_withBoolean_(field, target, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_withBoolean_(JavaLangReflectField *field, id target, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"The field must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  if (forceAccess && ![((JavaLangReflectField *) nil_chk(field)) isAccessible]) {
    [((JavaLangReflectField *) nil_chk(field)) setAccessibleWithBoolean:true];
  }
  else {
    OrgApacheCommonsLang3ReflectMemberUtils_setAccessibleWorkaroundWithJavaLangReflectAccessibleObject_(field);
  }
  return [((JavaLangReflectField *) nil_chk(field)) getWithId:target];
}

id OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithId_withNSString_(id target, NSString *fieldName) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithId_withNSString_withBoolean_(target, fieldName, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithId_withNSString_withBoolean_(id target, NSString *fieldName, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(target != nil, @"target object must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  IOSClass *cls = [nil_chk(target) java_getClass];
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"Cannot locate field %s on %s", [IOSObjectArray newArrayWithObjects:(id[]){ fieldName, cls } count:2 type:NSObject_class_()]);
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_withBoolean_(field, target, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredFieldWithId_withNSString_(id target, NSString *fieldName) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  return OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredFieldWithId_withNSString_withBoolean_(target, fieldName, false);
}

id OrgApacheCommonsLang3ReflectFieldUtils_readDeclaredFieldWithId_withNSString_withBoolean_(id target, NSString *fieldName, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(target != nil, @"target object must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  IOSClass *cls = [nil_chk(target) java_getClass];
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"Cannot locate declared field %s.%s", [IOSObjectArray newArrayWithObjects:(id[]){ cls, fieldName } count:2 type:NSObject_class_()]);
  return OrgApacheCommonsLang3ReflectFieldUtils_readFieldWithJavaLangReflectField_withId_withBoolean_(field, target, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithJavaLangReflectField_withId_(JavaLangReflectField *field, id value) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithJavaLangReflectField_withId_withBoolean_(field, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithJavaLangReflectField_withId_withBoolean_(JavaLangReflectField *field, id value, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"The field must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(JavaLangReflectModifier_isStaticWithInt_([((JavaLangReflectField *) nil_chk(field)) getModifiers]), @"The field %s.%s is not static", [IOSObjectArray newArrayWithObjects:(id[]){ [((IOSClass *) nil_chk([field getDeclaringClass])) getName], [field getName] } count:2 type:NSObject_class_()]);
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_withBoolean_(field, nil, value, forceAccess);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithIOSClass_withNSString_withId_(IOSClass *cls, NSString *fieldName, id value) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithIOSClass_withNSString_withId_withBoolean_(cls, fieldName, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithIOSClass_withNSString_withId_withBoolean_(IOSClass *cls, NSString *fieldName, id value, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"Cannot locate field %s on %s", [IOSObjectArray newArrayWithObjects:(id[]){ fieldName, cls } count:2 type:NSObject_class_()]);
  OrgApacheCommonsLang3ReflectFieldUtils_writeStaticFieldWithJavaLangReflectField_withId_withBoolean_(field, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredStaticFieldWithIOSClass_withNSString_withId_(IOSClass *cls, NSString *fieldName, id value) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredStaticFieldWithIOSClass_withNSString_withId_withBoolean_(cls, fieldName, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredStaticFieldWithIOSClass_withNSString_withId_withBoolean_(IOSClass *cls, NSString *fieldName, id value, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"Cannot locate declared field %s.%s", [IOSObjectArray newArrayWithObjects:(id[]){ [((IOSClass *) nil_chk(cls)) getName], fieldName } count:2 type:NSObject_class_()]);
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_withBoolean_(field, nil, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_(JavaLangReflectField *field, id target, id value) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_withBoolean_(field, target, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_withBoolean_(JavaLangReflectField *field, id target, id value, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"The field must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  if (forceAccess && ![((JavaLangReflectField *) nil_chk(field)) isAccessible]) {
    [((JavaLangReflectField *) nil_chk(field)) setAccessibleWithBoolean:true];
  }
  else {
    OrgApacheCommonsLang3ReflectMemberUtils_setAccessibleWorkaroundWithJavaLangReflectAccessibleObject_(field);
  }
  [((JavaLangReflectField *) nil_chk(field)) setWithId:target withId:value];
}

void OrgApacheCommonsLang3ReflectFieldUtils_removeFinalModifierWithJavaLangReflectField_(JavaLangReflectField *field) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3ReflectFieldUtils_removeFinalModifierWithJavaLangReflectField_withBoolean_(field, true);
}

void OrgApacheCommonsLang3ReflectFieldUtils_removeFinalModifierWithJavaLangReflectField_withBoolean_(JavaLangReflectField *field, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"The field must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  @try {
    if (JavaLangReflectModifier_isFinalWithInt_([((JavaLangReflectField *) nil_chk(field)) getModifiers])) {
      JavaLangReflectField *modifiersField = [JavaLangReflectField_class_() getDeclaredField:@"modifiers"];
      jboolean doForceAccess = forceAccess && ![((JavaLangReflectField *) nil_chk(modifiersField)) isAccessible];
      if (doForceAccess) {
        [((JavaLangReflectField *) nil_chk(modifiersField)) setAccessibleWithBoolean:true];
      }
      @try {
        [((JavaLangReflectField *) nil_chk(modifiersField)) setIntWithId:field withInt:[field getModifiers] & ~JavaLangReflectModifier_FINAL];
      }
      @finally {
        if (doForceAccess) {
          [modifiersField setAccessibleWithBoolean:false];
        }
      }
    }
  }
  @catch (JavaLangNoSuchFieldException *ignored) {
  }
  @catch (JavaLangIllegalAccessException *ignored) {
  }
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithId_withNSString_withId_(id target, NSString *fieldName, id value) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithId_withNSString_withId_withBoolean_(target, fieldName, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithId_withNSString_withId_withBoolean_(id target, NSString *fieldName, id value, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(target != nil, @"target object must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  IOSClass *cls = [nil_chk(target) java_getClass];
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"Cannot locate declared field %s.%s", [IOSObjectArray newArrayWithObjects:(id[]){ [cls getName], fieldName } count:2 type:NSObject_class_()]);
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_withBoolean_(field, target, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredFieldWithId_withNSString_withId_(id target, NSString *fieldName, id value) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredFieldWithId_withNSString_withId_withBoolean_(target, fieldName, value, false);
}

void OrgApacheCommonsLang3ReflectFieldUtils_writeDeclaredFieldWithId_withNSString_withId_withBoolean_(id target, NSString *fieldName, id value, jboolean forceAccess) {
  OrgApacheCommonsLang3ReflectFieldUtils_initialize();
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(target != nil, @"target object must not be null", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  IOSClass *cls = [nil_chk(target) java_getClass];
  JavaLangReflectField *field = OrgApacheCommonsLang3ReflectFieldUtils_getDeclaredFieldWithIOSClass_withNSString_withBoolean_(cls, fieldName, forceAccess);
  OrgApacheCommonsLang3Validate_isTrueWithBoolean_withNSString_withNSObjectArray_(field != nil, @"Cannot locate declared field %s.%s", [IOSObjectArray newArrayWithObjects:(id[]){ [cls getName], fieldName } count:2 type:NSObject_class_()]);
  OrgApacheCommonsLang3ReflectFieldUtils_writeFieldWithJavaLangReflectField_withId_withId_withBoolean_(field, target, value, false);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgApacheCommonsLang3ReflectFieldUtils)
