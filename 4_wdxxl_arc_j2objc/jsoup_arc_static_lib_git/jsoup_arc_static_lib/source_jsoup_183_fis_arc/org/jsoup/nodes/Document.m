//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: jar:file:jsoup-1.8.3-fis-sources.jar!org/jsoup/nodes/Document.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/nio/charset/Charset.h"
#include "java/nio/charset/CharsetEncoder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "org/jsoup/helper/StringUtil.h"
#include "org/jsoup/helper/Validate.h"
#include "org/jsoup/nodes/Document.h"
#include "org/jsoup/nodes/Element.h"
#include "org/jsoup/nodes/Entities.h"
#include "org/jsoup/nodes/Node.h"
#include "org/jsoup/nodes/TextNode.h"
#include "org/jsoup/nodes/XmlDeclaration.h"
#include "org/jsoup/parser/Tag.h"
#include "org/jsoup/select/Elements.h"

@interface OrgJsoupNodesDocument () {
 @public
  OrgJsoupNodesDocument_OutputSettings *outputSettings_;
  OrgJsoupNodesDocument_QuirksMode *quirksMode_;
  NSString *location_;
  jboolean updateMetaCharset_;
}

- (void)normaliseTextNodesWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)element;

- (void)normaliseStructureWithNSString:(NSString *)tag
              withOrgJsoupNodesElement:(OrgJsoupNodesElement *)htmlEl;

- (OrgJsoupNodesElement *)findFirstElementByTagNameWithNSString:(NSString *)tag
                                          withOrgJsoupNodesNode:(OrgJsoupNodesNode *)node;

- (void)ensureMetaCharsetElement;

@end

J2OBJC_FIELD_SETTER(OrgJsoupNodesDocument, outputSettings_, OrgJsoupNodesDocument_OutputSettings *)
J2OBJC_FIELD_SETTER(OrgJsoupNodesDocument, quirksMode_, OrgJsoupNodesDocument_QuirksMode *)
J2OBJC_FIELD_SETTER(OrgJsoupNodesDocument, location_, NSString *)

__attribute__((unused)) static void OrgJsoupNodesDocument_normaliseTextNodesWithOrgJsoupNodesElement_(OrgJsoupNodesDocument *self, OrgJsoupNodesElement *element);

__attribute__((unused)) static void OrgJsoupNodesDocument_normaliseStructureWithNSString_withOrgJsoupNodesElement_(OrgJsoupNodesDocument *self, NSString *tag, OrgJsoupNodesElement *htmlEl);

__attribute__((unused)) static OrgJsoupNodesElement *OrgJsoupNodesDocument_findFirstElementByTagNameWithNSString_withOrgJsoupNodesNode_(OrgJsoupNodesDocument *self, NSString *tag, OrgJsoupNodesNode *node);

__attribute__((unused)) static void OrgJsoupNodesDocument_ensureMetaCharsetElement(OrgJsoupNodesDocument *self);

@interface OrgJsoupNodesDocument_OutputSettings () {
 @public
  OrgJsoupNodesEntities_EscapeMode *escapeMode_;
  JavaNioCharsetCharset *charset_;
  JavaNioCharsetCharsetEncoder *charsetEncoder_;
  jboolean prettyPrint_;
  jboolean outline_;
  jint indentAmount_;
  OrgJsoupNodesDocument_OutputSettings_Syntax *syntax_;
}

@end

J2OBJC_FIELD_SETTER(OrgJsoupNodesDocument_OutputSettings, escapeMode_, OrgJsoupNodesEntities_EscapeMode *)
J2OBJC_FIELD_SETTER(OrgJsoupNodesDocument_OutputSettings, charset_, JavaNioCharsetCharset *)
J2OBJC_FIELD_SETTER(OrgJsoupNodesDocument_OutputSettings, charsetEncoder_, JavaNioCharsetCharsetEncoder *)
J2OBJC_FIELD_SETTER(OrgJsoupNodesDocument_OutputSettings, syntax_, OrgJsoupNodesDocument_OutputSettings_Syntax *)

__attribute__((unused)) static void OrgJsoupNodesDocument_OutputSettings_Syntax_initWithNSString_withInt_(OrgJsoupNodesDocument_OutputSettings_Syntax *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgJsoupNodesDocument_OutputSettings_Syntax *new_OrgJsoupNodesDocument_OutputSettings_Syntax_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

__attribute__((unused)) static void OrgJsoupNodesDocument_QuirksMode_initWithNSString_withInt_(OrgJsoupNodesDocument_QuirksMode *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static OrgJsoupNodesDocument_QuirksMode *new_OrgJsoupNodesDocument_QuirksMode_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation OrgJsoupNodesDocument

- (instancetype)initWithNSString:(NSString *)baseUri {
  OrgJsoupNodesDocument_initWithNSString_(self, baseUri);
  return self;
}

+ (OrgJsoupNodesDocument *)createShellWithNSString:(NSString *)baseUri {
  return OrgJsoupNodesDocument_createShellWithNSString_(baseUri);
}

- (NSString *)location {
  return location_;
}

- (OrgJsoupNodesElement *)head {
  return OrgJsoupNodesDocument_findFirstElementByTagNameWithNSString_withOrgJsoupNodesNode_(self, @"head", self);
}

- (OrgJsoupNodesElement *)body {
  return OrgJsoupNodesDocument_findFirstElementByTagNameWithNSString_withOrgJsoupNodesNode_(self, @"body", self);
}

- (NSString *)title {
  OrgJsoupNodesElement *titleEl = [((OrgJsoupSelectElements *) nil_chk([self getElementsByTagWithNSString:@"title"])) first];
  return titleEl != nil ? [((NSString *) nil_chk(OrgJsoupHelperStringUtil_normaliseWhitespaceWithNSString_([titleEl text]))) java_trim] : @"";
}

- (void)titleWithNSString:(NSString *)title {
  OrgJsoupHelperValidate_notNullWithId_(title);
  OrgJsoupNodesElement *titleEl = [((OrgJsoupSelectElements *) nil_chk([self getElementsByTagWithNSString:@"title"])) first];
  if (titleEl == nil) {
    (void) [((OrgJsoupNodesElement *) nil_chk([((OrgJsoupNodesElement *) nil_chk([self head])) appendElementWithNSString:@"title"])) textWithNSString:title];
  }
  else {
    (void) [titleEl textWithNSString:title];
  }
}

- (OrgJsoupNodesElement *)createElementWithNSString:(NSString *)tagName {
  return new_OrgJsoupNodesElement_initWithOrgJsoupParserTag_withNSString_(OrgJsoupParserTag_valueOfWithNSString_(tagName), [self baseUri]);
}

- (OrgJsoupNodesDocument *)normalise {
  OrgJsoupNodesElement *htmlEl = OrgJsoupNodesDocument_findFirstElementByTagNameWithNSString_withOrgJsoupNodesNode_(self, @"html", self);
  if (htmlEl == nil) htmlEl = [self appendElementWithNSString:@"html"];
  if ([self head] == nil) (void) [((OrgJsoupNodesElement *) nil_chk(htmlEl)) prependElementWithNSString:@"head"];
  if ([self body] == nil) (void) [((OrgJsoupNodesElement *) nil_chk(htmlEl)) appendElementWithNSString:@"body"];
  OrgJsoupNodesDocument_normaliseTextNodesWithOrgJsoupNodesElement_(self, [self head]);
  OrgJsoupNodesDocument_normaliseTextNodesWithOrgJsoupNodesElement_(self, htmlEl);
  OrgJsoupNodesDocument_normaliseTextNodesWithOrgJsoupNodesElement_(self, self);
  OrgJsoupNodesDocument_normaliseStructureWithNSString_withOrgJsoupNodesElement_(self, @"head", htmlEl);
  OrgJsoupNodesDocument_normaliseStructureWithNSString_withOrgJsoupNodesElement_(self, @"body", htmlEl);
  OrgJsoupNodesDocument_ensureMetaCharsetElement(self);
  return self;
}

- (void)normaliseTextNodesWithOrgJsoupNodesElement:(OrgJsoupNodesElement *)element {
  OrgJsoupNodesDocument_normaliseTextNodesWithOrgJsoupNodesElement_(self, element);
}

- (void)normaliseStructureWithNSString:(NSString *)tag
              withOrgJsoupNodesElement:(OrgJsoupNodesElement *)htmlEl {
  OrgJsoupNodesDocument_normaliseStructureWithNSString_withOrgJsoupNodesElement_(self, tag, htmlEl);
}

- (OrgJsoupNodesElement *)findFirstElementByTagNameWithNSString:(NSString *)tag
                                          withOrgJsoupNodesNode:(OrgJsoupNodesNode *)node {
  return OrgJsoupNodesDocument_findFirstElementByTagNameWithNSString_withOrgJsoupNodesNode_(self, tag, node);
}

- (NSString *)outerHtml {
  return [super html];
}

- (OrgJsoupNodesElement *)textWithNSString:(NSString *)text {
  (void) [((OrgJsoupNodesElement *) nil_chk([self body])) textWithNSString:text];
  return self;
}

- (NSString *)nodeName {
  return @"#document";
}

- (void)charsetWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  [self updateMetaCharsetElementWithBoolean:true];
  (void) [((OrgJsoupNodesDocument_OutputSettings *) nil_chk(outputSettings_)) charsetWithJavaNioCharsetCharset:charset];
  OrgJsoupNodesDocument_ensureMetaCharsetElement(self);
}

- (JavaNioCharsetCharset *)charset {
  return [((OrgJsoupNodesDocument_OutputSettings *) nil_chk(outputSettings_)) charset];
}

- (void)updateMetaCharsetElementWithBoolean:(jboolean)update {
  self->updateMetaCharset_ = update;
}

- (jboolean)updateMetaCharsetElement {
  return updateMetaCharset_;
}

- (OrgJsoupNodesDocument *)java_clone {
  OrgJsoupNodesDocument *clone = (OrgJsoupNodesDocument *) cast_chk([super java_clone], [OrgJsoupNodesDocument class]);
  ((OrgJsoupNodesDocument *) nil_chk(clone))->outputSettings_ = [((OrgJsoupNodesDocument_OutputSettings *) nil_chk(self->outputSettings_)) java_clone];
  return clone;
}

- (void)ensureMetaCharsetElement {
  OrgJsoupNodesDocument_ensureMetaCharsetElement(self);
}

- (OrgJsoupNodesDocument_OutputSettings *)outputSettings {
  return outputSettings_;
}

- (OrgJsoupNodesDocument *)outputSettingsWithOrgJsoupNodesDocument_OutputSettings:(OrgJsoupNodesDocument_OutputSettings *)outputSettings {
  OrgJsoupHelperValidate_notNullWithId_(outputSettings);
  self->outputSettings_ = outputSettings;
  return self;
}

- (OrgJsoupNodesDocument_QuirksMode *)quirksMode {
  return quirksMode_;
}

- (OrgJsoupNodesDocument *)quirksModeWithOrgJsoupNodesDocument_QuirksMode:(OrgJsoupNodesDocument_QuirksMode *)quirksMode {
  self->quirksMode_ = quirksMode;
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x1, 3, 0, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 4, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 6, 7, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x2, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesElement;", 0x1, 10, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LJavaNioCharsetCharset;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x1, 15, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_QuirksMode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument;", 0x1, 18, 19, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(createShellWithNSString:);
  methods[2].selector = @selector(location);
  methods[3].selector = @selector(head);
  methods[4].selector = @selector(body);
  methods[5].selector = @selector(title);
  methods[6].selector = @selector(titleWithNSString:);
  methods[7].selector = @selector(createElementWithNSString:);
  methods[8].selector = @selector(normalise);
  methods[9].selector = @selector(normaliseTextNodesWithOrgJsoupNodesElement:);
  methods[10].selector = @selector(normaliseStructureWithNSString:withOrgJsoupNodesElement:);
  methods[11].selector = @selector(findFirstElementByTagNameWithNSString:withOrgJsoupNodesNode:);
  methods[12].selector = @selector(outerHtml);
  methods[13].selector = @selector(textWithNSString:);
  methods[14].selector = @selector(nodeName);
  methods[15].selector = @selector(charsetWithJavaNioCharsetCharset:);
  methods[16].selector = @selector(charset);
  methods[17].selector = @selector(updateMetaCharsetElementWithBoolean:);
  methods[18].selector = @selector(updateMetaCharsetElement);
  methods[19].selector = @selector(java_clone);
  methods[20].selector = @selector(ensureMetaCharsetElement);
  methods[21].selector = @selector(outputSettings);
  methods[22].selector = @selector(outputSettingsWithOrgJsoupNodesDocument_OutputSettings:);
  methods[23].selector = @selector(quirksMode);
  methods[24].selector = @selector(quirksModeWithOrgJsoupNodesDocument_QuirksMode:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "outputSettings_", "LOrgJsoupNodesDocument_OutputSettings;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "quirksMode_", "LOrgJsoupNodesDocument_QuirksMode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "location_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "updateMetaCharset_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "createShell", "title", "createElement", "normaliseTextNodes", "LOrgJsoupNodesElement;", "normaliseStructure", "LNSString;LOrgJsoupNodesElement;", "findFirstElementByTagName", "LNSString;LOrgJsoupNodesNode;", "text", "charset", "LJavaNioCharsetCharset;", "updateMetaCharsetElement", "Z", "clone", "outputSettings", "LOrgJsoupNodesDocument_OutputSettings;", "quirksMode", "LOrgJsoupNodesDocument_QuirksMode;", "LOrgJsoupNodesDocument_OutputSettings;LOrgJsoupNodesDocument_QuirksMode;" };
  static const J2ObjcClassInfo _OrgJsoupNodesDocument = { "Document", "org.jsoup.nodes", ptrTable, methods, fields, 7, 0x1, 25, 4, -1, 20, -1, -1, -1 };
  return &_OrgJsoupNodesDocument;
}

@end

void OrgJsoupNodesDocument_initWithNSString_(OrgJsoupNodesDocument *self, NSString *baseUri) {
  OrgJsoupNodesElement_initWithOrgJsoupParserTag_withNSString_(self, OrgJsoupParserTag_valueOfWithNSString_(@"#root"), baseUri);
  self->outputSettings_ = new_OrgJsoupNodesDocument_OutputSettings_init();
  self->quirksMode_ = JreLoadEnum(OrgJsoupNodesDocument_QuirksMode, noQuirks);
  self->updateMetaCharset_ = false;
  self->location_ = baseUri;
}

OrgJsoupNodesDocument *new_OrgJsoupNodesDocument_initWithNSString_(NSString *baseUri) {
  J2OBJC_NEW_IMPL(OrgJsoupNodesDocument, initWithNSString_, baseUri)
}

OrgJsoupNodesDocument *create_OrgJsoupNodesDocument_initWithNSString_(NSString *baseUri) {
  J2OBJC_CREATE_IMPL(OrgJsoupNodesDocument, initWithNSString_, baseUri)
}

OrgJsoupNodesDocument *OrgJsoupNodesDocument_createShellWithNSString_(NSString *baseUri) {
  OrgJsoupNodesDocument_initialize();
  OrgJsoupHelperValidate_notNullWithId_(baseUri);
  OrgJsoupNodesDocument *doc = new_OrgJsoupNodesDocument_initWithNSString_(baseUri);
  OrgJsoupNodesElement *html = [doc appendElementWithNSString:@"html"];
  (void) [((OrgJsoupNodesElement *) nil_chk(html)) appendElementWithNSString:@"head"];
  (void) [html appendElementWithNSString:@"body"];
  return doc;
}

void OrgJsoupNodesDocument_normaliseTextNodesWithOrgJsoupNodesElement_(OrgJsoupNodesDocument *self, OrgJsoupNodesElement *element) {
  id<JavaUtilList> toMove = new_JavaUtilArrayList_init();
  for (OrgJsoupNodesNode * __strong node in nil_chk(((OrgJsoupNodesElement *) nil_chk(element))->childNodes_)) {
    if ([node isKindOfClass:[OrgJsoupNodesTextNode class]]) {
      OrgJsoupNodesTextNode *tn = (OrgJsoupNodesTextNode *) cast_chk(node, [OrgJsoupNodesTextNode class]);
      if (![((OrgJsoupNodesTextNode *) nil_chk(tn)) isBlank]) [toMove addWithId:tn];
    }
  }
  for (jint i = [toMove size] - 1; i >= 0; i--) {
    OrgJsoupNodesNode *node = [toMove getWithInt:i];
    [element removeChildWithOrgJsoupNodesNode:node];
    (void) [((OrgJsoupNodesElement *) nil_chk([self body])) prependChildWithOrgJsoupNodesNode:new_OrgJsoupNodesTextNode_initWithNSString_withNSString_(@" ", @"")];
    (void) [((OrgJsoupNodesElement *) nil_chk([self body])) prependChildWithOrgJsoupNodesNode:node];
  }
}

void OrgJsoupNodesDocument_normaliseStructureWithNSString_withOrgJsoupNodesElement_(OrgJsoupNodesDocument *self, NSString *tag, OrgJsoupNodesElement *htmlEl) {
  OrgJsoupSelectElements *elements = [self getElementsByTagWithNSString:tag];
  OrgJsoupNodesElement *master = [((OrgJsoupSelectElements *) nil_chk(elements)) first];
  if ([elements size] > 1) {
    id<JavaUtilList> toMove = new_JavaUtilArrayList_init();
    for (jint i = 1; i < [elements size]; i++) {
      OrgJsoupNodesNode *dupe = [elements getWithInt:i];
      for (OrgJsoupNodesNode * __strong node in nil_chk(((OrgJsoupNodesNode *) nil_chk(dupe))->childNodes_)) [toMove addWithId:node];
      [dupe remove];
    }
    for (OrgJsoupNodesNode * __strong dupe in toMove) (void) [((OrgJsoupNodesElement *) nil_chk(master)) appendChildWithOrgJsoupNodesNode:dupe];
  }
  if (![((OrgJsoupNodesElement *) nil_chk([((OrgJsoupNodesElement *) nil_chk(master)) parent])) isEqual:htmlEl]) {
    (void) [((OrgJsoupNodesElement *) nil_chk(htmlEl)) appendChildWithOrgJsoupNodesNode:master];
  }
}

OrgJsoupNodesElement *OrgJsoupNodesDocument_findFirstElementByTagNameWithNSString_withOrgJsoupNodesNode_(OrgJsoupNodesDocument *self, NSString *tag, OrgJsoupNodesNode *node) {
  if ([((NSString *) nil_chk([((OrgJsoupNodesNode *) nil_chk(node)) nodeName])) isEqual:tag]) return (OrgJsoupNodesElement *) cast_chk(node, [OrgJsoupNodesElement class]);
  else {
    for (OrgJsoupNodesNode * __strong child in nil_chk(node->childNodes_)) {
      OrgJsoupNodesElement *found = OrgJsoupNodesDocument_findFirstElementByTagNameWithNSString_withOrgJsoupNodesNode_(self, tag, child);
      if (found != nil) return found;
    }
  }
  return nil;
}

void OrgJsoupNodesDocument_ensureMetaCharsetElement(OrgJsoupNodesDocument *self) {
  if (self->updateMetaCharset_) {
    OrgJsoupNodesDocument_OutputSettings_Syntax *syntax = [((OrgJsoupNodesDocument_OutputSettings *) nil_chk([self outputSettings])) syntax];
    if (syntax == JreLoadEnum(OrgJsoupNodesDocument_OutputSettings_Syntax, html)) {
      OrgJsoupNodesElement *metaCharset = [((OrgJsoupSelectElements *) nil_chk([self selectWithNSString:@"meta[charset]"])) first];
      if (metaCharset != nil) {
        (void) [metaCharset attrWithNSString:@"charset" withNSString:[((JavaNioCharsetCharset *) nil_chk([self charset])) displayName]];
      }
      else {
        OrgJsoupNodesElement *head = [self head];
        if (head != nil) {
          (void) [((OrgJsoupNodesElement *) nil_chk([head appendElementWithNSString:@"meta"])) attrWithNSString:@"charset" withNSString:[((JavaNioCharsetCharset *) nil_chk([self charset])) displayName]];
        }
      }
      (void) [((OrgJsoupSelectElements *) nil_chk([self selectWithNSString:@"meta[name=charset]"])) remove];
    }
    else if (syntax == JreLoadEnum(OrgJsoupNodesDocument_OutputSettings_Syntax, xml)) {
      OrgJsoupNodesNode *node = [((id<JavaUtilList>) nil_chk([self childNodes])) getWithInt:0];
      if ([node isKindOfClass:[OrgJsoupNodesXmlDeclaration class]]) {
        OrgJsoupNodesXmlDeclaration *decl = (OrgJsoupNodesXmlDeclaration *) cast_chk(node, [OrgJsoupNodesXmlDeclaration class]);
        if ([((NSString *) nil_chk([((OrgJsoupNodesXmlDeclaration *) nil_chk(decl)) attrWithNSString:OrgJsoupNodesXmlDeclaration_DECL_KEY])) isEqual:@"xml"]) {
          (void) [decl attrWithNSString:@"encoding" withNSString:[((JavaNioCharsetCharset *) nil_chk([self charset])) displayName]];
          NSString *version_ = [decl attrWithNSString:@"version"];
          if (version_ != nil) {
            (void) [decl attrWithNSString:@"version" withNSString:@"1.0"];
          }
        }
        else {
          decl = new_OrgJsoupNodesXmlDeclaration_initWithNSString_withNSString_withBoolean_(@"xml", self->baseUri_, false);
          (void) [decl attrWithNSString:@"version" withNSString:@"1.0"];
          (void) [decl attrWithNSString:@"encoding" withNSString:[((JavaNioCharsetCharset *) nil_chk([self charset])) displayName]];
          (void) [self prependChildWithOrgJsoupNodesNode:decl];
        }
      }
      else {
        OrgJsoupNodesXmlDeclaration *decl = new_OrgJsoupNodesXmlDeclaration_initWithNSString_withNSString_withBoolean_(@"xml", self->baseUri_, false);
        (void) [decl attrWithNSString:@"version" withNSString:@"1.0"];
        (void) [decl attrWithNSString:@"encoding" withNSString:[((JavaNioCharsetCharset *) nil_chk([self charset])) displayName]];
        (void) [self prependChildWithOrgJsoupNodesNode:decl];
      }
    }
    else {
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupNodesDocument)

@implementation OrgJsoupNodesDocument_OutputSettings

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  OrgJsoupNodesDocument_OutputSettings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (OrgJsoupNodesEntities_EscapeMode *)escapeMode {
  return escapeMode_;
}

- (OrgJsoupNodesDocument_OutputSettings *)escapeModeWithOrgJsoupNodesEntities_EscapeMode:(OrgJsoupNodesEntities_EscapeMode *)escapeMode {
  self->escapeMode_ = escapeMode;
  return self;
}

- (JavaNioCharsetCharset *)charset {
  return charset_;
}

- (OrgJsoupNodesDocument_OutputSettings *)charsetWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset {
  self->charset_ = charset;
  charsetEncoder_ = [((JavaNioCharsetCharset *) nil_chk(charset)) newEncoder];
  return self;
}

- (OrgJsoupNodesDocument_OutputSettings *)charsetWithNSString:(NSString *)charset {
  (void) [self charsetWithJavaNioCharsetCharset:JavaNioCharsetCharset_forNameWithNSString_(charset)];
  return self;
}

- (JavaNioCharsetCharsetEncoder *)encoder {
  return charsetEncoder_;
}

- (OrgJsoupNodesDocument_OutputSettings_Syntax *)syntax {
  return syntax_;
}

- (OrgJsoupNodesDocument_OutputSettings *)syntaxWithOrgJsoupNodesDocument_OutputSettings_Syntax:(OrgJsoupNodesDocument_OutputSettings_Syntax *)syntax {
  self->syntax_ = syntax;
  return self;
}

- (jboolean)prettyPrint {
  return prettyPrint_;
}

- (OrgJsoupNodesDocument_OutputSettings *)prettyPrintWithBoolean:(jboolean)pretty {
  prettyPrint_ = pretty;
  return self;
}

- (jboolean)outline {
  return outline_;
}

- (OrgJsoupNodesDocument_OutputSettings *)outlineWithBoolean:(jboolean)outlineMode {
  outline_ = outlineMode;
  return self;
}

- (jint)indentAmount {
  return indentAmount_;
}

- (OrgJsoupNodesDocument_OutputSettings *)indentAmountWithInt:(jint)indentAmount {
  OrgJsoupHelperValidate_isTrueWithBoolean_(indentAmount >= 0);
  self->indentAmount_ = indentAmount;
  return self;
}

- (OrgJsoupNodesDocument_OutputSettings *)java_clone {
  OrgJsoupNodesDocument_OutputSettings *clone;
  @try {
    clone = (OrgJsoupNodesDocument_OutputSettings *) cast_chk([super java_clone], [OrgJsoupNodesDocument_OutputSettings class]);
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
  }
  (void) [((OrgJsoupNodesDocument_OutputSettings *) nil_chk(clone)) charsetWithNSString:[((JavaNioCharsetCharset *) nil_chk(charset_)) name]];
  clone->escapeMode_ = OrgJsoupNodesEntities_EscapeMode_valueOfWithNSString_([((OrgJsoupNodesEntities_EscapeMode *) nil_chk(escapeMode_)) name]);
  return clone;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesEntities_EscapeMode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaNioCharsetCharset;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, 2, 4, -1, -1, -1, -1 },
    { NULL, "LJavaNioCharsetCharsetEncoder;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings_Syntax;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, 9, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings;", 0x1, 12, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(escapeMode);
  methods[2].selector = @selector(escapeModeWithOrgJsoupNodesEntities_EscapeMode:);
  methods[3].selector = @selector(charset);
  methods[4].selector = @selector(charsetWithJavaNioCharsetCharset:);
  methods[5].selector = @selector(charsetWithNSString:);
  methods[6].selector = @selector(encoder);
  methods[7].selector = @selector(syntax);
  methods[8].selector = @selector(syntaxWithOrgJsoupNodesDocument_OutputSettings_Syntax:);
  methods[9].selector = @selector(prettyPrint);
  methods[10].selector = @selector(prettyPrintWithBoolean:);
  methods[11].selector = @selector(outline);
  methods[12].selector = @selector(outlineWithBoolean:);
  methods[13].selector = @selector(indentAmount);
  methods[14].selector = @selector(indentAmountWithInt:);
  methods[15].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "escapeMode_", "LOrgJsoupNodesEntities_EscapeMode;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "charset_", "LJavaNioCharsetCharset;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "charsetEncoder_", "LJavaNioCharsetCharsetEncoder;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "prettyPrint_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "outline_", "Z", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "indentAmount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "syntax_", "LOrgJsoupNodesDocument_OutputSettings_Syntax;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "escapeMode", "LOrgJsoupNodesEntities_EscapeMode;", "charset", "LJavaNioCharsetCharset;", "LNSString;", "syntax", "LOrgJsoupNodesDocument_OutputSettings_Syntax;", "prettyPrint", "Z", "outline", "indentAmount", "I", "clone", "LOrgJsoupNodesDocument;" };
  static const J2ObjcClassInfo _OrgJsoupNodesDocument_OutputSettings = { "OutputSettings", "org.jsoup.nodes", ptrTable, methods, fields, 7, 0x9, 16, 7, 13, 6, -1, -1, -1 };
  return &_OrgJsoupNodesDocument_OutputSettings;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self java_clone];
}

@end

void OrgJsoupNodesDocument_OutputSettings_init(OrgJsoupNodesDocument_OutputSettings *self) {
  NSObject_init(self);
  self->escapeMode_ = JreLoadEnum(OrgJsoupNodesEntities_EscapeMode, base);
  self->charset_ = JavaNioCharsetCharset_forNameWithNSString_(@"UTF-8");
  self->charsetEncoder_ = [((JavaNioCharsetCharset *) nil_chk(self->charset_)) newEncoder];
  self->prettyPrint_ = true;
  self->outline_ = false;
  self->indentAmount_ = 1;
  self->syntax_ = JreLoadEnum(OrgJsoupNodesDocument_OutputSettings_Syntax, html);
}

OrgJsoupNodesDocument_OutputSettings *new_OrgJsoupNodesDocument_OutputSettings_init() {
  J2OBJC_NEW_IMPL(OrgJsoupNodesDocument_OutputSettings, init)
}

OrgJsoupNodesDocument_OutputSettings *create_OrgJsoupNodesDocument_OutputSettings_init() {
  J2OBJC_CREATE_IMPL(OrgJsoupNodesDocument_OutputSettings, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupNodesDocument_OutputSettings)

J2OBJC_INITIALIZED_DEFN(OrgJsoupNodesDocument_OutputSettings_Syntax)

OrgJsoupNodesDocument_OutputSettings_Syntax *OrgJsoupNodesDocument_OutputSettings_Syntax_values_[2];

@implementation OrgJsoupNodesDocument_OutputSettings_Syntax

+ (IOSObjectArray *)values {
  return OrgJsoupNodesDocument_OutputSettings_Syntax_values();
}

+ (OrgJsoupNodesDocument_OutputSettings_Syntax *)valueOfWithNSString:(NSString *)name {
  return OrgJsoupNodesDocument_OutputSettings_Syntax_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJsoupNodesDocument_OutputSettings_Syntax;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_OutputSettings_Syntax;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "html", "LOrgJsoupNodesDocument_OutputSettings_Syntax;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "xml", "LOrgJsoupNodesDocument_OutputSettings_Syntax;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJsoupNodesDocument_OutputSettings_Syntax, html), &JreEnum(OrgJsoupNodesDocument_OutputSettings_Syntax, xml), "LOrgJsoupNodesDocument_OutputSettings;", "Ljava/lang/Enum<Lorg/jsoup/nodes/Document$OutputSettings$Syntax;>;" };
  static const J2ObjcClassInfo _OrgJsoupNodesDocument_OutputSettings_Syntax = { "Syntax", "org.jsoup.nodes", ptrTable, methods, fields, 7, 0x4019, 2, 2, 4, -1, -1, 5, -1 };
  return &_OrgJsoupNodesDocument_OutputSettings_Syntax;
}

+ (void)initialize {
  if (self == [OrgJsoupNodesDocument_OutputSettings_Syntax class]) {
    JreEnum(OrgJsoupNodesDocument_OutputSettings_Syntax, html) = new_OrgJsoupNodesDocument_OutputSettings_Syntax_initWithNSString_withInt_(@"", 0);
    JreEnum(OrgJsoupNodesDocument_OutputSettings_Syntax, xml) = new_OrgJsoupNodesDocument_OutputSettings_Syntax_initWithNSString_withInt_(@"", 1);
    J2OBJC_SET_INITIALIZED(OrgJsoupNodesDocument_OutputSettings_Syntax)
  }
}

@end

void OrgJsoupNodesDocument_OutputSettings_Syntax_initWithNSString_withInt_(OrgJsoupNodesDocument_OutputSettings_Syntax *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgJsoupNodesDocument_OutputSettings_Syntax *new_OrgJsoupNodesDocument_OutputSettings_Syntax_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgJsoupNodesDocument_OutputSettings_Syntax, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *OrgJsoupNodesDocument_OutputSettings_Syntax_values() {
  OrgJsoupNodesDocument_OutputSettings_Syntax_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJsoupNodesDocument_OutputSettings_Syntax_values_ count:2 type:OrgJsoupNodesDocument_OutputSettings_Syntax_class_()];
}

OrgJsoupNodesDocument_OutputSettings_Syntax *OrgJsoupNodesDocument_OutputSettings_Syntax_valueOfWithNSString_(NSString *name) {
  OrgJsoupNodesDocument_OutputSettings_Syntax_initialize();
  for (int i = 0; i < 2; i++) {
    OrgJsoupNodesDocument_OutputSettings_Syntax *e = OrgJsoupNodesDocument_OutputSettings_Syntax_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJsoupNodesDocument_OutputSettings_Syntax *OrgJsoupNodesDocument_OutputSettings_Syntax_fromOrdinal(NSUInteger ordinal) {
  OrgJsoupNodesDocument_OutputSettings_Syntax_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return OrgJsoupNodesDocument_OutputSettings_Syntax_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupNodesDocument_OutputSettings_Syntax)

J2OBJC_INITIALIZED_DEFN(OrgJsoupNodesDocument_QuirksMode)

OrgJsoupNodesDocument_QuirksMode *OrgJsoupNodesDocument_QuirksMode_values_[3];

@implementation OrgJsoupNodesDocument_QuirksMode

+ (IOSObjectArray *)values {
  return OrgJsoupNodesDocument_QuirksMode_values();
}

+ (OrgJsoupNodesDocument_QuirksMode *)valueOfWithNSString:(NSString *)name {
  return OrgJsoupNodesDocument_QuirksMode_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LOrgJsoupNodesDocument_QuirksMode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LOrgJsoupNodesDocument_QuirksMode;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "noQuirks", "LOrgJsoupNodesDocument_QuirksMode;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "quirks", "LOrgJsoupNodesDocument_QuirksMode;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "limitedQuirks", "LOrgJsoupNodesDocument_QuirksMode;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(OrgJsoupNodesDocument_QuirksMode, noQuirks), &JreEnum(OrgJsoupNodesDocument_QuirksMode, quirks), &JreEnum(OrgJsoupNodesDocument_QuirksMode, limitedQuirks), "LOrgJsoupNodesDocument;", "Ljava/lang/Enum<Lorg/jsoup/nodes/Document$QuirksMode;>;" };
  static const J2ObjcClassInfo _OrgJsoupNodesDocument_QuirksMode = { "QuirksMode", "org.jsoup.nodes", ptrTable, methods, fields, 7, 0x4019, 2, 3, 5, -1, -1, 6, -1 };
  return &_OrgJsoupNodesDocument_QuirksMode;
}

+ (void)initialize {
  if (self == [OrgJsoupNodesDocument_QuirksMode class]) {
    JreEnum(OrgJsoupNodesDocument_QuirksMode, noQuirks) = new_OrgJsoupNodesDocument_QuirksMode_initWithNSString_withInt_(@"", 0);
    JreEnum(OrgJsoupNodesDocument_QuirksMode, quirks) = new_OrgJsoupNodesDocument_QuirksMode_initWithNSString_withInt_(@"", 1);
    JreEnum(OrgJsoupNodesDocument_QuirksMode, limitedQuirks) = new_OrgJsoupNodesDocument_QuirksMode_initWithNSString_withInt_(@"", 2);
    J2OBJC_SET_INITIALIZED(OrgJsoupNodesDocument_QuirksMode)
  }
}

@end

void OrgJsoupNodesDocument_QuirksMode_initWithNSString_withInt_(OrgJsoupNodesDocument_QuirksMode *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

OrgJsoupNodesDocument_QuirksMode *new_OrgJsoupNodesDocument_QuirksMode_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  J2OBJC_NEW_IMPL(OrgJsoupNodesDocument_QuirksMode, initWithNSString_withInt_, __name, __ordinal)
}

IOSObjectArray *OrgJsoupNodesDocument_QuirksMode_values() {
  OrgJsoupNodesDocument_QuirksMode_initialize();
  return [IOSObjectArray arrayWithObjects:OrgJsoupNodesDocument_QuirksMode_values_ count:3 type:OrgJsoupNodesDocument_QuirksMode_class_()];
}

OrgJsoupNodesDocument_QuirksMode *OrgJsoupNodesDocument_QuirksMode_valueOfWithNSString_(NSString *name) {
  OrgJsoupNodesDocument_QuirksMode_initialize();
  for (int i = 0; i < 3; i++) {
    OrgJsoupNodesDocument_QuirksMode *e = OrgJsoupNodesDocument_QuirksMode_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

OrgJsoupNodesDocument_QuirksMode *OrgJsoupNodesDocument_QuirksMode_fromOrdinal(NSUInteger ordinal) {
  OrgJsoupNodesDocument_QuirksMode_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return OrgJsoupNodesDocument_QuirksMode_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(OrgJsoupNodesDocument_QuirksMode)
